{"version":3,"sources":["webpack:///webpack/bootstrap ef8cfe5a018a7596977e?68ad","webpack:///./src/jsmocktool.js?eea9","webpack:///./src/stub/jsstub.js?14e5","webpack:///./src/stub/jsstubMethod.js?e16c","webpack:///./src/testDouble.js?4792","webpack:///./src/mock/jsmock.js?00fb","webpack:///./src/mock/jsmockMethodFactory.js?d2b5","webpack:///./src/mock/jsmockMethod.js?1018","webpack:///./test/jsmock.js","webpack:///./~/qunitjs/qunit/qunit.js","webpack:///./~/process/browser.js","webpack:///(webpack)/buildin/module.js","webpack:///./test/jsstub.js","webpack:///./test/start.js"],"names":[],"mappings":"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ACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAa,mBAAmB;AAChC,eAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yCAAwC,YAAY;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wCAAuC,OAAO;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,MAAK,GAAG,kBAAkB;AAC1B;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAE;;AAEF;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,iBAAiB;AAC5B,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH,GAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAoC,cAAc;AAClD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,KAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA,qCAAoC;AACpC;AACA,GAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;;AAEA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,uBAAuB,EAAE;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQ,SAAS;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB,QAAQ;;AAE1B;;AAEA;AACA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA,mBAAkB,QAAQ;;AAE1B;AACA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA,mBAAkB,QAAQ;;AAE1B;AACA;;AAEA;AACA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;;AAEA,mCAAkC;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAI;AACJ;;AAEA;AACA,KAAI;AACJ;;AAEA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA,KAAI,2DAA2D;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAAyD;AACzD,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAgB;AAChB,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,iBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA,KAAI;;AAEJ;AACA,8EAA6E;AAC7E,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wDAAuD;AACvD,4DAA2D;AAC3D,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,UAAU;AAC9B,MAAK;AACL;AACA;AACA,+BAA8B;AAC9B,gCAA+B;AAC/B;AACA;AACA;;AAEA;AACA,uCAAsC,SAAS;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA,EAAC;AACD;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAa,sBAAsB;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,cAAa,YAAY;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,IAAG;AACH,GAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA,gBAAe;AACf;AACA,gBAAe;AACf;AACA,iBAAgB;AAChB;AACA,GAAE;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAa,sBAAsB;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAwC;;AAExC;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAa,wBAAwB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAc,wBAAwB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA,IAAG;AACH,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kCAAiC,OAAO;AACxC;;AAEA,2CAA0C,OAAO;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA8B,iBAAiB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAa,4BAA4B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,2BAA2B;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;;AAEA;AACA,kEAAiE;AACjE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,0BAAyB,eAAe;AACxC;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,aAAY,SAAS;AACrB;AACA;AACA,cAAa,8BAA8B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,wBAAuB;AACvB,cAAa,QAAQ;AACrB;;AAEA;AACA,eAAc;;AAEd;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,8BAA8B;AAC1C,aAAY,QAAQ;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,eAAc,kBAAkB;AAChC,yBAAwB;AACxB,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,aAAY,QAAQ;AACpB;AACA;AACA,aAAY,OAAO;AACnB,cAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe;AACf;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,cAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,cAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,UAAU;;AAExB;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,cAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,wBAAuB;AACvB,cAAa,QAAQ;AACrB;;AAEA;AACA,eAAc;;AAEd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,KAAI,OAAO;AACX;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,iBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C,aAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA,eAAc,kBAAkB;AAChC;AACA;AACA,gBAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED,EAAC;;;;;;;;ACruID;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"jsmocktool.test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ef8cfe5a018a7596977e\n **/","import stub from './stub/jsstub';\nimport mock from './mock/jsmock';\n\nexport {stub, mock};\n\n\n/** WEBPACK FOOTER **\n ** ./src/jsmocktool.js\n **/","import StubMethod from './jsstubMethod';\r\nimport TestDouble from '../testDouble';\r\n\r\nclass Stub extends TestDouble{\r\n\r\n    constructor(name, type = \"object\"){\r\n        super(name, type);\r\n        this.type = \"Stub\";\r\n    }\r\n\r\n    should_receive(functionName){\r\n        this.getTestDouble()[functionName] = () => {\r\n            if(this.returnValue != \"_js_stub_none\"){\r\n                return this.returnValue;\r\n            }\r\n        };\r\n        return new StubMethod(this);\r\n    }\r\n\r\n}\r\n\r\nfunction stubWrap(name, type){\r\n    if(!(this instanceof Stub)){\r\n        return new Stub(name,type);\r\n    }else{\r\n        this.createTestDouble(name,type);\r\n    }\r\n};\r\n\r\nstubWrap.OBJECT = TestDouble.OBJECT;\r\nstubWrap.INSTANCE = TestDouble.INSTANCE;\r\n\r\nexport default stubWrap;\n\n\n/** WEBPACK FOOTER **\n ** ./src/stub/jsstub.js\n **/","class StubMethod{\n    constructor(stub){\n        this.stub = stub;\n    }\n\n    and_return(returnValue){\n        this.stub.returnValue = returnValue;\n    }\n}\n\nexport default StubMethod;\n\n\n/** WEBPACK FOOTER **\n ** ./src/stub/jsstubMethod.js\n **/","var global = window;\n\nclass TestDouble{\n    static INSTANCE = \"instance\";\n    static OBJECT = \"object\";\n\n    constructor(name, type){\n        this.createTestDouble(name, type);\n    }\n\n    createTestDouble(name, type){\n        this.returnValue = \"_js_testDouble_none\";\n        this.testDoubleType = type;\n\n        if(typeof name == \"string\"){\n            this.makeEnableObj(name, type);\n        }else if(typeof name === \"object\" || typeof name == \"function\"){\n        \tthis.testDoubleObj = name;\n        }else{\n            throw new Error(`Name of ${this.type} is incorrect.The Type only have String or Object or Function.`);\n        }\n    }\n\n    getTestDouble(){\n        if(this.testDoubleType === TestDouble.OBJECT){\n            return this.testDoubleObj;\n        }else{\n            return this.testDoubleObj.prototype;\n        }\n    }\n\n    makeEnableObj(name, type){\n        let depth = name.split(\".\");\n        let objectName = depth[0];\n        var obj = global;\n        var returnObj;\n\n        if(depth.length > 1){\n            depth.splice(0,depth.length-1).forEach((v, i) => {\n                if (typeof obj[v] == \"undefined\"){\n                    obj[v] = {};\n                } \n                obj = obj[v];\n            });\n            objectName = depth[depth.length-1];\n        }\n\n        returnObj = obj[objectName];\n        this.testDoubleObj = returnObj\n        if(type === TestDouble.OBJECT && !returnObj){\n            this.testDoubleObj = obj[objectName] = {};\n        }else if(type === TestDouble.INSTANCE && !returnObj){\n            this.testDoubleObj = obj[objectName] = ()=>{};\n            this.testDoubleObj.prototype = obj[objectName].prototype = {};\n        }\n    }\n}\n\nexport default TestDouble;\n\n\n/** WEBPACK FOOTER **\n ** ./src/testDouble.js\n **/","import MockMethodFactory from './jsmockMethodFactory';\nimport TestDouble from '../testDouble';\n\nclass Mock extends TestDouble{\n\n    constructor(name, type = \"object\"){\n        super(name, type);\n        this.type = \"Mock\";\n    }\n\n    should_receive( methodName ){\n        return MockMethodFactory.getMethod(this.getTestDouble(),methodName);\n    }\n\n    reset_all(){\n        var obj = MockMethodFactory.getData(this.getTestDouble());\n        for(var i in obj){\n            if(i != \"current_obj\"){\n                obj[i].record = {\"total\":0,\"param\":{}};\n            }\n        }\n    }\n\n    reset( methodName ){\n        var obj = MockMethodFactory.getData(this.getTestDouble());\n        obj[methodName].record = {\"total\":0,\"param\":{}};\n    }\n\n    verify( methodName ){\n        var obj = MockMethodFactory.getData(this.getTestDouble());\n        if( obj[methodName] ){\n            if( obj[methodName].record.total === 0 ){\n                throw new Error(`${methodName} isn't called.`);\n            }else{\n                return obj[methodName].record;\n            }\n        }else{\n            throw new Error(`${methodName} isn't method.`);\n        }\n    }\n\n    verify_all(){\n        var obj = MockMethodFactory.getData(this.getTestDouble());\n        var returnValue = {};\n        for( var i in obj ){\n            if( i != \"current_obj\" ) returnValue[i] = this.verify(i);\n        }\n        return returnValue;\n    }\n\n}\n\nfunction mockWrap(name, type){\n    if(!(this instanceof Mock)){\n        return new Mock(name,type);\n    }else{\n        this.createTestDouble(name,type);\n    }\n};\n\nmockWrap.OBJECT = TestDouble.OBJECT;\nmockWrap.INSTANCE = TestDouble.INSTANCE;\nmockWrap.anything = () => \"_js_mock_anything_param\";\n\nexport default mockWrap;\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mock/jsmock.js\n **/","import MockMethod from './jsmockMethod';\n\nvar MockMethodFactory = {\n    storage : [\n    //      {\n    //          current_obj : {}, object\n    //          current_functions : {} mock method\n    //      }\n    ],\n    createData : function(obj){\n        var dataObj = {current_obj : obj};\n        this.storage.push(dataObj);\n\n        return dataObj;\n    },\n    createMethod : function(obj, methodName){\n        var dataObj = this.getData(obj);\n        dataObj[methodName] = new MockMethod(obj,methodName);\n\n        return dataObj[methodName];\n    },\n    getData : function(obj){\n        for (var i = 0, l = this.storage.length; i < l; i++) {\n            if (this.storage[i].current_obj == obj) {\n                return this.storage[i];\n            }\n        }\n        return this.createData(obj);\n    },\n    getMethod : function(obj, methodName){\n        var dataObj = this.getData(obj);\n        if(!dataObj[methodName]){\n            dataObj[methodName] = this.createMethod(obj,methodName);\n        }\n        return dataObj[methodName];\n    }\n};\n\nexport default MockMethodFactory;\n\n\n/** WEBPACK FOOTER **\n ** ./src/mock/jsmockMethodFactory.js\n **/","class MockMethod{\n\n    constructor( obj, methodName ){\n        \n        this.excuteObjs = {\n        //      key:{\n        //          arg:[],\n        //          type:\"function\",\n        //          excute : function(){}\n        //      }\n        };\n        this.record = {\"total\":0,\"param\":{}};\n        this.currentParam = JSON.stringify([]);\n        this.excuteObjs[this.currentParam] = {};\n        this.setup(obj, methodName);\n\n    }\n\n    setup(obj, methodName){\n        var that = this;\n        obj[methodName] = function(){\n            that.record.total++;\n            var argString = JSON.stringify(argumentsToArray(arguments));\n\n            if(that.record.param[argString]){\n                that.record.param[argString] += 1;\n            }else{\n                that.record.param[argString] = 1;\n            }\n\n            var dataObj = that.excuteObjs[argString];\n\n            if(dataObj){\n                if(dataObj.type === \"function\"){\n                    return dataObj.excute.apply(dataObj,argumentsToArray(arguments));\n                }else if(dataObj.type === \"exception\"){\n                    throw dataObj.excute;\n                }else if(dataObj.type === \"return\"){\n                    return dataObj.excute;\n                }\n            }else{\n                for(var i in that.excuteObjs){\n                    var  currentParam = argumentsToArray(arguments);\n                    var arg = that.excuteObjs[i].arg;\n\n                    if(arg&&(arg.length === currentParam.length)){\n                        var paramMatch = true;\n                        for(var j = 0 , l = arg.length; j < l ; j++){\n                            if(arg[j] != currentParam[j] && arg[j] != \"_js_mock_anything_param\"){\n                                paramMatch = false;\n                                break;\n                            }\n                        }\n                        if(paramMatch){\n                            return that.excuteObjs[i].excute;\n                        }\n                    }\n                }\n            }\n        };\n\n    }\n\n    with_param(){\n        var arg = argumentsToArray(arguments);\n        this.currentParam = JSON.stringify(arg);\n        this.excuteObjs[this.currentParam] = {\n            arg : arg\n        };\n\n        return this;\n    }\n\n    _and_template( type, excute){\n        this.excuteObjs[this.currentParam].type = type;\n        this.excuteObjs[this.currentParam].excute = excute;\n        this.currentParam = JSON.stringify([]);\n    }\n\n    and_return( returnVal ){\n        this._and_template(\"return\", returnVal);\n    }\n\n    and_function( returnFunction ){\n        this._and_template(\"function\", returnFunction);\n    }\n\n    and_throw( returnException ){\n        this._and_template(\"exception\", returnException);\n    }\n\n};\n\nfunction argumentsToArray(arg){\n    var returnVal = [];\n    if(!!arg.length){\n        for(var i = 0 , l = arg.length; i < l; i++){\n            returnVal[i] = arg[i];\n        }\n    }\n    return returnVal;\n}\n\nexport default MockMethod;\n\n\n/** WEBPACK FOOTER **\n ** ./src/mock/jsmockMethod.js\n **/","/**\n * @author mixed\n */\n\n import { mock } from '../src/jsmocktool';\n import { module, test } from '../node_modules/qunitjs/qunit/qunit';\n\n var global = window;\n  \n  module(\"jsmock - Object type\",{\n    \"beforeEach\":function(){\n      this.mock = mock(\"RECEIVE\");\n      this.mock_test1 = \"\";\n      this.mock_test2 = \"\";\n      this.mock_test3 = \"\";\n    },\n    \"afterEach\":function(){\n      this.mock = undefined;\n      RECEIVE = undefined;\n    }\n  });\n\n  test(\"Must be first prameter is string or object\",function(assert){\n    //Given\n    //When\n    mock(\"FOO\");\n    //Then\n    assert.deepEqual(FOO,{});\n    \n    //Given\n    var BAR = {};\n    //When\n    mock(BAR);\n    //Then\n    assert.deepEqual(BAR, BAR);\n  });\n\n  test(\"Must be second parameter is 'instance','object',none.\",function(assert){\n    //Given\n    //When\n    mock(\"FOO2\");\n    //Then\n    assert.deepEqual(FOO2, {});\n\n    //Given\n    //When\n    mock(\"FOO3\",mock.INSTANCE);\n    //Then\n    assert.equal(FOO3.constructor, Function);\n  });\n\n  test(\"The should_receive is set method of mock Object.\",function(assert){\n    //Given\n    var receiveMock = mock(\"RECEIVE\");\n    //Then\n    receiveMock.should_receive(\"test\");\n    //When\n    assert.equal(RECEIVE.test.constructor, Function);\n\n    //Given\n    var receiveMock2 = mock(\"RECEIVE2\",mock.INSTANCE);\n    //Then\n    receiveMock2.should_receive(\"test\");\n    //When\n    assert.equal(RECEIVE2.prototype.test.constructor, Function);\n  });\n\n  test(\"Return value of should_receive is MockMethod.\",function(assert){\n    //Given\n    var receive = mock(\"RECEIVE3\");\n    //When\n    var mock_method = receive.should_receive(\"test\");\n    //The MockMethod is private. so I can't test.\n    //Instead, I made a Ducktyping test(?).\n    //I believe correct when The return value of should_receive have and_return function.\n    // ok(stub_obj instanceof MockMethod);\n    //Then\n    assert.equal(mock_method.and_return.constructor, Function);\n  });\n\n  test(\"The and_return is  setting value to return.\",function(assert){\n    //Given\n    mock(\"RECEIVE4\").should_receive(\"test\").and_return(3);\n    //When\n    var returnVal = RECEIVE4.test();\n    //Then\n    assert.equal(returnVal,3);\n  });\n\n  test(\"If use with_param, mock will return value when same param.\",function(assert){\n    //Given\n    mock(\"RECEIVE4\").should_receive(\"test\").with_param(1,2).and_return(4);\n    //When\n    var returnVal = RECEIVE4.test(1,2);\n    //Then\n    assert.equal(returnVal,4);  \n  });\n\n  test(\"The Mock must be work mock before set parameter when add new parameter.\",function(assert){\n    //Given\n    this.mock.should_receive(\"test\").and_return(3);\n    this.mock.should_receive(\"test\").with_param(1,2).and_return(4);\n    this.mock.should_receive(\"test\").with_param(1,2,3).and_return(5);\n    //When\n    var noneParam = RECEIVE.test();\n    var oneParam  = RECEIVE.test(1,2);\n    var twoParam  = RECEIVE.test(1,2,3);\n    //Then\n    assert.equal(noneParam , 3);\n    assert.equal(oneParam  , 4);\n    assert.equal(twoParam  , 5);\n  });\n\n  test(\"The Mock must be change return value when add same parameter.\",function(assert){\n    //Given\n    this.mock.should_receive(\"test\").and_return(3);\n    this.mock.should_receive(\"test\").with_param(1,2).and_return(4);\n    this.mock.should_receive(\"test\").with_param(1,2).and_return(5);\n    //When\n    var noneParam = RECEIVE.test();\n    var twoParam  = RECEIVE.test(1,2);\n    //Then\n    assert.equal(noneParam, 3);\n    assert.equal(twoParam , 5);\n  });\n\n  test(\"The add_throw is throw exception when match param.\",function(assert) {\n    //Given\n    var error_message = \"\";\n    this.mock.should_receive(\"test2\").and_throw(new Error(\"and_throw test.\"));\n    //When\n    try{\n      RECEIVE.test2();\n    }catch(e){\n      error_message = e.message;\n    }\n    //Then\n    assert.equal(error_message,\"and_throw test.\");\n  });\n\n  test(\"If set with_param of and_throw then throw exception when match parameter.\",function(assert) {\n    //Given\n    this.mock.should_receive(\"test2\").with_param(1,2).and_throw(new Error(\"and_throw test2.\"));\n    var error_message = \"\";\n\n    //When\n    try{\n      RECEIVE.test2(1,2);\n    }catch(e){\n      error_message = e.message;\n    }\n\n    //Then\n    assert.equal(error_message,\"and_throw test2.\");\n  });\n\n  test(\"The and_throw is well work when change parameter\",function  (assert) {\n    //Given\n    this.mock.should_receive(\"test2\").with_param().and_throw(new Error(\"and_throw test\"));\n    this.mock.should_receive(\"test2\").with_param(1,2).and_throw(new Error(\"and_throw test2\"));\n    this.mock.should_receive(\"test2\").with_param(1,2,3).and_throw(new Error(\"and_throw test3\"));\n    var error_message = \"\";\n\n    //When\n    try{\n     RECEIVE.test2();\n    }catch(e){\n     error_message = e.message;\n    }\n    //Then\n    assert.equal(error_message,\"and_throw test\");\n\n    //When\n    try{\n     RECEIVE.test2(1,2);\n    }catch(e){\n     error_message = e.message;\n    }\n    //Then\n    assert.equal(error_message,\"and_throw test2\");\n\n    //When\n    try{\n     RECEIVE.test2(1,2,3);\n    }catch(e){\n     error_message = e.message;\n    }\n    //Then\n    assert.equal(error_message,\"and_throw test3\");\n  });\n  test(\"The and_throw throw new exception when some function, same parameter, change exception.\",function  (assert) {\n    //Given\n    this.mock.should_receive(\"test2\").with_param(1,2,3).and_throw(new Error(\"and_throw test\"));\n    var error_message = \"\";\n    //When\n    try{\n     RECEIVE.test2(1,2,3);\n    }catch(e){\n     error_message = e.message;\n    }\n    //Then\n    assert.equal(error_message,\"and_throw test\");\n\n    //Then\n    this.mock.should_receive(\"test2\").with_param(1,2,3).and_throw(new Error(\"change throw\"));\n    try{\n     RECEIVE.test2(1,2,3);\n    }catch(e){\n     error_message = e.message;\n    }\n    //When\n    assert.equal(error_message,\"change throw\"); \n  });\n\n  test(\"The and_function run function when set new function\",function  (assert) {\n\n    //Given\n    var that = this;\n    this.mock.should_receive(\"test3\").and_function(()=>{\n      that.mock_test1=\"first\";\n    });\n    //Then\n    RECEIVE.test3();\n    //When\n    assert.equal(that.mock_test1,\"first\");  \n  });\n\n  test(\"If set a with_param then the and_functon run function when only match parameter.\",function(assert){\n    //Given\n    var that = this;\n    this.mock.should_receive(\"test3\").with_param(1,2).and_function(() => {\n     that.mock_test2 = \"second\";\n    });\n    //Then\n    RECEIVE.test3(1,2);\n    //When\n    assert.equal(that.mock_test2,\"second\");\n  });\n\n  test(\"Then and_function is well work when same function change parameter.\",function(assert){\n    //Given\n    var that = this;\n    this.mock.should_receive(\"test3\").with_param().and_function(() => {\n     that.mock_test1=\"first\";\n    });\n    this.mock.should_receive(\"test3\").with_param(1,2).and_function(() => {\n     that.mock_test2=\"second\";\n    });\n    this.mock.should_receive(\"test3\").with_param(1,2,3).and_function(() => {\n     that.mock_test3=\"third\";\n    });\n    //When\n    RECEIVE.test3();\n    //Then\n    assert.equal(that.mock_test1,\"first\");\n\n    //When\n    RECEIVE.test3(1,2);\n    //Then\n    assert.equal(that.mock_test2,\"second\");\n\n    //When\n    RECEIVE.test3(1,2,3);\n    //Then\n    assert.equal(that.mock_test3,\"third\");\n  });\n  test(\"The and_function run new function when some function, same parameter, change and_function.\",function(assert){\n    //Given\n    var that = this;\n    this.mock.should_receive(\"test3\").with_param(1,2,3).and_function(() => {\n     that.mock_test3=\"third\";\n    });\n    this.mock.should_receive(\"test3\").with_param(1,2,3).and_function(() => {\n     that.mock_test3=\"change third\";\n    });\n    //When\n    RECEIVE.test3(1,2,3);\n    //Then\n    assert.equal(that.mock_test3,\"change third\");\n  });\n  test(\"If use Mock.anything when run function without reference to parameter.\",function(assert){\n    //Given\n    this.mock.should_receive(\"test\").with_param(1,2).and_return(\"1\");\n    this.mock.should_receive(\"test\").with_param(1,2,mock.anything()).and_return(\"2\");\n    this.mock.should_receive(\"test\").with_param(1,2,mock.anything(),mock.anything()).and_return(\"3\");\n\n    //When, Then\n    assert.equal(RECEIVE.test(1,2),\"1\");\n    assert.equal(RECEIVE.test(1,2,3),\"2\");\n    assert.equal(RECEIVE.test(1,2,1),\"2\");\n    assert.equal(RECEIVE.test(1,2,4),\"2\");\n    assert.equal(RECEIVE.test(1,2,4,5),\"3\");\n    assert.equal(RECEIVE.test(1,2,4,6),\"3\");\n  });\n\n  //    'param에 anything이 들어간 파라메터에서 다시 설정한 경우에 다시 설정한 값으로 반환 해야 한다.':function(){\n  //      mock(\"Foo\").should_receive(\"test\").with_param(\"5\",\"6\",Mock.anything()).and_return(\"5\");\n  //      value_of(Foo.test(\"5\",\"6\",\"3\")).should_be(\"5\");\n        \n  //      mock(\"Foo\").should_receive(\"test\").with_param(\"5\",\"6\",Mock.anything()).and_return(\"6\");\n  //      value_of(Foo.test(\"5\",\"6\",\"3\")).should_be(\"6\");\n        \n  //    },\n\n  module(\"jsmock - other type\",{\n    \"beforeEach\":function(){\n      \n      this.mock_test1 = \"\";\n      this.mock_test2 = \"\";\n      this.mock_test3 = \"\";\n    },\n    \"afterEach\":function(){\n      this.mock = undefined;\n      global.MockInstance = undefined;\n    }\n  });\n\n  test(\"The instance type is well work too.\",function(assert){\n    //Given\n    var that = this;\n    var receive = mock(\"MockInstance\",mock.INSTANCE);\n    receive.should_receive(\"test\").with_param(1).and_return(\"1\");\n    receive.should_receive(\"test\").with_param(2).and_throw(new Error(\"test\"));\n    receive.should_receive(\"test\").with_param(3).and_function(() => {\n      that.mock_test1=\"test\";\n    });\n    var errormessage = \"\"; \n\n    //When\n    var mockInstance = new MockInstance();\n    //Then\n    assert.equal(mockInstance.test(1),\"1\");\n\n    //When\n    try{\n     mockInstance.test(2);\n    }catch(e){\n     errormessage = e.message;\n    }\n    //Then\n    assert.equal(errormessage,\"test\");\n\n    //When\n    mockInstance.test(3);\n    //Then\n    assert.equal(that.mock_test1,\"test\");\n  });\n\n  test(\"The normal functon is well work too.\",function(assert){\n    //Given\n    var that = this;\n    var receive = mock(global);\n    receive.should_receive(\"commonfunc\").with_param(1).and_return(\"1\");\n    receive.should_receive(\"commonfunc\").with_param(2).and_throw(new Error(\"test2\"));\n    receive.should_receive(\"commonfunc\").with_param(3).and_function(() => {\n     that.mock_test1=\"commonfunc\";\n    });\n    var errormessage = \"\"; \n\n    //Then\n    var returnVal = commonfunc(1);\n    //When\n    assert.equal(returnVal,\"1\");\n    \n\n    //Then\n    try{\n     commonfunc(2);\n    }catch(e){\n     errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"test2\");\n\n    //Then\n    commonfunc(3);\n    //When\n    assert.equal(that.mock_test1,\"commonfunc\");\n  });\n\n  test(\"The namespace type is well work too.\",function(assert){\n    //Given\n    mock(\"aaa.bbb.ccc.ddd\").should_receive(\"test\").and_return(\"test\");\n    //Then,When\n    assert.equal(aaa.bbb.ccc.ddd.test(),\"test\");\n\n    //Given\n    mock(\"aaaa.bbbb.cccc\",mock.INSTANCE).should_receive(\"test\").and_return(\"test\");\n    //Then,When\n    assert.equal(new aaaa.bbbb.cccc().test(),\"test\");\n\n    //Given\n    global[\"aaaaa\"] = {};\n    aaaaa.bbbbb = {};\n    mock(\"aaaaa.bbbbb\").should_receive(\"test\").and_return(\"test\");\n    //Then,When\n    assert.equal(aaaaa.bbbbb.test(),\"test\");\n\n    //Given\n    mock(\"aaaaa.bbbbb.ccccc\").should_receive(\"test\").and_return(\"test\");\n    //Then,When\n    assert.equal(aaaaa.bbbbb.ccccc.test(),\"test\");\n  });\n\n  test(\"The with_param well work when use namespace.\",function(assert){\n    //Given\n    var that = this;\n    mock(\"param.test\").should_receive(\"commonfunc\").with_param(1).and_return(\"1\");\n    mock(\"param.test\").should_receive(\"commonfunc\").with_param(2).and_throw(new Error(\"test2\"));\n    mock(\"param.test\").should_receive(\"commonfunc\").with_param(3).and_function(() => {\n     that.mock_test1=\"commonfunc\";\n    });\n\n    //Then, When\n    assert.equal(param.test.commonfunc(1),\"1\");\n\n    //Given\n    var errormessage = \"\"; \n    try{\n     param.test.commonfunc(2);\n    }catch(e){\n     errormessage = e.message;\n    }\n    //Then, When\n    assert.equal(errormessage,\"test2\");\n\n    //Then\n    param.test.commonfunc(3);\n    //When\n    assert.equal(that.mock_test1,\"commonfunc\");  \n  });\n\n  module(\"jsmock - verify\",{\n    \"beforeEach\":function(){\n      this.mock = mock(\"Verify\");\n      this.mock_test1 = \"\";\n      this.mock_test2 = \"\";\n      this.mock_test3 = \"\";\n    },\n    \"afterEach\":function(){\n      this.mock = undefined;\n      Verify = undefined;\n    }\n  });\n\n  test(\"The verify is well work.\",function(assert){\n    //Given\n    this.mock.should_receive(\"kall\").with_param(1,2).and_return(\"1\");\n    this.mock.should_receive(\"kall2\").and_return(\"1\");\n    Verify.kall(1,2);\n    var errormessage = \"\";\n    //Then\n    var result = this.mock.verify(\"kall\");\n    //When\n    assert.deepEqual(result,{\"total\":1, \"param\":{\"[1,2]\":1}});\n\n    //Then\n    try{\n      mock(\"Verify\").verify(\"kall2\");\n    }catch(e){\n      errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"kall2 isn't called.\");\n\n    //Then\n    try{\n      mock(\"Verify\").verify(\"kall3\");\n    }catch(e){\n      errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"kall3 isn't method.\");\n  });\n  test(\"The verify_all is check all method.\",function(assert){\n\n    //Given\n    mock(\"Verify2\").should_receive(\"kall\").with_param(1,2).and_return(\"1\");\n    mock(\"Verify2\").should_receive(\"kall2\").and_return(\"1\");\n    Verify2.kall(1,2);\n    Verify2.kall2();\n    var returnVal;\n    //Then\n    returnVal = mock(\"Verify2\").verify_all();\n    //When\n    assert.deepEqual(returnVal,{\"kall\":{\"total\":1, \"param\":{\"[1,2]\":1}}, \"kall2\":{\"total\":1, \"param\":{\"[]\":1}}});\n\n\n    //Given\n    mock(\"Verify3\").should_receive(\"kall\").with_param(1,2).and_return(\"1\");\n    var errormessage;\n    //Then\n    try{\n      mock(\"Verify3\").verify_all();\n    }catch(e){\n      errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"kall isn't called.\");\n  });\n  test(\"The reset is remove info of function call.\",function(assert){\n    //Given\n    mock(\"Verify4\").should_receive(\"kall\").with_param(1,2).and_return(\"1\");\n    Verify4.kall(1,2);\n    //Then\n    var returnVal = mock(\"Verify4\").verify_all();\n    //When\n    assert.deepEqual(returnVal,{\"kall\":{\"total\":1, \"param\":{\"[1,2]\":1}}});\n    \n    //Given\n    var errormessage;\n    //Then\n    mock(\"Verify4\").reset(\"kall\");\n    try{\n      mock(\"Verify4\").verify(\"kall\");\n    }catch(e){\n      errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"kall isn't called.\");\n  });\n\n  test(\"The reset_all is remove all info of function call.\",function(assert){\n    //Given\n    mock(\"Verify5\").should_receive(\"kall\").with_param(1,2).and_return(\"1\");\n    mock(\"Verify5\").should_receive(\"kall2\").and_return(\"1\");\n    Verify5.kall(1,2);\n    Verify5.kall2();\n    //Then\n    var returnVal = mock(\"Verify5\").verify_all();\n    //When\n    assert.deepEqual(returnVal,{\"kall\":{\"total\":1, \"param\":{\"[1,2]\":1}}, \"kall2\":{\"total\":1, \"param\":{\"[]\":1}}});\n\n    //Given\n    var errormessage;\n    //Then\n    mock(\"Verify5\").reset_all();\n    try{\n      mock(\"Verify5\").verify_all();\n    }catch(e){\n      errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"kall isn't called.\");\n  });\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./test/jsmock.js\n **/","/*!\n * QUnit 2.0.0-rc1\n * https://qunitjs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2016-04-19T16:15Z\n */\n\n( function( global ) {\n\nvar QUnit = {};\n\nvar Date = global.Date;\nvar now = Date.now || function() {\n\treturn new Date().getTime();\n};\n\nvar setTimeout = global.setTimeout;\nvar clearTimeout = global.clearTimeout;\n\n// Store a local window from the global to allow direct references.\nvar window = global.window;\n\nvar defined = {\n\tdocument: window && window.document !== undefined,\n\tsetTimeout: setTimeout !== undefined,\n\tsessionStorage: ( function() {\n\t\tvar x = \"qunit-test-string\";\n\t\ttry {\n\t\t\tsessionStorage.setItem( x, x );\n\t\t\tsessionStorage.removeItem( x );\n\t\t\treturn true;\n\t\t} catch ( e ) {\n\t\t\treturn false;\n\t\t}\n\t}() )\n};\n\nvar fileName = ( sourceFromStacktrace( 0 ) || \"\" ).replace( /(:\\d+)+\\)?/, \"\" ).replace( /.+\\//, \"\" );\nvar globalStartCalled = false;\nvar runStarted = false;\n\nvar autorun = false;\n\nvar toString = Object.prototype.toString,\n\thasOwn = Object.prototype.hasOwnProperty;\n\n// Returns a new Array with the elements that are in a but not in b\nfunction diff( a, b ) {\n\tvar i, j,\n\t\tresult = a.slice();\n\n\tfor ( i = 0; i < result.length; i++ ) {\n\t\tfor ( j = 0; j < b.length; j++ ) {\n\t\t\tif ( result[ i ] === b[ j ] ) {\n\t\t\t\tresult.splice( i, 1 );\n\t\t\t\ti--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\n// From jquery.js\nfunction inArray( elem, array ) {\n\tif ( array.indexOf ) {\n\t\treturn array.indexOf( elem );\n\t}\n\n\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\tif ( array[ i ] === elem ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * Makes a clone of an object using only Array or Object as base,\n * and copies over the own enumerable properties.\n *\n * @param {Object} obj\n * @return {Object} New object with only the own properties (recursively).\n */\nfunction objectValues ( obj ) {\n\tvar key, val,\n\t\tvals = QUnit.is( \"array\", obj ) ? [] : {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwn.call( obj, key ) ) {\n\t\t\tval = obj[ key ];\n\t\t\tvals[ key ] = val === Object( val ) ? objectValues( val ) : val;\n\t\t}\n\t}\n\treturn vals;\n}\n\nfunction extend( a, b, undefOnly ) {\n\tfor ( var prop in b ) {\n\t\tif ( hasOwn.call( b, prop ) ) {\n\t\t\tif ( b[ prop ] === undefined ) {\n\t\t\t\tdelete a[ prop ];\n\t\t\t} else if ( !( undefOnly && typeof a[ prop ] !== \"undefined\" ) ) {\n\t\t\t\ta[ prop ] = b[ prop ];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n}\n\nfunction objectType( obj ) {\n\tif ( typeof obj === \"undefined\" ) {\n\t\treturn \"undefined\";\n\t}\n\n\t// Consider: typeof null === object\n\tif ( obj === null ) {\n\t\treturn \"null\";\n\t}\n\n\tvar match = toString.call( obj ).match( /^\\[object\\s(.*)\\]$/ ),\n\t\ttype = match && match[ 1 ];\n\n\tswitch ( type ) {\n\t\tcase \"Number\":\n\t\t\tif ( isNaN( obj ) ) {\n\t\t\t\treturn \"nan\";\n\t\t\t}\n\t\t\treturn \"number\";\n\t\tcase \"String\":\n\t\tcase \"Boolean\":\n\t\tcase \"Array\":\n\t\tcase \"Set\":\n\t\tcase \"Map\":\n\t\tcase \"Date\":\n\t\tcase \"RegExp\":\n\t\tcase \"Function\":\n\t\tcase \"Symbol\":\n\t\t\treturn type.toLowerCase();\n\t}\n\tif ( typeof obj === \"object\" ) {\n\t\treturn \"object\";\n\t}\n}\n\n// Safe object type checking\nfunction is( type, obj ) {\n\treturn QUnit.objectType( obj ) === type;\n}\n\n// Doesn't support IE9, it will return undefined on these browsers\n// See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\nfunction extractStacktrace( e, offset ) {\n\toffset = offset === undefined ? 4 : offset;\n\n\tvar stack, include, i;\n\n\tif ( e.stack ) {\n\t\tstack = e.stack.split( \"\\n\" );\n\t\tif ( /^error$/i.test( stack[ 0 ] ) ) {\n\t\t\tstack.shift();\n\t\t}\n\t\tif ( fileName ) {\n\t\t\tinclude = [];\n\t\t\tfor ( i = offset; i < stack.length; i++ ) {\n\t\t\t\tif ( stack[ i ].indexOf( fileName ) !== -1 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tinclude.push( stack[ i ] );\n\t\t\t}\n\t\t\tif ( include.length ) {\n\t\t\t\treturn include.join( \"\\n\" );\n\t\t\t}\n\t\t}\n\t\treturn stack[ offset ];\n\t}\n}\n\nfunction sourceFromStacktrace( offset ) {\n\tvar error = new Error();\n\n\t// Support: Safari <=7 only, IE <=10 - 11 only\n\t// Not all browsers generate the `stack` property for `new Error()`, see also #636\n\tif ( !error.stack ) {\n\t\ttry {\n\t\t\tthrow error;\n\t\t} catch ( err ) {\n\t\t\terror = err;\n\t\t}\n\t}\n\n\treturn extractStacktrace( error, offset );\n}\n\n/**\n * Config object: Maintain internal state\n * Later exposed as QUnit.config\n * `config` initialized at top of scope\n */\nvar config = {\n\n\t// The queue of tests to run\n\tqueue: [],\n\n\t// Block until document ready\n\tblocking: true,\n\n\t// By default, run previously failed tests first\n\t// very useful in combination with \"Hide passed tests\" checked\n\treorder: true,\n\n\t// By default, modify document.title when suite is done\n\taltertitle: true,\n\n\t// HTML Reporter: collapse every test except the first failing test\n\t// If false, all failing tests will be expanded\n\tcollapse: true,\n\n\t// By default, scroll to top of the page when suite is done\n\tscrolltop: true,\n\n\t// Depth up-to which object will be dumped\n\tmaxDepth: 5,\n\n\t// When enabled, all tests must call expect()\n\trequireExpects: false,\n\n\t// Placeholder for user-configurable form-exposed URL parameters\n\turlConfig: [],\n\n\t// Set of all modules.\n\tmodules: [],\n\n\t// Stack of nested modules\n\tmoduleStack: [],\n\n\t// The first unnamed module\n\tcurrentModule: {\n\t\tname: \"\",\n\t\ttests: []\n\t},\n\n\tcallbacks: {}\n};\n\n// Push a loose unnamed module to the modules collection\nconfig.modules.push( config.currentModule );\n\n// Register logging callbacks\nfunction registerLoggingCallbacks( obj ) {\n\tvar i, l, key,\n\t\tcallbackNames = [ \"begin\", \"done\", \"log\", \"testStart\", \"testDone\",\n\t\t\t\"moduleStart\", \"moduleDone\" ];\n\n\tfunction registerLoggingCallback( key ) {\n\t\tvar loggingCallback = function( callback ) {\n\t\t\tif ( objectType( callback ) !== \"function\" ) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"QUnit logging methods require a callback function as their first parameters.\"\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconfig.callbacks[ key ].push( callback );\n\t\t};\n\n\t\treturn loggingCallback;\n\t}\n\n\tfor ( i = 0, l = callbackNames.length; i < l; i++ ) {\n\t\tkey = callbackNames[ i ];\n\n\t\t// Initialize key collection of logging callback\n\t\tif ( objectType( config.callbacks[ key ] ) === \"undefined\" ) {\n\t\t\tconfig.callbacks[ key ] = [];\n\t\t}\n\n\t\tobj[ key ] = registerLoggingCallback( key );\n\t}\n}\n\nfunction runLoggingCallbacks( key, args ) {\n\tvar i, l, callbacks;\n\n\tcallbacks = config.callbacks[ key ];\n\tfor ( i = 0, l = callbacks.length; i < l; i++ ) {\n\t\tcallbacks[ i ]( args );\n\t}\n}\n\n( function() {\n\tif ( !defined.document ) {\n\t\treturn;\n\t}\n\n\t// `onErrorFnPrev` initialized at top of scope\n\t// Preserve other handlers\n\tvar onErrorFnPrev = window.onerror;\n\n\t// Cover uncaught exceptions\n\t// Returning true will suppress the default browser handler,\n\t// returning false will let it run.\n\twindow.onerror = function( error, filePath, linerNr ) {\n\t\tvar ret = false;\n\t\tif ( onErrorFnPrev ) {\n\t\t\tret = onErrorFnPrev( error, filePath, linerNr );\n\t\t}\n\n\t\t// Treat return value as window.onerror itself does,\n\t\t// Only do our handling if not suppressed.\n\t\tif ( ret !== true ) {\n\t\t\tif ( QUnit.config.current ) {\n\t\t\t\tif ( QUnit.config.current.ignoreGlobalErrors ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t} else {\n\t\t\t\tQUnit.test( \"global failure\", extend( function() {\n\t\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t\t}, { validTest: true } ) );\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ret;\n\t};\n}() );\n\n// Figure out if we're running the tests from a server or not\nQUnit.isLocal = !( defined.document && window.location.protocol !== \"file:\" );\n\n// Expose the current QUnit version\nQUnit.version = \"2.0.0-rc1\";\n\nextend( QUnit, {\n\n\t// Call on start of module test to prepend name to all tests\n\tmodule: function( name, testEnvironment, executeNow ) {\n\t\tvar module, moduleFns;\n\t\tvar currentModule = config.currentModule;\n\n\t\tif ( arguments.length === 2 ) {\n\t\t\tif ( objectType( testEnvironment ) === \"function\" ) {\n\t\t\t\texecuteNow = testEnvironment;\n\t\t\t\ttestEnvironment = undefined;\n\t\t\t}\n\t\t}\n\n\t\tmodule = createModule();\n\n\t\tif ( testEnvironment && ( testEnvironment.setup || testEnvironment.teardown ) ) {\n\t\t\tconsole.warn(\n\t\t\t\t\"Module's `setup` and `teardown` are not hooks anymore on QUnit 2.0, use \" +\n\t\t\t\t\"`beforeEach` and `afterEach` instead\\n\" +\n\t\t\t\t\"Details in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/\"\n\t\t\t);\n\t\t}\n\n\t\tmoduleFns = {\n\t\t\tbefore: setHook( module, \"before\" ),\n\t\t\tbeforeEach: setHook( module, \"beforeEach\" ),\n\t\t\tafterEach: setHook( module, \"afterEach\" ),\n\t\t\tafter: setHook( module, \"after\" )\n\t\t};\n\n\t\tif ( objectType( executeNow ) === \"function\" ) {\n\t\t\tconfig.moduleStack.push( module );\n\t\t\tsetCurrentModule( module );\n\t\t\texecuteNow.call( module.testEnvironment, moduleFns );\n\t\t\tconfig.moduleStack.pop();\n\t\t\tmodule = module.parentModule || currentModule;\n\t\t}\n\n\t\tsetCurrentModule( module );\n\n\t\tfunction createModule() {\n\t\t\tvar parentModule = config.moduleStack.length ?\n\t\t\t\tconfig.moduleStack.slice( -1 )[ 0 ] : null;\n\t\t\tvar moduleName = parentModule !== null ?\n\t\t\t\t[ parentModule.name, name ].join( \" > \" ) : name;\n\t\t\tvar module = {\n\t\t\t\tname: moduleName,\n\t\t\t\tparentModule: parentModule,\n\t\t\t\ttests: [],\n\t\t\t\tmoduleId: generateHash( moduleName ),\n\t\t\t\ttestsRun: 0\n\t\t\t};\n\n\t\t\tvar env = {};\n\t\t\tif ( parentModule ) {\n\t\t\t\tparentModule.childModule = module;\n\t\t\t\textend( env, parentModule.testEnvironment );\n\t\t\t\tdelete env.beforeEach;\n\t\t\t\tdelete env.afterEach;\n\t\t\t}\n\t\t\textend( env, testEnvironment );\n\t\t\tmodule.testEnvironment = env;\n\n\t\t\tconfig.modules.push( module );\n\t\t\treturn module;\n\t\t}\n\n\t\tfunction setCurrentModule( module ) {\n\t\t\tconfig.currentModule = module;\n\t\t}\n\n\t},\n\n\ttest: test,\n\n\tskip: skip,\n\n\tonly: only,\n\n\tstart: function( count ) {\n\t\tvar globalStartAlreadyCalled = globalStartCalled;\n\n\t\tif ( !config.current ) {\n\t\t\tglobalStartCalled = true;\n\n\t\t\tif ( runStarted ) {\n\t\t\t\tthrow new Error( \"Called start() while test already started running\" );\n\t\t\t} else if ( globalStartAlreadyCalled || count > 1 ) {\n\t\t\t\tthrow new Error( \"Called start() outside of a test context too many times\" );\n\t\t\t} else if ( config.autostart ) {\n\t\t\t\tthrow new Error( \"Called start() outside of a test context when \" +\n\t\t\t\t\t\"QUnit.config.autostart was true\" );\n\t\t\t} else if ( !config.pageLoaded ) {\n\n\t\t\t\t// The page isn't completely loaded yet, so bail out and let `QUnit.load` handle it\n\t\t\t\tconfig.autostart = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t\"QUnit.start cannot be called inside a test context. This feature is removed in \" +\n\t\t\t\t\"QUnit 2.0. For async tests, use QUnit.test() with assert.async() instead.\\n\" +\n\t\t\t\t\"Details in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/\"\n\t\t\t);\n\t\t}\n\n\t\tresumeProcessing();\n\t},\n\n\tconfig: config,\n\n\tis: is,\n\n\tobjectType: objectType,\n\n\textend: extend,\n\n\tload: function() {\n\t\tconfig.pageLoaded = true;\n\n\t\t// Initialize the configuration options\n\t\textend( config, {\n\t\t\tstats: { all: 0, bad: 0 },\n\t\t\tmoduleStats: { all: 0, bad: 0 },\n\t\t\tstarted: 0,\n\t\t\tupdateRate: 1000,\n\t\t\tautostart: true,\n\t\t\tfilter: \"\"\n\t\t}, true );\n\n\t\tconfig.blocking = false;\n\n\t\tif ( config.autostart ) {\n\t\t\tresumeProcessing();\n\t\t}\n\t},\n\n\tstack: function( offset ) {\n\t\toffset = ( offset || 0 ) + 2;\n\t\treturn sourceFromStacktrace( offset );\n\t}\n} );\n\nregisterLoggingCallbacks( QUnit );\n\nfunction begin() {\n\tvar i, l,\n\t\tmodulesLog = [];\n\n\t// If the test run hasn't officially begun yet\n\tif ( !config.started ) {\n\n\t\t// Record the time of the test run's beginning\n\t\tconfig.started = now();\n\n\t\t// Delete the loose unnamed module if unused.\n\t\tif ( config.modules[ 0 ].name === \"\" && config.modules[ 0 ].tests.length === 0 ) {\n\t\t\tconfig.modules.shift();\n\t\t}\n\n\t\t// Avoid unnecessary information by not logging modules' test environments\n\t\tfor ( i = 0, l = config.modules.length; i < l; i++ ) {\n\t\t\tmodulesLog.push( {\n\t\t\t\tname: config.modules[ i ].name,\n\t\t\t\ttests: config.modules[ i ].tests\n\t\t\t} );\n\t\t}\n\n\t\t// The test run is officially beginning now\n\t\trunLoggingCallbacks( \"begin\", {\n\t\t\ttotalTests: Test.count,\n\t\t\tmodules: modulesLog\n\t\t} );\n\t}\n\n\tconfig.blocking = false;\n\tprocess( true );\n}\n\nfunction process( last ) {\n\tfunction next() {\n\t\tprocess( last );\n\t}\n\tvar start = now();\n\tconfig.depth = ( config.depth || 0 ) + 1;\n\n\twhile ( config.queue.length && !config.blocking ) {\n\t\tif ( !defined.setTimeout || config.updateRate <= 0 ||\n\t\t\t\t( ( now() - start ) < config.updateRate ) ) {\n\t\t\tif ( config.current ) {\n\n\t\t\t\t// Reset async tracking for each phase of the Test lifecycle\n\t\t\t\tconfig.current.usedAsync = false;\n\t\t\t}\n\t\t\tconfig.queue.shift()();\n\t\t} else {\n\t\t\tsetTimeout( next, 13 );\n\t\t\tbreak;\n\t\t}\n\t}\n\tconfig.depth--;\n\tif ( last && !config.blocking && !config.queue.length && config.depth === 0 ) {\n\t\tdone();\n\t}\n}\n\nfunction pauseProcessing( test ) {\n\tconfig.blocking = true;\n\n\tif ( config.testTimeout && defined.setTimeout ) {\n\t\tclearTimeout( config.timeout );\n\t\tconfig.timeout = setTimeout( function() {\n\t\t\ttest.semaphore = 0;\n\t\t\tQUnit.pushFailure( \"Test timed out\", sourceFromStacktrace( 2 ) );\n\t\t\tresumeProcessing( test );\n\t\t}, config.testTimeout );\n\t}\n}\n\nfunction resumeProcessing( test ) {\n\trunStarted = true;\n\n\t// A slight delay to allow this iteration of the event loop to finish (more assertions, etc.)\n\tif ( defined.setTimeout ) {\n\t\tsetTimeout( function() {\n\t\t\tvar current = test || config.current;\n\t\t\tif ( current && current.semaphore > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( config.timeout ) {\n\t\t\t\tclearTimeout( config.timeout );\n\t\t\t}\n\n\t\t\tbegin();\n\t\t}, 13 );\n\t} else {\n\t\tbegin();\n\t}\n}\n\nfunction done() {\n\tvar runtime, passed;\n\n\tautorun = true;\n\n\t// Log the last module results\n\tif ( config.previousModule ) {\n\t\trunLoggingCallbacks( \"moduleDone\", {\n\t\t\tname: config.previousModule.name,\n\t\t\ttests: config.previousModule.tests,\n\t\t\tfailed: config.moduleStats.bad,\n\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\ttotal: config.moduleStats.all,\n\t\t\truntime: now() - config.moduleStats.started\n\t\t} );\n\t}\n\tdelete config.previousModule;\n\n\truntime = now() - config.started;\n\tpassed = config.stats.all - config.stats.bad;\n\n\trunLoggingCallbacks( \"done\", {\n\t\tfailed: config.stats.bad,\n\t\tpassed: passed,\n\t\ttotal: config.stats.all,\n\t\truntime: runtime\n\t} );\n}\n\nfunction setHook( module, hookName ) {\n\tif ( module.testEnvironment === undefined ) {\n\t\tmodule.testEnvironment = {};\n\t}\n\n\treturn function( callback ) {\n\t\tmodule.testEnvironment[ hookName ] = callback;\n\t};\n}\n\nvar unitSampler,\n\tfocused = false,\n\tpriorityCount = 0;\n\nfunction Test( settings ) {\n\tvar i, l;\n\n\t++Test.count;\n\n\tthis.expected = null;\n\textend( this, settings );\n\tthis.assertions = [];\n\tthis.semaphore = 0;\n\tthis.usedAsync = false;\n\tthis.module = config.currentModule;\n\tthis.stack = sourceFromStacktrace( 3 );\n\n\t// Register unique strings\n\tfor ( i = 0, l = this.module.tests; i < l.length; i++ ) {\n\t\tif ( this.module.tests[ i ].name === this.testName ) {\n\t\t\tthis.testName += \" \";\n\t\t}\n\t}\n\n\tthis.testId = generateHash( this.module.name, this.testName );\n\n\tthis.module.tests.push( {\n\t\tname: this.testName,\n\t\ttestId: this.testId\n\t} );\n\n\tif ( settings.skip ) {\n\n\t\t// Skipped tests will fully ignore any sent callback\n\t\tthis.callback = function() {};\n\t\tthis.async = false;\n\t\tthis.expected = 0;\n\t} else {\n\t\tthis.assert = new Assert( this );\n\t}\n}\n\nTest.count = 0;\n\nTest.prototype = {\n\tbefore: function() {\n\t\tif (\n\n\t\t\t// Emit moduleStart when we're switching from one module to another\n\t\t\tthis.module !== config.previousModule ||\n\n\t\t\t\t// They could be equal (both undefined) but if the previousModule property doesn't\n\t\t\t\t// yet exist it means this is the first test in a suite that isn't wrapped in a\n\t\t\t\t// module, in which case we'll just emit a moduleStart event for 'undefined'.\n\t\t\t\t// Without this, reporters can get testStart before moduleStart  which is a problem.\n\t\t\t\t!hasOwn.call( config, \"previousModule\" )\n\t\t) {\n\t\t\tif ( hasOwn.call( config, \"previousModule\" ) ) {\n\t\t\t\trunLoggingCallbacks( \"moduleDone\", {\n\t\t\t\t\tname: config.previousModule.name,\n\t\t\t\t\ttests: config.previousModule.tests,\n\t\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\t\ttotal: config.moduleStats.all,\n\t\t\t\t\truntime: now() - config.moduleStats.started\n\t\t\t\t} );\n\t\t\t}\n\t\t\tconfig.previousModule = this.module;\n\t\t\tconfig.moduleStats = { all: 0, bad: 0, started: now() };\n\t\t\trunLoggingCallbacks( \"moduleStart\", {\n\t\t\t\tname: this.module.name,\n\t\t\t\ttests: this.module.tests\n\t\t\t} );\n\t\t}\n\n\t\tconfig.current = this;\n\n\t\tif ( this.module.testEnvironment ) {\n\t\t\tdelete this.module.testEnvironment.before;\n\t\t\tdelete this.module.testEnvironment.beforeEach;\n\t\t\tdelete this.module.testEnvironment.afterEach;\n\t\t\tdelete this.module.testEnvironment.after;\n\t\t}\n\t\tthis.testEnvironment = extend( {}, this.module.testEnvironment );\n\n\t\tthis.started = now();\n\t\trunLoggingCallbacks( \"testStart\", {\n\t\t\tname: this.testName,\n\t\t\tmodule: this.module.name,\n\t\t\ttestId: this.testId\n\t\t} );\n\n\t\tif ( !config.pollution ) {\n\t\t\tsaveGlobal();\n\t\t}\n\t},\n\n\trun: function() {\n\t\tvar promise;\n\n\t\tconfig.current = this;\n\n\t\tif ( this.async ) {\n\t\t\tinternalStop( this );\n\t\t}\n\n\t\tthis.callbackStarted = now();\n\n\t\tif ( config.notrycatch ) {\n\t\t\trunTest( this );\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\trunTest( this );\n\t\t} catch ( e ) {\n\t\t\tthis.pushFailure( \"Died on test #\" + ( this.assertions.length + 1 ) + \" \" +\n\t\t\t\tthis.stack + \": \" + ( e.message || e ), extractStacktrace( e, 0 ) );\n\n\t\t\t// Else next test will carry the responsibility\n\t\t\tsaveGlobal();\n\n\t\t\t// Restart the tests if they're blocking\n\t\t\tif ( config.blocking ) {\n\t\t\t\tinternalStart( this );\n\t\t\t}\n\t\t}\n\n\t\tfunction runTest( test ) {\n\t\t\tpromise = test.callback.call( test.testEnvironment, test.assert );\n\t\t\ttest.resolvePromise( promise );\n\t\t}\n\t},\n\n\tafter: function() {\n\t\tcheckPollution();\n\t},\n\n\tqueueHook: function( hook, hookName, hookOwner ) {\n\t\tvar promise,\n\t\t\ttest = this;\n\t\treturn function runHook() {\n\t\t\tif ( hookName === \"before\" ) {\n\t\t\t\tif ( hookOwner.testsRun !== 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttest.preserveEnvironment = true;\n\t\t\t}\n\n\t\t\tif ( hookName === \"after\" && hookOwner.testsRun !== numberOfTests( hookOwner ) - 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconfig.current = test;\n\t\t\tif ( config.notrycatch ) {\n\t\t\t\tcallHook();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tcallHook();\n\t\t\t} catch ( error ) {\n\t\t\t\ttest.pushFailure( hookName + \" failed on \" + test.testName + \": \" +\n\t\t\t\t( error.message || error ), extractStacktrace( error, 0 ) );\n\t\t\t}\n\n\t\t\tfunction callHook() {\n\t\t\t\tpromise = hook.call( test.testEnvironment, test.assert );\n\t\t\t\ttest.resolvePromise( promise, hookName );\n\t\t\t}\n\t\t};\n\t},\n\n\t// Currently only used for module level hooks, can be used to add global level ones\n\thooks: function( handler ) {\n\t\tvar hooks = [];\n\n\t\tfunction processHooks( test, module ) {\n\t\t\tif ( module.parentModule ) {\n\t\t\t\tprocessHooks( test, module.parentModule );\n\t\t\t}\n\t\t\tif ( module.testEnvironment &&\n\t\t\t\tQUnit.objectType( module.testEnvironment[ handler ] ) === \"function\" ) {\n\t\t\t\thooks.push( test.queueHook( module.testEnvironment[ handler ], handler, module ) );\n\t\t\t}\n\t\t}\n\n\t\t// Hooks are ignored on skipped tests\n\t\tif ( !this.skip ) {\n\t\t\tprocessHooks( this, this.module );\n\t\t}\n\t\treturn hooks;\n\t},\n\n\tfinish: function() {\n\t\tconfig.current = this;\n\t\tif ( config.requireExpects && this.expected === null ) {\n\t\t\tthis.pushFailure( \"Expected number of assertions to be defined, but expect() was \" +\n\t\t\t\t\"not called.\", this.stack );\n\t\t} else if ( this.expected !== null && this.expected !== this.assertions.length ) {\n\t\t\tthis.pushFailure( \"Expected \" + this.expected + \" assertions, but \" +\n\t\t\t\tthis.assertions.length + \" were run\", this.stack );\n\t\t} else if ( this.expected === null && !this.assertions.length ) {\n\t\t\tthis.pushFailure( \"Expected at least one assertion, but none were run - call \" +\n\t\t\t\t\"expect(0) to accept zero assertions.\", this.stack );\n\t\t}\n\n\t\tvar i,\n\t\t\tbad = 0;\n\n\t\tthis.runtime = now() - this.started;\n\t\tconfig.stats.all += this.assertions.length;\n\t\tconfig.moduleStats.all += this.assertions.length;\n\n\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\tif ( !this.assertions[ i ].result ) {\n\t\t\t\tbad++;\n\t\t\t\tconfig.stats.bad++;\n\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t}\n\t\t}\n\n\t\tnotifyTestsRan( this.module );\n\t\trunLoggingCallbacks( \"testDone\", {\n\t\t\tname: this.testName,\n\t\t\tmodule: this.module.name,\n\t\t\tskipped: !!this.skip,\n\t\t\tfailed: bad,\n\t\t\tpassed: this.assertions.length - bad,\n\t\t\ttotal: this.assertions.length,\n\t\t\truntime: this.runtime,\n\n\t\t\t// HTML Reporter use\n\t\t\tassertions: this.assertions,\n\t\t\ttestId: this.testId,\n\n\t\t\t// Source of Test\n\t\t\tsource: this.stack\n\t\t} );\n\n\t\tinternalReset();\n\n\t\tconfig.current = undefined;\n\t},\n\n\tpreserveTestEnvironment: function() {\n\t\tif ( this.preserveEnvironment ) {\n\t\t\tthis.module.testEnvironment = this.testEnvironment;\n\t\t\tthis.testEnvironment = extend( {}, this.module.testEnvironment );\n\t\t}\n\t},\n\n\tqueue: function() {\n\t\tvar priority,\n\t\t\ttest = this;\n\n\t\tif ( !this.valid() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction run() {\n\n\t\t\t// Each of these can by async\n\t\t\tsynchronize( [\n\t\t\t\tfunction() {\n\t\t\t\t\ttest.before();\n\t\t\t\t},\n\n\t\t\t\ttest.hooks( \"before\" ),\n\n\t\t\t\tfunction() {\n\t\t\t\t\ttest.preserveTestEnvironment();\n\t\t\t\t},\n\n\t\t\t\ttest.hooks( \"beforeEach\" ),\n\n\t\t\t\tfunction() {\n\t\t\t\t\ttest.run();\n\t\t\t\t},\n\n\t\t\t\ttest.hooks( \"afterEach\" ).reverse(),\n\t\t\t\ttest.hooks( \"after\" ).reverse(),\n\n\t\t\t\tfunction() {\n\t\t\t\t\ttest.after();\n\t\t\t\t},\n\n\t\t\t\tfunction() {\n\t\t\t\t\ttest.finish();\n\t\t\t\t}\n\t\t\t] );\n\t\t}\n\n\t\t// Prioritize previously failed tests, detected from sessionStorage\n\t\tpriority = QUnit.config.reorder && defined.sessionStorage &&\n\t\t\t\t+sessionStorage.getItem( \"qunit-test-\" + this.module.name + \"-\" + this.testName );\n\n\t\treturn synchronize( run, priority, config.seed );\n\t},\n\n\tpushResult: function( resultInfo ) {\n\n\t\t// Destructure of resultInfo = { result, actual, expected, message, negative }\n\t\tvar source,\n\t\t\tdetails = {\n\t\t\t\tmodule: this.module.name,\n\t\t\t\tname: this.testName,\n\t\t\t\tresult: resultInfo.result,\n\t\t\t\tmessage: resultInfo.message,\n\t\t\t\tactual: resultInfo.actual,\n\t\t\t\texpected: resultInfo.expected,\n\t\t\t\ttestId: this.testId,\n\t\t\t\tnegative: resultInfo.negative || false,\n\t\t\t\truntime: now() - this.started\n\t\t\t};\n\n\t\tif ( !resultInfo.result ) {\n\t\t\tsource = sourceFromStacktrace();\n\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t}\n\t\t}\n\n\t\trunLoggingCallbacks( \"log\", details );\n\n\t\tthis.assertions.push( {\n\t\t\tresult: !!resultInfo.result,\n\t\t\tmessage: resultInfo.message\n\t\t} );\n\t},\n\n\tpushFailure: function( message, source, actual ) {\n\t\tif ( !( this instanceof Test ) ) {\n\t\t\tthrow new Error( \"pushFailure() assertion outside test context, was \" +\n\t\t\t\tsourceFromStacktrace( 2 ) );\n\t\t}\n\n\t\tvar details = {\n\t\t\t\tmodule: this.module.name,\n\t\t\t\tname: this.testName,\n\t\t\t\tresult: false,\n\t\t\t\tmessage: message || \"error\",\n\t\t\t\tactual: actual || null,\n\t\t\t\ttestId: this.testId,\n\t\t\t\truntime: now() - this.started\n\t\t\t};\n\n\t\tif ( source ) {\n\t\t\tdetails.source = source;\n\t\t}\n\n\t\trunLoggingCallbacks( \"log\", details );\n\n\t\tthis.assertions.push( {\n\t\t\tresult: false,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tresolvePromise: function( promise, phase ) {\n\t\tvar then, message,\n\t\t\ttest = this;\n\t\tif ( promise != null ) {\n\t\t\tthen = promise.then;\n\t\t\tif ( QUnit.objectType( then ) === \"function\" ) {\n\t\t\t\tinternalStop( test );\n\t\t\t\tthen.call(\n\t\t\t\t\tpromise,\n\t\t\t\t\tfunction() { internalStart( test ); },\n\t\t\t\t\tfunction( error ) {\n\t\t\t\t\t\tmessage = \"Promise rejected \" +\n\t\t\t\t\t\t\t( !phase ? \"during\" : phase.replace( /Each$/, \"\" ) ) +\n\t\t\t\t\t\t\t\" \" + test.testName + \": \" + ( error.message || error );\n\t\t\t\t\t\ttest.pushFailure( message, extractStacktrace( error, 0 ) );\n\n\t\t\t\t\t\t// Else next test will carry the responsibility\n\t\t\t\t\t\tsaveGlobal();\n\n\t\t\t\t\t\t// Unblock\n\t\t\t\t\t\tinternalStart( test );\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\n\tvalid: function() {\n\t\tvar filter = config.filter,\n\t\t\tregexFilter = /^(!?)\\/([\\w\\W]*)\\/(i?$)/.exec( filter ),\n\t\t\tmodule = config.module && config.module.toLowerCase(),\n\t\t\tfullName = ( this.module.name + \": \" + this.testName );\n\n\t\tfunction moduleChainNameMatch( testModule ) {\n\t\t\tvar testModuleName = testModule.name ? testModule.name.toLowerCase() : null;\n\t\t\tif ( testModuleName === module ) {\n\t\t\t\treturn true;\n\t\t\t} else if ( testModule.parentModule ) {\n\t\t\t\treturn moduleChainNameMatch( testModule.parentModule );\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfunction moduleChainIdMatch( testModule ) {\n\t\t\treturn inArray( testModule.moduleId, config.moduleId ) > -1 ||\n\t\t\t\ttestModule.parentModule && moduleChainIdMatch( testModule.parentModule );\n\t\t}\n\n\t\t// Internally-generated tests are always valid\n\t\tif ( this.callback && this.callback.validTest ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( config.moduleId && config.moduleId.length > 0 &&\n\t\t\t!moduleChainIdMatch( this.module ) ) {\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( config.testId && config.testId.length > 0 &&\n\t\t\tinArray( this.testId, config.testId ) < 0 ) {\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( module && !moduleChainNameMatch( this.module ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !filter ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn regexFilter ?\n\t\t\tthis.regexFilter( !!regexFilter[ 1 ], regexFilter[ 2 ], regexFilter[ 3 ], fullName ) :\n\t\t\tthis.stringFilter( filter, fullName );\n\t},\n\n\tregexFilter: function( exclude, pattern, flags, fullName ) {\n\t\tvar regex = new RegExp( pattern, flags );\n\t\tvar match = regex.test( fullName );\n\n\t\treturn match !== exclude;\n\t},\n\n\tstringFilter: function( filter, fullName ) {\n\t\tfilter = filter.toLowerCase();\n\t\tfullName = fullName.toLowerCase();\n\n\t\tvar include = filter.charAt( 0 ) !== \"!\";\n\t\tif ( !include ) {\n\t\t\tfilter = filter.slice( 1 );\n\t\t}\n\n\t\t// If the filter matches, we need to honour include\n\t\tif ( fullName.indexOf( filter ) !== -1 ) {\n\t\t\treturn include;\n\t\t}\n\n\t\t// Otherwise, do the opposite\n\t\treturn !include;\n\t}\n};\n\n// Resets the fixture DOM element if available.\nfunction internalReset() {\n\tvar fixture = defined.document && document.getElementById &&\n\t\t\tdocument.getElementById( \"qunit-fixture\" );\n\n\tif ( fixture ) {\n\t\tfixture.innerHTML = config.fixture;\n\t}\n}\n\nQUnit.pushFailure = function() {\n\tif ( !QUnit.config.current ) {\n\t\tthrow new Error( \"pushFailure() assertion outside test context, in \" +\n\t\t\tsourceFromStacktrace( 2 ) );\n\t}\n\n\t// Gets current test obj\n\tvar currentTest = QUnit.config.current;\n\n\treturn currentTest.pushFailure.apply( currentTest, arguments );\n};\n\n// Based on Java's String.hashCode, a simple but not\n// rigorously collision resistant hashing function\nfunction generateHash( module, testName ) {\n\tvar hex,\n\t\ti = 0,\n\t\thash = 0,\n\t\tstr = module + \"\\x1C\" + testName,\n\t\tlen = str.length;\n\n\tfor ( ; i < len; i++ ) {\n\t\thash  = ( ( hash << 5 ) - hash ) + str.charCodeAt( i );\n\t\thash |= 0;\n\t}\n\n\t// Convert the possibly negative integer hash code into an 8 character hex string, which isn't\n\t// strictly necessary but increases user understanding that the id is a SHA-like hash\n\thex = ( 0x100000000 + hash ).toString( 16 );\n\tif ( hex.length < 8 ) {\n\t\thex = \"0000000\" + hex;\n\t}\n\n\treturn hex.slice( -8 );\n}\n\nfunction synchronize( callback, priority, seed ) {\n\tvar last = !priority,\n\t\tindex;\n\n\tif ( QUnit.objectType( callback ) === \"array\" ) {\n\t\twhile ( callback.length ) {\n\t\t\tsynchronize( callback.shift() );\n\t\t}\n\t\treturn;\n\t}\n\n\tif ( priority ) {\n\t\tconfig.queue.splice( priorityCount++, 0, callback );\n\t} else if ( seed ) {\n\t\tif ( !unitSampler ) {\n\t\t\tunitSampler = unitSamplerGenerator( seed );\n\t\t}\n\n\t\t// Insert into a random position after all priority items\n\t\tindex = Math.floor( unitSampler() * ( config.queue.length - priorityCount + 1 ) );\n\t\tconfig.queue.splice( priorityCount + index, 0, callback );\n\t} else {\n\t\tconfig.queue.push( callback );\n\t}\n\n\tif ( autorun && !config.blocking ) {\n\t\tprocess( last );\n\t}\n}\n\nfunction unitSamplerGenerator( seed ) {\n\n\t// 32-bit xorshift, requires only a nonzero seed\n\t// http://excamera.com/sphinx/article-xorshift.html\n\tvar sample = parseInt( generateHash( seed ), 16 ) || -1;\n\treturn function() {\n\t\tsample ^= sample << 13;\n\t\tsample ^= sample >>> 17;\n\t\tsample ^= sample << 5;\n\n\t\t// ECMAScript has no unsigned number type\n\t\tif ( sample < 0 ) {\n\t\t\tsample += 0x100000000;\n\t\t}\n\n\t\treturn sample / 0x100000000;\n\t};\n}\n\nfunction saveGlobal() {\n\tconfig.pollution = [];\n\n\tif ( config.noglobals ) {\n\t\tfor ( var key in global ) {\n\t\t\tif ( hasOwn.call( global, key ) ) {\n\n\t\t\t\t// In Opera sometimes DOM element ids show up here, ignore them\n\t\t\t\tif ( /^qunit-test-output/.test( key ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconfig.pollution.push( key );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction checkPollution() {\n\tvar newGlobals,\n\t\tdeletedGlobals,\n\t\told = config.pollution;\n\n\tsaveGlobal();\n\n\tnewGlobals = diff( config.pollution, old );\n\tif ( newGlobals.length > 0 ) {\n\t\tQUnit.pushFailure( \"Introduced global variable(s): \" + newGlobals.join( \", \" ) );\n\t}\n\n\tdeletedGlobals = diff( old, config.pollution );\n\tif ( deletedGlobals.length > 0 ) {\n\t\tQUnit.pushFailure( \"Deleted global variable(s): \" + deletedGlobals.join( \", \" ) );\n\t}\n}\n\n// Will be exposed as QUnit.test\nfunction test( testName, callback ) {\n\tif ( focused )  { return; }\n\n\tvar newTest;\n\n\tnewTest = new Test( {\n\t\ttestName: testName,\n\t\tcallback: callback\n\t} );\n\n\tnewTest.queue();\n}\n\n// Will be exposed as QUnit.skip\nfunction skip( testName ) {\n\tif ( focused )  { return; }\n\n\tvar test = new Test( {\n\t\ttestName: testName,\n\t\tskip: true\n\t} );\n\n\ttest.queue();\n}\n\n// Will be exposed as QUnit.only\nfunction only( testName, callback ) {\n\tvar newTest;\n\n\tif ( focused )  { return; }\n\n\tQUnit.config.queue.length = 0;\n\tfocused = true;\n\n\tnewTest = new Test( {\n\t\ttestName: testName,\n\t\tcallback: callback\n\t} );\n\n\tnewTest.queue();\n}\n\nfunction internalStop( test ) {\n\n\t// If a test is running, adjust its semaphore\n\ttest.semaphore += 1;\n\n\tpauseProcessing( test );\n}\n\nfunction internalStart( test ) {\n\n\t// If a test is running, adjust its semaphore\n\ttest.semaphore -= 1;\n\n\t// If semaphore is non-numeric, throw error\n\tif ( isNaN( test.semaphore ) ) {\n\t\ttest.semaphore = 0;\n\n\t\tQUnit.pushFailure(\n\t\t\t\"Invalid value on test.semaphore\",\n\t\t\tsourceFromStacktrace( 2 )\n\t\t);\n\t\treturn;\n\t}\n\n\t// Don't start until equal number of stop-calls\n\tif ( test.semaphore > 0 ) {\n\t\treturn;\n\t}\n\n\t// Throw an Error if start is called more often than stop\n\tif ( test.semaphore < 0 ) {\n\t\ttest.semaphore = 0;\n\n\t\tQUnit.pushFailure(\n\t\t\t\"Tried to restart test while already started (test's semaphore was 0 already)\",\n\t\t\tsourceFromStacktrace( 2 )\n\t\t);\n\t\treturn;\n\t}\n\n\tresumeProcessing( test );\n}\n\nfunction numberOfTests( module ) {\n\tvar count = module.tests.length;\n\twhile ( module = module.childModule ) {\n\t\tcount += module.tests.length;\n\t}\n\treturn count;\n}\n\nfunction notifyTestsRan( module ) {\n\tmodule.testsRun++;\n\twhile ( module = module.parentModule ) {\n\t\tmodule.testsRun++;\n\t}\n}\n\nfunction Assert( testContext ) {\n\tthis.test = testContext;\n}\n\n// Assert helpers\nQUnit.assert = Assert.prototype = {\n\n\t// Specify the number of expected assertions to guarantee that failed test\n\t// (no assertions are run at all) don't slip through.\n\texpect: function( asserts ) {\n\t\tif ( arguments.length === 1 ) {\n\t\t\tthis.test.expected = asserts;\n\t\t} else {\n\t\t\treturn this.test.expected;\n\t\t}\n\t},\n\n\t// Increment this Test's semaphore counter, then return a function that\n\t// decrements that counter a maximum of once.\n\tasync: function( count ) {\n\t\tvar test = this.test,\n\t\t\tpopped = false,\n\t\t\tacceptCallCount = count;\n\n\t\tif ( typeof acceptCallCount === \"undefined\" ) {\n\t\t\tacceptCallCount = 1;\n\t\t}\n\n\t\ttest.semaphore += 1;\n\t\ttest.usedAsync = true;\n\t\tpauseProcessing( test );\n\n\t\treturn function done() {\n\n\t\t\tif ( popped ) {\n\t\t\t\ttest.pushFailure( \"Too many calls to the `assert.async` callback\",\n\t\t\t\t\tsourceFromStacktrace( 2 ) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tacceptCallCount -= 1;\n\t\t\tif ( acceptCallCount > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttest.semaphore -= 1;\n\t\t\tpopped = true;\n\t\t\tresumeProcessing();\n\t\t};\n\t},\n\n\t// Exports test.push() to the user API\n\t// Alias of pushResult.\n\tpush: function( result, actual, expected, message, negative ) {\n\t\tvar currentAssert = this instanceof Assert ? this : QUnit.config.current.assert;\n\t\treturn currentAssert.pushResult( {\n\t\t\tresult: result,\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message,\n\t\t\tnegative: negative\n\t\t} );\n\t},\n\n\tpushResult: function( resultInfo ) {\n\n\t\t// Destructure of resultInfo = { result, actual, expected, message, negative }\n\t\tvar assert = this,\n\t\t\tcurrentTest = ( assert instanceof Assert && assert.test ) || QUnit.config.current;\n\n\t\t// Backwards compatibility fix.\n\t\t// Allows the direct use of global exported assertions and QUnit.assert.*\n\t\t// Although, it's use is not recommended as it can leak assertions\n\t\t// to other tests from async tests, because we only get a reference to the current test,\n\t\t// not exactly the test where assertion were intended to be called.\n\t\tif ( !currentTest ) {\n\t\t\tthrow new Error( \"assertion outside test context, in \" + sourceFromStacktrace( 2 ) );\n\t\t}\n\n\t\tif ( currentTest.usedAsync === true && currentTest.semaphore === 0 ) {\n\t\t\tcurrentTest.pushFailure( \"Assertion after the final `assert.async` was resolved\",\n\t\t\t\tsourceFromStacktrace( 2 ) );\n\n\t\t\t// Allow this assertion to continue running anyway...\n\t\t}\n\n\t\tif ( !( assert instanceof Assert ) ) {\n\t\t\tassert = currentTest.assert;\n\t\t}\n\n\t\treturn assert.test.pushResult( resultInfo );\n\t},\n\n\tok: function( result, message ) {\n\t\tmessage = message || ( result ? \"okay\" : \"failed, expected argument to be truthy, was: \" +\n\t\t\tQUnit.dump.parse( result ) );\n\t\tthis.pushResult( {\n\t\t\tresult: !!result,\n\t\t\tactual: result,\n\t\t\texpected: true,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tnotOk: function( result, message ) {\n\t\tmessage = message || ( !result ? \"okay\" : \"failed, expected argument to be falsy, was: \" +\n\t\t\tQUnit.dump.parse( result ) );\n\t\tthis.pushResult( {\n\t\t\tresult: !result,\n\t\t\tactual: result,\n\t\t\texpected: false,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tequal: function( actual, expected, message ) {\n\t\t/*jshint eqeqeq:false */\n\t\tthis.pushResult( {\n\t\t\tresult: expected == actual,\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tnotEqual: function( actual, expected, message ) {\n\t\t/*jshint eqeqeq:false */\n\t\tthis.pushResult( {\n\t\t\tresult: expected != actual,\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message,\n\t\t\tnegative: true\n\t\t} );\n\t},\n\n\tpropEqual: function( actual, expected, message ) {\n\t\tactual = objectValues( actual );\n\t\texpected = objectValues( expected );\n\t\tthis.pushResult( {\n\t\t\tresult: QUnit.equiv( actual, expected ),\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tnotPropEqual: function( actual, expected, message ) {\n\t\tactual = objectValues( actual );\n\t\texpected = objectValues( expected );\n\t\tthis.pushResult( {\n\t\t\tresult: !QUnit.equiv( actual, expected ),\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message,\n\t\t\tnegative: true\n\t\t} );\n\t},\n\n\tdeepEqual: function( actual, expected, message ) {\n\t\tthis.pushResult( {\n\t\t\tresult: QUnit.equiv( actual, expected ),\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tnotDeepEqual: function( actual, expected, message ) {\n\t\tthis.pushResult( {\n\t\t\tresult: !QUnit.equiv( actual, expected ),\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message,\n\t\t\tnegative: true\n\t\t} );\n\t},\n\n\tstrictEqual: function( actual, expected, message ) {\n\t\tthis.pushResult( {\n\t\t\tresult: expected === actual,\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tnotStrictEqual: function( actual, expected, message ) {\n\t\tthis.pushResult( {\n\t\t\tresult: expected !== actual,\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message,\n\t\t\tnegative: true\n\t\t} );\n\t},\n\n\t\"throws\": function( block, expected, message ) {\n\t\tvar actual, expectedType,\n\t\t\texpectedOutput = expected,\n\t\t\tok = false,\n\t\t\tcurrentTest = ( this instanceof Assert && this.test ) || QUnit.config.current;\n\n\t\t// 'expected' is optional unless doing string comparison\n\t\tif ( QUnit.objectType( expected ) === \"string\" ) {\n\t\t\tif ( message == null ) {\n\t\t\t\tmessage = expected;\n\t\t\t\texpected = null;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"throws/raises does not accept a string value for the expected argument.\\n\" +\n\t\t\t\t\t\"Use a non-string object value (e.g. regExp) instead if it's necessary.\" +\n\t\t\t\t\t\"Details in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tcurrentTest.ignoreGlobalErrors = true;\n\t\ttry {\n\t\t\tblock.call( currentTest.testEnvironment );\n\t\t} catch ( e ) {\n\t\t\tactual = e;\n\t\t}\n\t\tcurrentTest.ignoreGlobalErrors = false;\n\n\t\tif ( actual ) {\n\t\t\texpectedType = QUnit.objectType( expected );\n\n\t\t\t// We don't want to validate thrown error\n\t\t\tif ( !expected ) {\n\t\t\t\tok = true;\n\t\t\t\texpectedOutput = null;\n\n\t\t\t// Expected is a regexp\n\t\t\t} else if ( expectedType === \"regexp\" ) {\n\t\t\t\tok = expected.test( errorString( actual ) );\n\n\t\t\t// Expected is a constructor, maybe an Error constructor\n\t\t\t} else if ( expectedType === \"function\" && actual instanceof expected ) {\n\t\t\t\tok = true;\n\n\t\t\t// Expected is an Error object\n\t\t\t} else if ( expectedType === \"object\" ) {\n\t\t\t\tok = actual instanceof expected.constructor &&\n\t\t\t\t\tactual.name === expected.name &&\n\t\t\t\t\tactual.message === expected.message;\n\n\t\t\t// Expected is a validation function which returns true if validation passed\n\t\t\t} else if ( expectedType === \"function\" && expected.call( {}, actual ) === true ) {\n\t\t\t\texpectedOutput = null;\n\t\t\t\tok = true;\n\t\t\t}\n\t\t}\n\n\t\tcurrentTest.assert.pushResult( {\n\t\t\tresult: ok,\n\t\t\tactual: actual,\n\t\t\texpected: expectedOutput,\n\t\t\tmessage: message\n\t\t} );\n\t}\n};\n\n// Provide an alternative to assert.throws(), for environments that consider throws a reserved word\n// Known to us are: Closure Compiler, Narwhal\n( function() {\n\t/*jshint sub:true */\n\tAssert.prototype.raises = Assert.prototype [ \"throws\" ]; //jscs:ignore requireDotNotation\n}() );\n\nfunction errorString( error ) {\n\tvar name, message,\n\t\tresultErrorString = error.toString();\n\tif ( resultErrorString.substring( 0, 7 ) === \"[object\" ) {\n\t\tname = error.name ? error.name.toString() : \"Error\";\n\t\tmessage = error.message ? error.message.toString() : \"\";\n\t\tif ( name && message ) {\n\t\t\treturn name + \": \" + message;\n\t\t} else if ( name ) {\n\t\t\treturn name;\n\t\t} else if ( message ) {\n\t\t\treturn message;\n\t\t} else {\n\t\t\treturn \"Error\";\n\t\t}\n\t} else {\n\t\treturn resultErrorString;\n\t}\n}\n\n// Test for equality any JavaScript type.\n// Author: Philippe Rathé <prathe@gmail.com>\nQUnit.equiv = ( function() {\n\n\t// Stack to decide between skip/abort functions\n\tvar callers = [];\n\n\t// Stack to avoiding loops from circular referencing\n\tvar parents = [];\n\tvar parentsB = [];\n\n\tvar getProto = Object.getPrototypeOf || function( obj ) {\n\n\t\t/*jshint proto: true */\n\t\treturn obj.__proto__;\n\t};\n\n\tfunction useStrictEquality( b, a ) {\n\n\t\t// To catch short annotation VS 'new' annotation of a declaration. e.g.:\n\t\t// `var i = 1;`\n\t\t// `var j = new Number(1);`\n\t\tif ( typeof a === \"object\" ) {\n\t\t\ta = a.valueOf();\n\t\t}\n\t\tif ( typeof b === \"object\" ) {\n\t\t\tb = b.valueOf();\n\t\t}\n\n\t\treturn a === b;\n\t}\n\n\tfunction compareConstructors( a, b ) {\n\t\tvar protoA = getProto( a );\n\t\tvar protoB = getProto( b );\n\n\t\t// Comparing constructors is more strict than using `instanceof`\n\t\tif ( a.constructor === b.constructor ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ref #851\n\t\t// If the obj prototype descends from a null constructor, treat it\n\t\t// as a null prototype.\n\t\tif ( protoA && protoA.constructor === null ) {\n\t\t\tprotoA = null;\n\t\t}\n\t\tif ( protoB && protoB.constructor === null ) {\n\t\t\tprotoB = null;\n\t\t}\n\n\t\t// Allow objects with no prototype to be equivalent to\n\t\t// objects with Object as their constructor.\n\t\tif ( ( protoA === null && protoB === Object.prototype ) ||\n\t\t\t\t( protoB === null && protoA === Object.prototype ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction getRegExpFlags( regexp ) {\n\t\treturn \"flags\" in regexp ? regexp.flags : regexp.toString().match( /[gimuy]*$/ )[ 0 ];\n\t}\n\n\tvar callbacks = {\n\t\t\"string\": useStrictEquality,\n\t\t\"boolean\": useStrictEquality,\n\t\t\"number\": useStrictEquality,\n\t\t\"null\": useStrictEquality,\n\t\t\"undefined\": useStrictEquality,\n\t\t\"symbol\": useStrictEquality,\n\t\t\"date\": useStrictEquality,\n\n\t\t\"nan\": function() {\n\t\t\treturn true;\n\t\t},\n\n\t\t\"regexp\": function( b, a ) {\n\t\t\treturn a.source === b.source &&\n\n\t\t\t\t// Include flags in the comparison\n\t\t\t\tgetRegExpFlags( a ) === getRegExpFlags( b );\n\t\t},\n\n\t\t// - skip when the property is a method of an instance (OOP)\n\t\t// - abort otherwise,\n\t\t// initial === would have catch identical references anyway\n\t\t\"function\": function() {\n\t\t\tvar caller = callers[ callers.length - 1 ];\n\t\t\treturn caller !== Object && typeof caller !== \"undefined\";\n\t\t},\n\n\t\t\"array\": function( b, a ) {\n\t\t\tvar i, j, len, loop, aCircular, bCircular;\n\n\t\t\tlen = a.length;\n\t\t\tif ( len !== b.length ) {\n\n\t\t\t\t// Safe and faster\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Track reference to avoid circular references\n\t\t\tparents.push( a );\n\t\t\tparentsB.push( b );\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tloop = false;\n\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\taCircular = parents[ j ] === a[ i ];\n\t\t\t\t\tbCircular = parentsB[ j ] === b[ i ];\n\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\tif ( a[ i ] === b[ i ] || aCircular && bCircular ) {\n\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( !loop && !innerEquiv( a[ i ], b[ i ] ) ) {\n\t\t\t\t\tparents.pop();\n\t\t\t\t\tparentsB.pop();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparents.pop();\n\t\t\tparentsB.pop();\n\t\t\treturn true;\n\t\t},\n\n\t\t\"set\": function( b, a ) {\n\t\t\tvar innerEq,\n\t\t\t\touterEq = true;\n\n\t\t\tif ( a.size !== b.size ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ta.forEach( function( aVal ) {\n\t\t\t\tinnerEq = false;\n\n\t\t\t\tb.forEach( function( bVal ) {\n\t\t\t\t\tif ( innerEquiv( bVal, aVal ) ) {\n\t\t\t\t\t\tinnerEq = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tif ( !innerEq ) {\n\t\t\t\t\touterEq = false;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn outerEq;\n\t\t},\n\n\t\t\"map\": function( b, a ) {\n\t\t\tvar innerEq,\n\t\t\t\touterEq = true;\n\n\t\t\tif ( a.size !== b.size ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ta.forEach( function( aVal, aKey ) {\n\t\t\t\tinnerEq = false;\n\n\t\t\t\tb.forEach( function( bVal, bKey ) {\n\t\t\t\t\tif ( innerEquiv( [ bVal, bKey ], [ aVal, aKey ] ) ) {\n\t\t\t\t\t\tinnerEq = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tif ( !innerEq ) {\n\t\t\t\t\touterEq = false;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn outerEq;\n\t\t},\n\n\t\t\"object\": function( b, a ) {\n\t\t\tvar i, j, loop, aCircular, bCircular;\n\n\t\t\t// Default to true\n\t\t\tvar eq = true;\n\t\t\tvar aProperties = [];\n\t\t\tvar bProperties = [];\n\n\t\t\tif ( compareConstructors( a, b ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stack constructor before traversing properties\n\t\t\tcallers.push( a.constructor );\n\n\t\t\t// Track reference to avoid circular references\n\t\t\tparents.push( a );\n\t\t\tparentsB.push( b );\n\n\t\t\t// Be strict: don't ensure hasOwnProperty and go deep\n\t\t\tfor ( i in a ) {\n\t\t\t\tloop = false;\n\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\taCircular = parents[ j ] === a[ i ];\n\t\t\t\t\tbCircular = parentsB[ j ] === b[ i ];\n\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\tif ( a[ i ] === b[ i ] || aCircular && bCircular ) {\n\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\taProperties.push( i );\n\t\t\t\tif ( !loop && !innerEquiv( a[ i ], b[ i ] ) ) {\n\t\t\t\t\teq = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tparents.pop();\n\t\t\tparentsB.pop();\n\n\t\t\t// Unstack, we are done\n\t\t\tcallers.pop();\n\n\t\t\tfor ( i in b ) {\n\n\t\t\t\t// Collect b's properties\n\t\t\t\tbProperties.push( i );\n\t\t\t}\n\n\t\t\t// Ensures identical properties name\n\t\t\treturn eq && innerEquiv( aProperties.sort(), bProperties.sort() );\n\t\t}\n\t};\n\n\tfunction typeEquiv( a, b ) {\n\t\tvar type = QUnit.objectType( a );\n\t\treturn QUnit.objectType( b ) === type && callbacks[ type ]( b, a );\n\t}\n\n\t// The real equiv function\n\tfunction innerEquiv( a, b ) {\n\n\t\t// We're done when there's nothing more to compare\n\t\tif ( arguments.length < 2 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Require type-specific equality\n\t\treturn ( a === b || typeEquiv( a, b ) ) &&\n\n\t\t\t// ...across all consecutive argument pairs\n\t\t\t( arguments.length === 2 || innerEquiv.apply( this, [].slice.call( arguments, 1 ) ) );\n\t}\n\n\treturn innerEquiv;\n}() );\n\n// Based on jsDump by Ariel Flesler\n// http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html\nQUnit.dump = ( function() {\n\tfunction quote( str ) {\n\t\treturn \"\\\"\" + str.toString().replace( /\\\\/g, \"\\\\\\\\\" ).replace( /\"/g, \"\\\\\\\"\" ) + \"\\\"\";\n\t}\n\tfunction literal( o ) {\n\t\treturn o + \"\";\n\t}\n\tfunction join( pre, arr, post ) {\n\t\tvar s = dump.separator(),\n\t\t\tbase = dump.indent(),\n\t\t\tinner = dump.indent( 1 );\n\t\tif ( arr.join ) {\n\t\t\tarr = arr.join( \",\" + s + inner );\n\t\t}\n\t\tif ( !arr ) {\n\t\t\treturn pre + post;\n\t\t}\n\t\treturn [ pre, inner + arr, base + post ].join( s );\n\t}\n\tfunction array( arr, stack ) {\n\t\tvar i = arr.length,\n\t\t\tret = new Array( i );\n\n\t\tif ( dump.maxDepth && dump.depth > dump.maxDepth ) {\n\t\t\treturn \"[object Array]\";\n\t\t}\n\n\t\tthis.up();\n\t\twhile ( i-- ) {\n\t\t\tret[ i ] = this.parse( arr[ i ], undefined, stack );\n\t\t}\n\t\tthis.down();\n\t\treturn join( \"[\", ret, \"]\" );\n\t}\n\n\tvar reName = /^function (\\w+)/,\n\t\tdump = {\n\n\t\t\t// The objType is used mostly internally, you can fix a (custom) type in advance\n\t\t\tparse: function( obj, objType, stack ) {\n\t\t\t\tstack = stack || [];\n\t\t\t\tvar res, parser, parserType,\n\t\t\t\t\tinStack = inArray( obj, stack );\n\n\t\t\t\tif ( inStack !== -1 ) {\n\t\t\t\t\treturn \"recursion(\" + ( inStack - stack.length ) + \")\";\n\t\t\t\t}\n\n\t\t\t\tobjType = objType || this.typeOf( obj  );\n\t\t\t\tparser = this.parsers[ objType ];\n\t\t\t\tparserType = typeof parser;\n\n\t\t\t\tif ( parserType === \"function\" ) {\n\t\t\t\t\tstack.push( obj );\n\t\t\t\t\tres = parser.call( this, obj, stack );\n\t\t\t\t\tstack.pop();\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t\treturn ( parserType === \"string\" ) ? parser : this.parsers.error;\n\t\t\t},\n\t\t\ttypeOf: function( obj ) {\n\t\t\t\tvar type;\n\t\t\t\tif ( obj === null ) {\n\t\t\t\t\ttype = \"null\";\n\t\t\t\t} else if ( typeof obj === \"undefined\" ) {\n\t\t\t\t\ttype = \"undefined\";\n\t\t\t\t} else if ( QUnit.is( \"regexp\", obj ) ) {\n\t\t\t\t\ttype = \"regexp\";\n\t\t\t\t} else if ( QUnit.is( \"date\", obj ) ) {\n\t\t\t\t\ttype = \"date\";\n\t\t\t\t} else if ( QUnit.is( \"function\", obj ) ) {\n\t\t\t\t\ttype = \"function\";\n\t\t\t\t} else if ( obj.setInterval !== undefined &&\n\t\t\t\t\t\tobj.document !== undefined &&\n\t\t\t\t\t\tobj.nodeType === undefined ) {\n\t\t\t\t\ttype = \"window\";\n\t\t\t\t} else if ( obj.nodeType === 9 ) {\n\t\t\t\t\ttype = \"document\";\n\t\t\t\t} else if ( obj.nodeType ) {\n\t\t\t\t\ttype = \"node\";\n\t\t\t\t} else if (\n\n\t\t\t\t\t// Native arrays\n\t\t\t\t\ttoString.call( obj ) === \"[object Array]\" ||\n\n\t\t\t\t\t// NodeList objects\n\t\t\t\t\t( typeof obj.length === \"number\" && obj.item !== undefined &&\n\t\t\t\t\t( obj.length ? obj.item( 0 ) === obj[ 0 ] : ( obj.item( 0 ) === null &&\n\t\t\t\t\tobj[ 0 ] === undefined ) ) )\n\t\t\t\t) {\n\t\t\t\t\ttype = \"array\";\n\t\t\t\t} else if ( obj.constructor === Error.prototype.constructor ) {\n\t\t\t\t\ttype = \"error\";\n\t\t\t\t} else {\n\t\t\t\t\ttype = typeof obj;\n\t\t\t\t}\n\t\t\t\treturn type;\n\t\t\t},\n\n\t\t\tseparator: function() {\n\t\t\t\treturn this.multiline ? this.HTML ? \"<br />\" : \"\\n\" : this.HTML ? \"&#160;\" : \" \";\n\t\t\t},\n\n\t\t\t// Extra can be a number, shortcut for increasing-calling-decreasing\n\t\t\tindent: function( extra ) {\n\t\t\t\tif ( !this.multiline ) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\tvar chr = this.indentChar;\n\t\t\t\tif ( this.HTML ) {\n\t\t\t\t\tchr = chr.replace( /\\t/g, \"   \" ).replace( / /g, \"&#160;\" );\n\t\t\t\t}\n\t\t\t\treturn new Array( this.depth + ( extra || 0 ) ).join( chr );\n\t\t\t},\n\t\t\tup: function( a ) {\n\t\t\t\tthis.depth += a || 1;\n\t\t\t},\n\t\t\tdown: function( a ) {\n\t\t\t\tthis.depth -= a || 1;\n\t\t\t},\n\t\t\tsetParser: function( name, parser ) {\n\t\t\t\tthis.parsers[ name ] = parser;\n\t\t\t},\n\n\t\t\t// The next 3 are exposed so you can use them\n\t\t\tquote: quote,\n\t\t\tliteral: literal,\n\t\t\tjoin: join,\n\t\t\tdepth: 1,\n\t\t\tmaxDepth: QUnit.config.maxDepth,\n\n\t\t\t// This is the list of parsers, to modify them, use dump.setParser\n\t\t\tparsers: {\n\t\t\t\twindow: \"[Window]\",\n\t\t\t\tdocument: \"[Document]\",\n\t\t\t\terror: function( error ) {\n\t\t\t\t\treturn \"Error(\\\"\" + error.message + \"\\\")\";\n\t\t\t\t},\n\t\t\t\tunknown: \"[Unknown]\",\n\t\t\t\t\"null\": \"null\",\n\t\t\t\t\"undefined\": \"undefined\",\n\t\t\t\t\"function\": function( fn ) {\n\t\t\t\t\tvar ret = \"function\",\n\n\t\t\t\t\t\t// Functions never have name in IE\n\t\t\t\t\t\tname = \"name\" in fn ? fn.name : ( reName.exec( fn ) || [] )[ 1 ];\n\n\t\t\t\t\tif ( name ) {\n\t\t\t\t\t\tret += \" \" + name;\n\t\t\t\t\t}\n\t\t\t\t\tret += \"(\";\n\n\t\t\t\t\tret = [ ret, dump.parse( fn, \"functionArgs\" ), \"){\" ].join( \"\" );\n\t\t\t\t\treturn join( ret, dump.parse( fn, \"functionCode\" ), \"}\" );\n\t\t\t\t},\n\t\t\t\tarray: array,\n\t\t\t\tnodelist: array,\n\t\t\t\t\"arguments\": array,\n\t\t\t\tobject: function( map, stack ) {\n\t\t\t\t\tvar keys, key, val, i, nonEnumerableProperties,\n\t\t\t\t\t\tret = [];\n\n\t\t\t\t\tif ( dump.maxDepth && dump.depth > dump.maxDepth ) {\n\t\t\t\t\t\treturn \"[object Object]\";\n\t\t\t\t\t}\n\n\t\t\t\t\tdump.up();\n\t\t\t\t\tkeys = [];\n\t\t\t\t\tfor ( key in map ) {\n\t\t\t\t\t\tkeys.push( key );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Some properties are not always enumerable on Error objects.\n\t\t\t\t\tnonEnumerableProperties = [ \"message\", \"name\" ];\n\t\t\t\t\tfor ( i in nonEnumerableProperties ) {\n\t\t\t\t\t\tkey = nonEnumerableProperties[ i ];\n\t\t\t\t\t\tif ( key in map && inArray( key, keys ) < 0 ) {\n\t\t\t\t\t\t\tkeys.push( key );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tkeys.sort();\n\t\t\t\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t\t\t\tkey = keys[ i ];\n\t\t\t\t\t\tval = map[ key ];\n\t\t\t\t\t\tret.push( dump.parse( key, \"key\" ) + \": \" +\n\t\t\t\t\t\t\tdump.parse( val, undefined, stack ) );\n\t\t\t\t\t}\n\t\t\t\t\tdump.down();\n\t\t\t\t\treturn join( \"{\", ret, \"}\" );\n\t\t\t\t},\n\t\t\t\tnode: function( node ) {\n\t\t\t\t\tvar len, i, val,\n\t\t\t\t\t\topen = dump.HTML ? \"&lt;\" : \"<\",\n\t\t\t\t\t\tclose = dump.HTML ? \"&gt;\" : \">\",\n\t\t\t\t\t\ttag = node.nodeName.toLowerCase(),\n\t\t\t\t\t\tret = open + tag,\n\t\t\t\t\t\tattrs = node.attributes;\n\n\t\t\t\t\tif ( attrs ) {\n\t\t\t\t\t\tfor ( i = 0, len = attrs.length; i < len; i++ ) {\n\t\t\t\t\t\t\tval = attrs[ i ].nodeValue;\n\n\t\t\t\t\t\t\t// IE6 includes all attributes in .attributes, even ones not explicitly\n\t\t\t\t\t\t\t// set. Those have values like undefined, null, 0, false, \"\" or\n\t\t\t\t\t\t\t// \"inherit\".\n\t\t\t\t\t\t\tif ( val && val !== \"inherit\" ) {\n\t\t\t\t\t\t\t\tret += \" \" + attrs[ i ].nodeName + \"=\" +\n\t\t\t\t\t\t\t\t\tdump.parse( val, \"attribute\" );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tret += close;\n\n\t\t\t\t\t// Show content of TextNode or CDATASection\n\t\t\t\t\tif ( node.nodeType === 3 || node.nodeType === 4 ) {\n\t\t\t\t\t\tret += node.nodeValue;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret + open + \"/\" + tag + close;\n\t\t\t\t},\n\n\t\t\t\t// Function calls it internally, it's the arguments part of the function\n\t\t\t\tfunctionArgs: function( fn ) {\n\t\t\t\t\tvar args,\n\t\t\t\t\t\tl = fn.length;\n\n\t\t\t\t\tif ( !l ) {\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\n\t\t\t\t\targs = new Array( l );\n\t\t\t\t\twhile ( l-- ) {\n\n\t\t\t\t\t\t// 97 is 'a'\n\t\t\t\t\t\targs[ l ] = String.fromCharCode( 97 + l );\n\t\t\t\t\t}\n\t\t\t\t\treturn \" \" + args.join( \", \" ) + \" \";\n\t\t\t\t},\n\n\t\t\t\t// Object calls it internally, the key part of an item in a map\n\t\t\t\tkey: quote,\n\n\t\t\t\t// Function calls it internally, it's the content of the function\n\t\t\t\tfunctionCode: \"[code]\",\n\n\t\t\t\t// Node calls it internally, it's a html attribute value\n\t\t\t\tattribute: quote,\n\t\t\t\tstring: quote,\n\t\t\t\tdate: quote,\n\t\t\t\tregexp: literal,\n\t\t\t\tnumber: literal,\n\t\t\t\t\"boolean\": literal\n\t\t\t},\n\n\t\t\t// If true, entities are escaped ( <, >, \\t, space and \\n )\n\t\t\tHTML: false,\n\n\t\t\t// Indentation unit\n\t\t\tindentChar: \"  \",\n\n\t\t\t// If true, items in a collection, are separated by a \\n, else just a space.\n\t\t\tmultiline: true\n\t\t};\n\n\treturn dump;\n}() );\n\n// Back compat\nQUnit.jsDump = QUnit.dump;\n\nfunction applyDeprecated( name ) {\n\treturn function() {\n\t\tthrow new Error(\n\t\t\tname + \" is removed in QUnit 2.0.\\n\" +\n\t\t\t\"Details in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/\"\n\t\t);\n\t};\n}\n\nObject.keys( Assert.prototype ).forEach( function( key ) {\n\tQUnit[ key ] = applyDeprecated( \"`QUnit.\" + key + \"`\" );\n} );\n\nQUnit.asyncTest = function() {\n\tthrow new Error(\n\t\t\"asyncTest is removed in QUnit 2.0, use QUnit.test() with assert.async() instead.\\n\" +\n\t\t\"Details in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/\"\n\t);\n};\n\nQUnit.stop = function() {\n\tthrow new Error(\n\t\t\"QUnit.stop is removed in QUnit 2.0, use QUnit.test() with assert.async() instead.\\n\" +\n\t\t\"Details in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/\"\n\t);\n};\n\nQUnit.reset = function() {\n\tthrow new Error(\n\t\t\"QUnit.reset is removed in QUnit 2.0 without replacement.\\n\" +\n\t\t\"Details in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/\"\n\t);\n};\n\nif ( defined.document ) {\n\t[\n\t\t\"test\",\n\t\t\"module\",\n\t\t\"expect\",\n\t\t\"start\",\n\t\t\"ok\",\n\t\t\"notOk\",\n\t\t\"equal\",\n\t\t\"notEqual\",\n\t\t\"propEqual\",\n\t\t\"notPropEqual\",\n\t\t\"deepEqual\",\n\t\t\"notDeepEqual\",\n\t\t\"strictEqual\",\n\t\t\"notStrictEqual\",\n\t\t\"throws\",\n\t\t\"raises\"\n\t].forEach( function( key ) {\n\t\twindow[ key ] = applyDeprecated( \"The global `\" + key + \"`\" );\n\t} );\n\n\twindow.QUnit = QUnit;\n}\n\n// For nodejs\nif ( typeof module !== \"undefined\" && module && module.exports ) {\n\tmodule.exports = QUnit;\n\n\t// For consistency with CommonJS environments' exports\n\tmodule.exports.QUnit = QUnit;\n}\n\n// For CommonJS with exports, but without module.exports, like Rhino\nif ( typeof exports !== \"undefined\" && exports ) {\n\texports.QUnit = QUnit;\n}\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( function() {\n\t\treturn QUnit;\n\t} );\n\tQUnit.config.autostart = false;\n}\n\n// Get a reference to the global object, like window in browsers\n}( ( function() {\n\treturn this;\n}() ) ) );\n\n( function() {\n\n// Only interact with URLs via window.location\nvar location = typeof window !== \"undefined\" && window.location;\nif ( !location ) {\n\treturn;\n}\n\nvar urlParams = getUrlParams();\n\nQUnit.urlParams = urlParams;\n\n// Match module/test by inclusion in an array\nQUnit.config.moduleId = [].concat( urlParams.moduleId || [] );\nQUnit.config.testId = [].concat( urlParams.testId || [] );\n\n// Exact case-insensitive match of the module name\nQUnit.config.module = urlParams.module;\n\n// Regular expression or case-insenstive substring match against \"moduleName: testName\"\nQUnit.config.filter = urlParams.filter;\n\n// Test order randomization\nif ( urlParams.seed === true ) {\n\n\t// Generate a random seed if the option is specified without a value\n\tQUnit.config.seed = Math.random().toString( 36 ).slice( 2 );\n} else if ( urlParams.seed ) {\n\tQUnit.config.seed = urlParams.seed;\n}\n\n// Add URL-parameter-mapped config values with UI form rendering data\nQUnit.config.urlConfig.push(\n\t{\n\t\tid: \"hidepassed\",\n\t\tlabel: \"Hide passed tests\",\n\t\ttooltip: \"Only show tests and assertions that fail. Stored as query-strings.\"\n\t},\n\t{\n\t\tid: \"noglobals\",\n\t\tlabel: \"Check for Globals\",\n\t\ttooltip: \"Enabling this will test if any test introduces new properties on the \" +\n\t\t\t\"global object (`window` in Browsers). Stored as query-strings.\"\n\t},\n\t{\n\t\tid: \"notrycatch\",\n\t\tlabel: \"No try-catch\",\n\t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging \" +\n\t\t\t\"exceptions in IE reasonable. Stored as query-strings.\"\n\t}\n);\n\nQUnit.begin( function() {\n\tvar i, option,\n\t\turlConfig = QUnit.config.urlConfig;\n\n\tfor ( i = 0; i < urlConfig.length; i++ ) {\n\n\t\t// Options can be either strings or objects with nonempty \"id\" properties\n\t\toption = QUnit.config.urlConfig[ i ];\n\t\tif ( typeof option !== \"string\" ) {\n\t\t\toption = option.id;\n\t\t}\n\n\t\tif ( QUnit.config[ option ] === undefined ) {\n\t\t\tQUnit.config[ option ] = urlParams[ option ];\n\t\t}\n\t}\n} );\n\nfunction getUrlParams() {\n\tvar i, param, name, value;\n\tvar urlParams = {};\n\tvar params = location.search.slice( 1 ).split( \"&\" );\n\tvar length = params.length;\n\n\tfor ( i = 0; i < length; i++ ) {\n\t\tif ( params[ i ] ) {\n\t\t\tparam = params[ i ].split( \"=\" );\n\t\t\tname = decodeURIComponent( param[ 0 ] );\n\n\t\t\t// Allow just a key to turn on a flag, e.g., test.html?noglobals\n\t\t\tvalue = param.length === 1 ||\n\t\t\t\tdecodeURIComponent( param.slice( 1 ).join( \"=\" ) ) ;\n\t\t\tif ( urlParams[ name ] ) {\n\t\t\t\turlParams[ name ] = [].concat( urlParams[ name ], value );\n\t\t\t} else {\n\t\t\t\turlParams[ name ] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn urlParams;\n}\n\n// Don't load the HTML Reporter on non-browser environments\nif ( typeof window === \"undefined\" || !window.document ) {\n\treturn;\n}\n\nQUnit.init = function() {\n\tthrow new Error(\n\t\t\"QUnit.init is removed in QUnit 2.0, use QUnit.test() with assert.async() instead.\\n\" +\n\t\t\"Details in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/\"\n\t);\n};\n\nvar config = QUnit.config,\n\tdocument = window.document,\n\tcollapseNext = false,\n\thasOwn = Object.prototype.hasOwnProperty,\n\tunfilteredUrl = setUrl( { filter: undefined, module: undefined,\n\t\tmoduleId: undefined, testId: undefined } ),\n\tdefined = {\n\t\tsessionStorage: ( function() {\n\t\t\tvar x = \"qunit-test-string\";\n\t\t\ttry {\n\t\t\t\tsessionStorage.setItem( x, x );\n\t\t\t\tsessionStorage.removeItem( x );\n\t\t\t\treturn true;\n\t\t\t} catch ( e ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}() )\n\t},\n\tmodulesList = [];\n\n// Escape text for attribute or text content.\nfunction escapeText( s ) {\n\tif ( !s ) {\n\t\treturn \"\";\n\t}\n\ts = s + \"\";\n\n\t// Both single quotes and double quotes (for attributes)\n\treturn s.replace( /['\"<>&]/g, function( s ) {\n\t\tswitch ( s ) {\n\t\tcase \"'\":\n\t\t\treturn \"&#039;\";\n\t\tcase \"\\\"\":\n\t\t\treturn \"&quot;\";\n\t\tcase \"<\":\n\t\t\treturn \"&lt;\";\n\t\tcase \">\":\n\t\t\treturn \"&gt;\";\n\t\tcase \"&\":\n\t\t\treturn \"&amp;\";\n\t\t}\n\t} );\n}\n\nfunction addEvent( elem, type, fn ) {\n\telem.addEventListener( type, fn, false );\n}\n\nfunction removeEvent( elem, type, fn ) {\n\telem.removeEventListener( type, fn, false );\n}\n\nfunction addEvents( elems, type, fn ) {\n\tvar i = elems.length;\n\twhile ( i-- ) {\n\t\taddEvent( elems[ i ], type, fn );\n\t}\n}\n\nfunction hasClass( elem, name ) {\n\treturn ( \" \" + elem.className + \" \" ).indexOf( \" \" + name + \" \" ) >= 0;\n}\n\nfunction addClass( elem, name ) {\n\tif ( !hasClass( elem, name ) ) {\n\t\telem.className += ( elem.className ? \" \" : \"\" ) + name;\n\t}\n}\n\nfunction toggleClass( elem, name, force ) {\n\tif ( force || typeof force === \"undefined\" && !hasClass( elem, name ) ) {\n\t\taddClass( elem, name );\n\t} else {\n\t\tremoveClass( elem, name );\n\t}\n}\n\nfunction removeClass( elem, name ) {\n\tvar set = \" \" + elem.className + \" \";\n\n\t// Class name may appear multiple times\n\twhile ( set.indexOf( \" \" + name + \" \" ) >= 0 ) {\n\t\tset = set.replace( \" \" + name + \" \", \" \" );\n\t}\n\n\t// Trim for prettiness\n\telem.className = typeof set.trim === \"function\" ? set.trim() : set.replace( /^\\s+|\\s+$/g, \"\" );\n}\n\nfunction id( name ) {\n\treturn document.getElementById && document.getElementById( name );\n}\n\nfunction getUrlConfigHtml() {\n\tvar i, j, val,\n\t\tescaped, escapedTooltip,\n\t\tselection = false,\n\t\turlConfig = config.urlConfig,\n\t\turlConfigHtml = \"\";\n\n\tfor ( i = 0; i < urlConfig.length; i++ ) {\n\n\t\t// Options can be either strings or objects with nonempty \"id\" properties\n\t\tval = config.urlConfig[ i ];\n\t\tif ( typeof val === \"string\" ) {\n\t\t\tval = {\n\t\t\t\tid: val,\n\t\t\t\tlabel: val\n\t\t\t};\n\t\t}\n\n\t\tescaped = escapeText( val.id );\n\t\tescapedTooltip = escapeText( val.tooltip );\n\n\t\tif ( !val.value || typeof val.value === \"string\" ) {\n\t\t\turlConfigHtml += \"<input id='qunit-urlconfig-\" + escaped +\n\t\t\t\t\"' name='\" + escaped + \"' type='checkbox'\" +\n\t\t\t\t( val.value ? \" value='\" + escapeText( val.value ) + \"'\" : \"\" ) +\n\t\t\t\t( config[ val.id ] ? \" checked='checked'\" : \"\" ) +\n\t\t\t\t\" title='\" + escapedTooltip + \"' /><label for='qunit-urlconfig-\" + escaped +\n\t\t\t\t\"' title='\" + escapedTooltip + \"'>\" + val.label + \"</label>\";\n\t\t} else {\n\t\t\turlConfigHtml += \"<label for='qunit-urlconfig-\" + escaped +\n\t\t\t\t\"' title='\" + escapedTooltip + \"'>\" + val.label +\n\t\t\t\t\": </label><select id='qunit-urlconfig-\" + escaped +\n\t\t\t\t\"' name='\" + escaped + \"' title='\" + escapedTooltip + \"'><option></option>\";\n\n\t\t\tif ( QUnit.is( \"array\", val.value ) ) {\n\t\t\t\tfor ( j = 0; j < val.value.length; j++ ) {\n\t\t\t\t\tescaped = escapeText( val.value[ j ] );\n\t\t\t\t\turlConfigHtml += \"<option value='\" + escaped + \"'\" +\n\t\t\t\t\t\t( config[ val.id ] === val.value[ j ] ?\n\t\t\t\t\t\t\t( selection = true ) && \" selected='selected'\" : \"\" ) +\n\t\t\t\t\t\t\">\" + escaped + \"</option>\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( j in val.value ) {\n\t\t\t\t\tif ( hasOwn.call( val.value, j ) ) {\n\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( j ) + \"'\" +\n\t\t\t\t\t\t\t( config[ val.id ] === j ?\n\t\t\t\t\t\t\t\t( selection = true ) && \" selected='selected'\" : \"\" ) +\n\t\t\t\t\t\t\t\">\" + escapeText( val.value[ j ] ) + \"</option>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( config[ val.id ] && !selection ) {\n\t\t\t\tescaped = escapeText( config[ val.id ] );\n\t\t\t\turlConfigHtml += \"<option value='\" + escaped +\n\t\t\t\t\t\"' selected='selected' disabled='disabled'>\" + escaped + \"</option>\";\n\t\t\t}\n\t\t\turlConfigHtml += \"</select>\";\n\t\t}\n\t}\n\n\treturn urlConfigHtml;\n}\n\n// Handle \"click\" events on toolbar checkboxes and \"change\" for select menus.\n// Updates the URL with the new state of `config.urlConfig` values.\nfunction toolbarChanged() {\n\tvar updatedUrl, value, tests,\n\t\tfield = this,\n\t\tparams = {};\n\n\t// Detect if field is a select menu or a checkbox\n\tif ( \"selectedIndex\" in field ) {\n\t\tvalue = field.options[ field.selectedIndex ].value || undefined;\n\t} else {\n\t\tvalue = field.checked ? ( field.defaultValue || true ) : undefined;\n\t}\n\n\tparams[ field.name ] = value;\n\tupdatedUrl = setUrl( params );\n\n\t// Check if we can apply the change without a page refresh\n\tif ( \"hidepassed\" === field.name && \"replaceState\" in window.history ) {\n\t\tQUnit.urlParams[ field.name ] = value;\n\t\tconfig[ field.name ] = value || false;\n\t\ttests = id( \"qunit-tests\" );\n\t\tif ( tests ) {\n\t\t\ttoggleClass( tests, \"hidepass\", value || false );\n\t\t}\n\t\twindow.history.replaceState( null, \"\", updatedUrl );\n\t} else {\n\t\twindow.location = updatedUrl;\n\t}\n}\n\nfunction setUrl( params ) {\n\tvar key, arrValue, i,\n\t\tquerystring = \"?\",\n\t\tlocation = window.location;\n\n\tparams = QUnit.extend( QUnit.extend( {}, QUnit.urlParams ), params );\n\n\tfor ( key in params ) {\n\n\t\t// Skip inherited or undefined properties\n\t\tif ( hasOwn.call( params, key ) && params[ key ] !== undefined ) {\n\n\t\t\t// Output a parameter for each value of this key (but usually just one)\n\t\t\tarrValue = [].concat( params[ key ] );\n\t\t\tfor ( i = 0; i < arrValue.length; i++ ) {\n\t\t\t\tquerystring += encodeURIComponent( key );\n\t\t\t\tif ( arrValue[ i ] !== true ) {\n\t\t\t\t\tquerystring += \"=\" + encodeURIComponent( arrValue[ i ] );\n\t\t\t\t}\n\t\t\t\tquerystring += \"&\";\n\t\t\t}\n\t\t}\n\t}\n\treturn location.protocol + \"//\" + location.host +\n\t\tlocation.pathname + querystring.slice( 0, -1 );\n}\n\nfunction applyUrlParams() {\n\tvar i,\n\t\tselectedModules = [],\n\t\tmodulesList = id( \"qunit-modulefilter-dropdown-list\" ).getElementsByTagName( \"input\" ),\n\t\tfilter = id( \"qunit-filter-input\" ).value;\n\n\tfor ( i = 0; i < modulesList.length; i++ )  {\n\t\tif ( modulesList[ i ].checked ) {\n\t\t\tselectedModules.push( modulesList[ i ].getAttribute( \"module-id\" ) );\n\t\t}\n\t}\n\n\twindow.location = setUrl( {\n\t\tfilter: ( filter === \"\" ) ? undefined : filter,\n\t\tmoduleId: ( selectedModules.length === 0 ) ? undefined : selectedModules,\n\n\t\t// Remove module and testId filter\n\t\tmodule: undefined,\n\t\ttestId: undefined\n\t} );\n}\n\nfunction toolbarUrlConfigContainer() {\n\tvar urlConfigContainer = document.createElement( \"span\" );\n\n\turlConfigContainer.innerHTML = getUrlConfigHtml();\n\taddClass( urlConfigContainer, \"qunit-url-config\" );\n\n\taddEvents( urlConfigContainer.getElementsByTagName( \"input\" ), \"change\", toolbarChanged );\n\taddEvents( urlConfigContainer.getElementsByTagName( \"select\" ), \"change\", toolbarChanged );\n\n\treturn urlConfigContainer;\n}\n\nfunction toolbarLooseFilter() {\n\tvar filter = document.createElement( \"form\" ),\n\t\tlabel = document.createElement( \"label\" ),\n\t\tinput = document.createElement( \"input\" ),\n\t\tbutton = document.createElement( \"button\" );\n\n\taddClass( filter, \"qunit-filter\" );\n\n\tlabel.innerHTML = \"Filter: \";\n\n\tinput.type = \"text\";\n\tinput.value = config.filter || \"\";\n\tinput.name = \"filter\";\n\tinput.id = \"qunit-filter-input\";\n\n\tbutton.innerHTML = \"Go\";\n\n\tlabel.appendChild( input );\n\n\tfilter.appendChild( label );\n\tfilter.appendChild( button );\n\taddEvent( filter, \"submit\", function( ev ) {\n\t\tapplyUrlParams();\n\n\t\tif ( ev && ev.preventDefault ) {\n\t\t\tev.preventDefault();\n\t\t}\n\n\t\treturn false;\n\t} );\n\n\treturn filter;\n}\n\nfunction moduleDropDownHtml () {\n\tvar i,\n\t\tdropDownHtml = \"\";\n\n\tif ( !config.modules.length ) {\n\t\treturn false;\n\t}\n\n\tfor ( i = 0; i < config.modules.length; i++ ) {\n\t\tif ( config.modules[ i ].name !== \"\" ) {\n\t\t\tdropDownHtml += \"<li><label><input type='checkbox' \" +\n\t\t\t\"module-id='\" + config.modules[ i ].moduleId + \"'\" +\n\t\t\t( config.moduleId.indexOf( config.modules[ i ].moduleId ) > -1 ? \" checked\" : \"\" ) +\n\t\t\t\">\" + escapeText( config.modules[ i ].name ) + \"</label></li>\";\n\t\t}\n\t}\n\treturn dropDownHtml;\n}\n\nfunction toolbarModuleFilter () {\n\tvar dropDownHtml = moduleDropDownHtml(),\n\t\ttoolbar = id( \"qunit-testrunner-toolbar\" ),\n\t\tlabel = document.createElement( \"label\" ),\n\t\tmoduleFilter = document.createElement( \"span\" ),\n\t\tmoduleFilterComponent = document.createElement( \"div\" ),\n\t\tmoduleSearch = document.createElement( \"input\" ),\n\t\tdropDownContainer = document.createElement( \"div\" ),\n\t\tdropDownList = document.createElement( \"ul\" ),\n\t\tclearFilter = document.createElement( \"span\" );\n\n\tif ( !toolbar || !dropDownHtml ) {\n\t\treturn false;\n\t}\n\n\tmoduleSearch.placeholder = \"Select modules\";\n\n\tlabel.innerHTML = \"Module: \";\n\n\tclearFilter.id = \"clear-module-filter\";\n\tclearFilter.innerHTML = \"<span id='clear-module-filter-text'>All modules</span><hr/>\";\n\n\tclearFilter.onclick = function() {\n\t\tvar i,\n\t\t\tmodulesList = dropDownList.getElementsByTagName( \"input\" );\n\t\tfor ( i = 0; i < modulesList.length; i++ )  {\n\t\t\tmodulesList[ i ].checked = false;\n\t\t}\n\t\tapplyUrlParams();\n\t};\n\n\tmoduleFilter.id = \"qunit-modulefilter-container\";\n\tmoduleFilterComponent.id = \"qunit-modulefilter-component\";\n\tdropDownList.id = \"qunit-modulefilter-dropdown-list\";\n\tmoduleSearch.id = \"qunit-modulefilter-search\";\n\tdropDownContainer.id = \"qunit-modulefilter-dropdown-container\";\n\n\tdropDownContainer.style.display = \"none\";\n\n\tdropDownContainer.appendChild( clearFilter );\n\tmoduleFilter.appendChild( label );\n\tmoduleFilter.appendChild( moduleFilterComponent );\n\tmoduleFilterComponent.appendChild( moduleSearch );\n\tmoduleFilterComponent.appendChild( dropDownContainer ) ;\n\n\t// Enables show/hide for the dropdown\n\taddEvent( moduleSearch, \"focus\", function() {\n\t\tvar dropDownList = id( \"qunit-modulefilter-dropdown-container\" );\n\t\tif ( dropDownList.style.display === \"none\" ) {\n\t\t\taddEvent( document, \"click\", function hideHandler( e )  {\n\t\t\t\tif ( !id( \"qunit-modulefilter-container\" ).contains( e.target ) ) {\n\t\t\t\t\tid( \"qunit-modulefilter-dropdown-container\" ).style.display = \"none\";\n\t\t\t\t\tremoveEvent( document, \"click\", hideHandler );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdropDownList.style.display = \"block\";\n\t\t}\n\t} );\n\n\t// Enables search to the module filter\n\taddEvent( moduleSearch, \"input\", function() {\n\t\tvar i,\n\t\tmoduleText,\n\t\tsearchText = this.value.toLowerCase(),\n\t\tlistItems = id( \"qunit-modulefilter-dropdown-list\" ).children;\n\n\t\tif ( !searchText ) {\n\t\t\tfor ( i = 0; i < listItems.length; i++ ) {\n\t\t\t\tlistItems[ i ].style.display = \"\";\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i = 0; i < listItems.length; i++ ) {\n\t\t\t\tmoduleText = listItems[ i ].textContent.toLowerCase();\n\t\t\t\tif ( moduleText.indexOf( searchText ) > -1 ) {\n\t\t\t\t\tlistItems[ i ].style.display = \"\";\n\t\t\t\t} else {\n\t\t\t\t\tlistItems[ i ].style.display = \"none\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\n\tdropDownList.innerHTML = dropDownHtml;\n\tdropDownContainer.appendChild( dropDownList );\n\ttoolbar.appendChild( moduleFilter );\n}\n\nfunction appendToolbar() {\n\tvar toolbar = id( \"qunit-testrunner-toolbar\" );\n\n\tif ( toolbar ) {\n\t\ttoolbar.appendChild( toolbarUrlConfigContainer() );\n\t\ttoolbar.appendChild( toolbarLooseFilter() );\n\t\ttoolbarModuleFilter();\n\t}\n}\n\nfunction appendHeader() {\n\tvar header = id( \"qunit-header\" );\n\n\tif ( header ) {\n\t\theader.innerHTML = \"<a href='\" + escapeText( unfilteredUrl ) + \"'>\" + header.innerHTML +\n\t\t\t\"</a> \";\n\t}\n}\n\nfunction appendBanner() {\n\tvar banner = id( \"qunit-banner\" );\n\n\tif ( banner ) {\n\t\tbanner.className = \"\";\n\t}\n}\n\nfunction appendTestResults() {\n\tvar tests = id( \"qunit-tests\" ),\n\t\tresult = id( \"qunit-testresult\" );\n\n\tif ( result ) {\n\t\tresult.parentNode.removeChild( result );\n\t}\n\n\tif ( tests ) {\n\t\ttests.innerHTML = \"\";\n\t\tresult = document.createElement( \"p\" );\n\t\tresult.id = \"qunit-testresult\";\n\t\tresult.className = \"result\";\n\t\ttests.parentNode.insertBefore( result, tests );\n\t\tresult.innerHTML = \"Running...<br />&#160;\";\n\t}\n}\n\nfunction storeFixture() {\n\tvar fixture = id( \"qunit-fixture\" );\n\tif ( fixture ) {\n\t\tconfig.fixture = fixture.innerHTML;\n\t}\n}\n\nfunction appendFilteredTest() {\n\tvar testId = QUnit.config.testId;\n\tif ( !testId || testId.length <= 0 ) {\n\t\treturn \"\";\n\t}\n\treturn \"<div id='qunit-filteredTest'>Rerunning selected tests: \" +\n\t\tescapeText( testId.join( \", \" ) ) +\n\t\t\" <a id='qunit-clearFilter' href='\" +\n\t\tescapeText( unfilteredUrl ) +\n\t\t\"'>Run all tests</a></div>\";\n}\n\nfunction appendUserAgent() {\n\tvar userAgent = id( \"qunit-userAgent\" );\n\n\tif ( userAgent ) {\n\t\tuserAgent.innerHTML = \"\";\n\t\tuserAgent.appendChild(\n\t\t\tdocument.createTextNode(\n\t\t\t\t\"QUnit \" + QUnit.version + \"; \" + navigator.userAgent\n\t\t\t)\n\t\t);\n\t}\n}\n\nfunction appendInterface() {\n\tvar qunit = id( \"qunit\" );\n\n\tif ( qunit ) {\n\t\tqunit.innerHTML =\n\t\t\t\"<h1 id='qunit-header'>\" + escapeText( document.title ) + \"</h1>\" +\n\t\t\t\"<h2 id='qunit-banner'></h2>\" +\n\t\t\t\"<div id='qunit-testrunner-toolbar'></div>\" +\n\t\t\tappendFilteredTest() +\n\t\t\t\"<h2 id='qunit-userAgent'></h2>\" +\n\t\t\t\"<ol id='qunit-tests'></ol>\";\n\t}\n\n\tappendHeader();\n\tappendBanner();\n\tappendTestResults();\n\tappendUserAgent();\n\tappendToolbar();\n}\n\nfunction appendTestsList( modules ) {\n\tvar i, l, x, z, test, moduleObj;\n\n\tfor ( i = 0, l = modules.length; i < l; i++ ) {\n\t\tmoduleObj = modules[ i ];\n\n\t\tfor ( x = 0, z = moduleObj.tests.length; x < z; x++ ) {\n\t\t\ttest = moduleObj.tests[ x ];\n\n\t\t\tappendTest( test.name, test.testId, moduleObj.name );\n\t\t}\n\t}\n}\n\nfunction appendTest( name, testId, moduleName ) {\n\tvar title, rerunTrigger, testBlock, assertList,\n\t\ttests = id( \"qunit-tests\" );\n\n\tif ( !tests ) {\n\t\treturn;\n\t}\n\n\ttitle = document.createElement( \"strong\" );\n\ttitle.innerHTML = getNameHtml( name, moduleName );\n\n\trerunTrigger = document.createElement( \"a\" );\n\trerunTrigger.innerHTML = \"Rerun\";\n\trerunTrigger.href = setUrl( { testId: testId } );\n\n\ttestBlock = document.createElement( \"li\" );\n\ttestBlock.appendChild( title );\n\ttestBlock.appendChild( rerunTrigger );\n\ttestBlock.id = \"qunit-test-output-\" + testId;\n\n\tassertList = document.createElement( \"ol\" );\n\tassertList.className = \"qunit-assert-list\";\n\n\ttestBlock.appendChild( assertList );\n\n\ttests.appendChild( testBlock );\n}\n\n// HTML Reporter initialization and load\nQUnit.begin( function( details ) {\n\tvar i, moduleObj, tests;\n\n\t// Sort modules by name for the picker\n\tfor ( i = 0; i < details.modules.length; i++ ) {\n\t\tmoduleObj = details.modules[ i ];\n\t\tif ( moduleObj.name ) {\n\t\t\tmodulesList.push( moduleObj.name );\n\t\t}\n\t}\n\tmodulesList.sort( function( a, b ) {\n\t\treturn a.localeCompare( b );\n\t} );\n\n\t// Capture fixture HTML from the page\n\tstoreFixture();\n\n\t// Initialize QUnit elements\n\tappendInterface();\n\tappendTestsList( details.modules );\n\ttests = id( \"qunit-tests\" );\n\tif ( tests && config.hidepassed ) {\n\t\taddClass( tests, \"hidepass\" );\n\t}\n} );\n\nQUnit.done( function( details ) {\n\tvar i, key,\n\t\tbanner = id( \"qunit-banner\" ),\n\t\ttests = id( \"qunit-tests\" ),\n\t\thtml = [\n\t\t\t\"Tests completed in \",\n\t\t\tdetails.runtime,\n\t\t\t\" milliseconds.<br />\",\n\t\t\t\"<span class='passed'>\",\n\t\t\tdetails.passed,\n\t\t\t\"</span> assertions of <span class='total'>\",\n\t\t\tdetails.total,\n\t\t\t\"</span> passed, <span class='failed'>\",\n\t\t\tdetails.failed,\n\t\t\t\"</span> failed.\"\n\t\t].join( \"\" );\n\n\tif ( banner ) {\n\t\tbanner.className = details.failed ? \"qunit-fail\" : \"qunit-pass\";\n\t}\n\n\tif ( tests ) {\n\t\tid( \"qunit-testresult\" ).innerHTML = html;\n\t}\n\n\tif ( config.altertitle && document.title ) {\n\n\t\t// Show ✖ for good, ✔ for bad suite result in title\n\t\t// use escape sequences in case file gets loaded with non-utf-8-charset\n\t\tdocument.title = [\n\t\t\t( details.failed ? \"\\u2716\" : \"\\u2714\" ),\n\t\t\tdocument.title.replace( /^[\\u2714\\u2716] /i, \"\" )\n\t\t].join( \" \" );\n\t}\n\n\t// Clear own sessionStorage items if all tests passed\n\tif ( config.reorder && defined.sessionStorage && details.failed === 0 ) {\n\t\tfor ( i = 0; i < sessionStorage.length; i++ ) {\n\t\t\tkey = sessionStorage.key( i++ );\n\t\t\tif ( key.indexOf( \"qunit-test-\" ) === 0 ) {\n\t\t\t\tsessionStorage.removeItem( key );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Scroll back to top to show results\n\tif ( config.scrolltop && window.scrollTo ) {\n\t\twindow.scrollTo( 0, 0 );\n\t}\n} );\n\nfunction getNameHtml( name, module ) {\n\tvar nameHtml = \"\";\n\n\tif ( module ) {\n\t\tnameHtml = \"<span class='module-name'>\" + escapeText( module ) + \"</span>: \";\n\t}\n\n\tnameHtml += \"<span class='test-name'>\" + escapeText( name ) + \"</span>\";\n\n\treturn nameHtml;\n}\n\nQUnit.testStart( function( details ) {\n\tvar running, testBlock, bad;\n\n\ttestBlock = id( \"qunit-test-output-\" + details.testId );\n\tif ( testBlock ) {\n\t\ttestBlock.className = \"running\";\n\t} else {\n\n\t\t// Report later registered tests\n\t\tappendTest( details.name, details.testId, details.module );\n\t}\n\n\trunning = id( \"qunit-testresult\" );\n\tif ( running ) {\n\t\tbad = QUnit.config.reorder && defined.sessionStorage &&\n\t\t\t+sessionStorage.getItem( \"qunit-test-\" + details.module + \"-\" + details.name );\n\n\t\trunning.innerHTML = ( bad ?\n\t\t\t\"Rerunning previously failed test: <br />\" :\n\t\t\t\"Running: <br />\" ) +\n\t\t\tgetNameHtml( details.name, details.module );\n\t}\n\n} );\n\nfunction stripHtml( string ) {\n\n\t// Strip tags, html entity and whitespaces\n\treturn string.replace( /<\\/?[^>]+(>|$)/g, \"\" ).replace( /\\&quot;/g, \"\" ).replace( /\\s+/g, \"\" );\n}\n\nQUnit.log( function( details ) {\n\tvar assertList, assertLi,\n\t\tmessage, expected, actual, diff,\n\t\tshowDiff = false,\n\t\ttestItem = id( \"qunit-test-output-\" + details.testId );\n\n\tif ( !testItem ) {\n\t\treturn;\n\t}\n\n\tmessage = escapeText( details.message ) || ( details.result ? \"okay\" : \"failed\" );\n\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\tmessage += \"<span class='runtime'>@ \" + details.runtime + \" ms</span>\";\n\n\t// The pushFailure doesn't provide details.expected\n\t// when it calls, it's implicit to also not show expected and diff stuff\n\t// Also, we need to check details.expected existence, as it can exist and be undefined\n\tif ( !details.result && hasOwn.call( details, \"expected\" ) ) {\n\t\tif ( details.negative ) {\n\t\t\texpected = \"NOT \" + QUnit.dump.parse( details.expected );\n\t\t} else {\n\t\t\texpected = QUnit.dump.parse( details.expected );\n\t\t}\n\n\t\tactual = QUnit.dump.parse( details.actual );\n\t\tmessage += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" +\n\t\t\tescapeText( expected ) +\n\t\t\t\"</pre></td></tr>\";\n\n\t\tif ( actual !== expected ) {\n\n\t\t\tmessage += \"<tr class='test-actual'><th>Result: </th><td><pre>\" +\n\t\t\t\tescapeText( actual ) + \"</pre></td></tr>\";\n\n\t\t\t// Don't show diff if actual or expected are booleans\n\t\t\tif ( !( /^(true|false)$/.test( actual ) ) &&\n\t\t\t\t\t!( /^(true|false)$/.test( expected ) ) ) {\n\t\t\t\tdiff = QUnit.diff( expected, actual );\n\t\t\t\tshowDiff = stripHtml( diff ).length !==\n\t\t\t\t\tstripHtml( expected ).length +\n\t\t\t\t\tstripHtml( actual ).length;\n\t\t\t}\n\n\t\t\t// Don't show diff if expected and actual are totally different\n\t\t\tif ( showDiff ) {\n\t\t\t\tmessage += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" +\n\t\t\t\t\tdiff + \"</pre></td></tr>\";\n\t\t\t}\n\t\t} else if ( expected.indexOf( \"[object Array]\" ) !== -1 ||\n\t\t\t\texpected.indexOf( \"[object Object]\" ) !== -1 ) {\n\t\t\tmessage += \"<tr class='test-message'><th>Message: </th><td>\" +\n\t\t\t\t\"Diff suppressed as the depth of object is more than current max depth (\" +\n\t\t\t\tQUnit.config.maxDepth + \").<p>Hint: Use <code>QUnit.dump.maxDepth</code> to \" +\n\t\t\t\t\" run with a higher max depth or <a href='\" +\n\t\t\t\tescapeText( setUrl( { maxDepth: -1 } ) ) + \"'>\" +\n\t\t\t\t\"Rerun</a> without max depth.</p></td></tr>\";\n\t\t} else {\n\t\t\tmessage += \"<tr class='test-message'><th>Message: </th><td>\" +\n\t\t\t\t\"Diff suppressed as the expected and actual results have an equivalent\" +\n\t\t\t\t\" serialization</td></tr>\";\n\t\t}\n\n\t\tif ( details.source ) {\n\t\t\tmessage += \"<tr class='test-source'><th>Source: </th><td><pre>\" +\n\t\t\t\tescapeText( details.source ) + \"</pre></td></tr>\";\n\t\t}\n\n\t\tmessage += \"</table>\";\n\n\t// This occurs when pushFailure is set and we have an extracted stack trace\n\t} else if ( !details.result && details.source ) {\n\t\tmessage += \"<table>\" +\n\t\t\t\"<tr class='test-source'><th>Source: </th><td><pre>\" +\n\t\t\tescapeText( details.source ) + \"</pre></td></tr>\" +\n\t\t\t\"</table>\";\n\t}\n\n\tassertList = testItem.getElementsByTagName( \"ol\" )[ 0 ];\n\n\tassertLi = document.createElement( \"li\" );\n\tassertLi.className = details.result ? \"pass\" : \"fail\";\n\tassertLi.innerHTML = message;\n\tassertList.appendChild( assertLi );\n} );\n\nQUnit.testDone( function( details ) {\n\tvar testTitle, time, testItem, assertList,\n\t\tgood, bad, testCounts, skipped, sourceName,\n\t\ttests = id( \"qunit-tests\" );\n\n\tif ( !tests ) {\n\t\treturn;\n\t}\n\n\ttestItem = id( \"qunit-test-output-\" + details.testId );\n\n\tassertList = testItem.getElementsByTagName( \"ol\" )[ 0 ];\n\n\tgood = details.passed;\n\tbad = details.failed;\n\n\t// Store result when possible\n\tif ( config.reorder && defined.sessionStorage ) {\n\t\tif ( bad ) {\n\t\t\tsessionStorage.setItem( \"qunit-test-\" + details.module + \"-\" + details.name, bad );\n\t\t} else {\n\t\t\tsessionStorage.removeItem( \"qunit-test-\" + details.module + \"-\" + details.name );\n\t\t}\n\t}\n\n\tif ( bad === 0 ) {\n\n\t\t// Collapse the passing tests\n\t\taddClass( assertList, \"qunit-collapsed\" );\n\t} else if ( bad && config.collapse && !collapseNext ) {\n\n\t\t// Skip collapsing the first failing test\n\t\tcollapseNext = true;\n\t} else {\n\n\t\t// Collapse remaining tests\n\t\taddClass( assertList, \"qunit-collapsed\" );\n\t}\n\n\t// The testItem.firstChild is the test name\n\ttestTitle = testItem.firstChild;\n\n\ttestCounts = bad ?\n\t\t\"<b class='failed'>\" + bad + \"</b>, \" + \"<b class='passed'>\" + good + \"</b>, \" :\n\t\t\"\";\n\n\ttestTitle.innerHTML += \" <b class='counts'>(\" + testCounts +\n\t\tdetails.assertions.length + \")</b>\";\n\n\tif ( details.skipped ) {\n\t\ttestItem.className = \"skipped\";\n\t\tskipped = document.createElement( \"em\" );\n\t\tskipped.className = \"qunit-skipped-label\";\n\t\tskipped.innerHTML = \"skipped\";\n\t\ttestItem.insertBefore( skipped, testTitle );\n\t} else {\n\t\taddEvent( testTitle, \"click\", function() {\n\t\t\ttoggleClass( assertList, \"qunit-collapsed\" );\n\t\t} );\n\n\t\ttestItem.className = bad ? \"fail\" : \"pass\";\n\n\t\ttime = document.createElement( \"span\" );\n\t\ttime.className = \"runtime\";\n\t\ttime.innerHTML = details.runtime + \" ms\";\n\t\ttestItem.insertBefore( time, assertList );\n\t}\n\n\t// Show the source of the test when showing assertions\n\tif ( details.source ) {\n\t\tsourceName = document.createElement( \"p\" );\n\t\tsourceName.innerHTML = \"<strong>Source: </strong>\" + details.source;\n\t\taddClass( sourceName, \"qunit-source\" );\n\t\tif ( bad === 0 ) {\n\t\t\taddClass( sourceName, \"qunit-collapsed\" );\n\t\t}\n\t\taddEvent( testTitle, \"click\", function() {\n\t\t\ttoggleClass( sourceName, \"qunit-collapsed\" );\n\t\t} );\n\t\ttestItem.appendChild( sourceName );\n\t}\n} );\n\n// Avoid readyState issue with phantomjs\n// Ref: #818\nvar notPhantom = ( function( p ) {\n\treturn !( p && p.version && p.version.major > 0 );\n} )( window.phantom );\n\nif ( notPhantom && document.readyState === \"complete\" ) {\n\tQUnit.load();\n} else {\n\taddEvent( window, \"load\", QUnit.load );\n}\n\n/*\n * This file is a modified version of google-diff-match-patch's JavaScript implementation\n * (https://code.google.com/p/google-diff-match-patch/source/browse/trunk/javascript/diff_match_patch_uncompressed.js),\n * modifications are licensed as more fully set forth in LICENSE.txt.\n *\n * The original source of google-diff-match-patch is attributable and licensed as follows:\n *\n * Copyright 2006 Google Inc.\n * https://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * More Info:\n *  https://code.google.com/p/google-diff-match-patch/\n *\n * Usage: QUnit.diff(expected, actual)\n *\n */\nQUnit.diff = ( function() {\n\tfunction DiffMatchPatch() {\n\t}\n\n\t//  DIFF FUNCTIONS\n\n\t/**\n\t * The data structure representing a diff is an array of tuples:\n\t * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n\t * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n\t */\n\tvar DIFF_DELETE = -1,\n\t\tDIFF_INSERT = 1,\n\t\tDIFF_EQUAL = 0;\n\n\t/**\n\t * Find the differences between two texts.  Simplifies the problem by stripping\n\t * any common prefix or suffix off the texts before diffing.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {boolean=} optChecklines Optional speedup flag. If present and false,\n\t *     then don't run a line-level diff first to identify the changed areas.\n\t *     Defaults to true, which does a faster, slightly less optimal diff.\n\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t */\n\tDiffMatchPatch.prototype.DiffMain = function( text1, text2, optChecklines ) {\n\t\tvar deadline, checklines, commonlength,\n\t\t\tcommonprefix, commonsuffix, diffs;\n\n\t\t// The diff must be complete in up to 1 second.\n\t\tdeadline = ( new Date() ).getTime() + 1000;\n\n\t\t// Check for null inputs.\n\t\tif ( text1 === null || text2 === null ) {\n\t\t\tthrow new Error( \"Null input. (DiffMain)\" );\n\t\t}\n\n\t\t// Check for equality (speedup).\n\t\tif ( text1 === text2 ) {\n\t\t\tif ( text1 ) {\n\t\t\t\treturn [\n\t\t\t\t\t[ DIFF_EQUAL, text1 ]\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\n\t\tif ( typeof optChecklines === \"undefined\" ) {\n\t\t\toptChecklines = true;\n\t\t}\n\n\t\tchecklines = optChecklines;\n\n\t\t// Trim off common prefix (speedup).\n\t\tcommonlength = this.diffCommonPrefix( text1, text2 );\n\t\tcommonprefix = text1.substring( 0, commonlength );\n\t\ttext1 = text1.substring( commonlength );\n\t\ttext2 = text2.substring( commonlength );\n\n\t\t// Trim off common suffix (speedup).\n\t\tcommonlength = this.diffCommonSuffix( text1, text2 );\n\t\tcommonsuffix = text1.substring( text1.length - commonlength );\n\t\ttext1 = text1.substring( 0, text1.length - commonlength );\n\t\ttext2 = text2.substring( 0, text2.length - commonlength );\n\n\t\t// Compute the diff on the middle block.\n\t\tdiffs = this.diffCompute( text1, text2, checklines, deadline );\n\n\t\t// Restore the prefix and suffix.\n\t\tif ( commonprefix ) {\n\t\t\tdiffs.unshift( [ DIFF_EQUAL, commonprefix ] );\n\t\t}\n\t\tif ( commonsuffix ) {\n\t\t\tdiffs.push( [ DIFF_EQUAL, commonsuffix ] );\n\t\t}\n\t\tthis.diffCleanupMerge( diffs );\n\t\treturn diffs;\n\t};\n\n\t/**\n\t * Reduce the number of edits by eliminating operationally trivial equalities.\n\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t */\n\tDiffMatchPatch.prototype.diffCleanupEfficiency = function( diffs ) {\n\t\tvar changes, equalities, equalitiesLength, lastequality,\n\t\t\tpointer, preIns, preDel, postIns, postDel;\n\t\tchanges = false;\n\t\tequalities = []; // Stack of indices where equalities are found.\n\t\tequalitiesLength = 0; // Keeping our own length var is faster in JS.\n\t\t/** @type {?string} */\n\t\tlastequality = null;\n\n\t\t// Always equal to diffs[equalities[equalitiesLength - 1]][1]\n\t\tpointer = 0; // Index of current position.\n\n\t\t// Is there an insertion operation before the last equality.\n\t\tpreIns = false;\n\n\t\t// Is there a deletion operation before the last equality.\n\t\tpreDel = false;\n\n\t\t// Is there an insertion operation after the last equality.\n\t\tpostIns = false;\n\n\t\t// Is there a deletion operation after the last equality.\n\t\tpostDel = false;\n\t\twhile ( pointer < diffs.length ) {\n\n\t\t\t// Equality found.\n\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_EQUAL ) {\n\t\t\t\tif ( diffs[ pointer ][ 1 ].length < 4 && ( postIns || postDel ) ) {\n\n\t\t\t\t\t// Candidate found.\n\t\t\t\t\tequalities[ equalitiesLength++ ] = pointer;\n\t\t\t\t\tpreIns = postIns;\n\t\t\t\t\tpreDel = postDel;\n\t\t\t\t\tlastequality = diffs[ pointer ][ 1 ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// Not a candidate, and can never become one.\n\t\t\t\t\tequalitiesLength = 0;\n\t\t\t\t\tlastequality = null;\n\t\t\t\t}\n\t\t\t\tpostIns = postDel = false;\n\n\t\t\t// An insertion or deletion.\n\t\t\t} else {\n\n\t\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_DELETE ) {\n\t\t\t\t\tpostDel = true;\n\t\t\t\t} else {\n\t\t\t\t\tpostIns = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Five types to be split:\n\t\t\t\t * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n\t\t\t\t * <ins>A</ins>X<ins>C</ins><del>D</del>\n\t\t\t\t * <ins>A</ins><del>B</del>X<ins>C</ins>\n\t\t\t\t * <ins>A</del>X<ins>C</ins><del>D</del>\n\t\t\t\t * <ins>A</ins><del>B</del>X<del>C</del>\n\t\t\t\t */\n\t\t\t\tif ( lastequality && ( ( preIns && preDel && postIns && postDel ) ||\n\t\t\t\t\t\t( ( lastequality.length < 2 ) &&\n\t\t\t\t\t\t( preIns + preDel + postIns + postDel ) === 3 ) ) ) {\n\n\t\t\t\t\t// Duplicate record.\n\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\tequalities[ equalitiesLength - 1 ],\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t[ DIFF_DELETE, lastequality ]\n\t\t\t\t\t);\n\n\t\t\t\t\t// Change second copy to insert.\n\t\t\t\t\tdiffs[ equalities[ equalitiesLength - 1 ] + 1 ][ 0 ] = DIFF_INSERT;\n\t\t\t\t\tequalitiesLength--; // Throw away the equality we just deleted;\n\t\t\t\t\tlastequality = null;\n\t\t\t\t\tif ( preIns && preDel ) {\n\n\t\t\t\t\t\t// No changes made which could affect previous entry, keep going.\n\t\t\t\t\t\tpostIns = postDel = true;\n\t\t\t\t\t\tequalitiesLength = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tequalitiesLength--; // Throw away the previous equality.\n\t\t\t\t\t\tpointer = equalitiesLength > 0 ? equalities[ equalitiesLength - 1 ] : -1;\n\t\t\t\t\t\tpostIns = postDel = false;\n\t\t\t\t\t}\n\t\t\t\t\tchanges = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpointer++;\n\t\t}\n\n\t\tif ( changes ) {\n\t\t\tthis.diffCleanupMerge( diffs );\n\t\t}\n\t};\n\n\t/**\n\t * Convert a diff array into a pretty HTML report.\n\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t * @param {integer} string to be beautified.\n\t * @return {string} HTML representation.\n\t */\n\tDiffMatchPatch.prototype.diffPrettyHtml = function( diffs ) {\n\t\tvar op, data, x,\n\t\t\thtml = [];\n\t\tfor ( x = 0; x < diffs.length; x++ ) {\n\t\t\top = diffs[ x ][ 0 ]; // Operation (insert, delete, equal)\n\t\t\tdata = diffs[ x ][ 1 ]; // Text of change.\n\t\t\tswitch ( op ) {\n\t\t\tcase DIFF_INSERT:\n\t\t\t\thtml[ x ] = \"<ins>\" + escapeText( data ) + \"</ins>\";\n\t\t\t\tbreak;\n\t\t\tcase DIFF_DELETE:\n\t\t\t\thtml[ x ] = \"<del>\" + escapeText( data ) + \"</del>\";\n\t\t\t\tbreak;\n\t\t\tcase DIFF_EQUAL:\n\t\t\t\thtml[ x ] = \"<span>\" + escapeText( data ) + \"</span>\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn html.join( \"\" );\n\t};\n\n\t/**\n\t * Determine the common prefix of two strings.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {number} The number of characters common to the start of each\n\t *     string.\n\t */\n\tDiffMatchPatch.prototype.diffCommonPrefix = function( text1, text2 ) {\n\t\tvar pointermid, pointermax, pointermin, pointerstart;\n\n\t\t// Quick check for common null cases.\n\t\tif ( !text1 || !text2 || text1.charAt( 0 ) !== text2.charAt( 0 ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Binary search.\n\t\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\n\t\tpointermin = 0;\n\t\tpointermax = Math.min( text1.length, text2.length );\n\t\tpointermid = pointermax;\n\t\tpointerstart = 0;\n\t\twhile ( pointermin < pointermid ) {\n\t\t\tif ( text1.substring( pointerstart, pointermid ) ===\n\t\t\t\t\ttext2.substring( pointerstart, pointermid ) ) {\n\t\t\t\tpointermin = pointermid;\n\t\t\t\tpointerstart = pointermin;\n\t\t\t} else {\n\t\t\t\tpointermax = pointermid;\n\t\t\t}\n\t\t\tpointermid = Math.floor( ( pointermax - pointermin ) / 2 + pointermin );\n\t\t}\n\t\treturn pointermid;\n\t};\n\n\t/**\n\t * Determine the common suffix of two strings.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {number} The number of characters common to the end of each string.\n\t */\n\tDiffMatchPatch.prototype.diffCommonSuffix = function( text1, text2 ) {\n\t\tvar pointermid, pointermax, pointermin, pointerend;\n\n\t\t// Quick check for common null cases.\n\t\tif ( !text1 ||\n\t\t\t\t!text2 ||\n\t\t\t\ttext1.charAt( text1.length - 1 ) !== text2.charAt( text2.length - 1 ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Binary search.\n\t\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\n\t\tpointermin = 0;\n\t\tpointermax = Math.min( text1.length, text2.length );\n\t\tpointermid = pointermax;\n\t\tpointerend = 0;\n\t\twhile ( pointermin < pointermid ) {\n\t\t\tif ( text1.substring( text1.length - pointermid, text1.length - pointerend ) ===\n\t\t\t\t\ttext2.substring( text2.length - pointermid, text2.length - pointerend ) ) {\n\t\t\t\tpointermin = pointermid;\n\t\t\t\tpointerend = pointermin;\n\t\t\t} else {\n\t\t\t\tpointermax = pointermid;\n\t\t\t}\n\t\t\tpointermid = Math.floor( ( pointermax - pointermin ) / 2 + pointermin );\n\t\t}\n\t\treturn pointermid;\n\t};\n\n\t/**\n\t * Find the differences between two texts.  Assumes that the texts do not\n\t * have any common prefix or suffix.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {boolean} checklines Speedup flag.  If false, then don't run a\n\t *     line-level diff first to identify the changed areas.\n\t *     If true, then run a faster, slightly less optimal diff.\n\t * @param {number} deadline Time when the diff should be complete by.\n\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffCompute = function( text1, text2, checklines, deadline ) {\n\t\tvar diffs, longtext, shorttext, i, hm,\n\t\t\ttext1A, text2A, text1B, text2B,\n\t\t\tmidCommon, diffsA, diffsB;\n\n\t\tif ( !text1 ) {\n\n\t\t\t// Just add some text (speedup).\n\t\t\treturn [\n\t\t\t\t[ DIFF_INSERT, text2 ]\n\t\t\t];\n\t\t}\n\n\t\tif ( !text2 ) {\n\n\t\t\t// Just delete some text (speedup).\n\t\t\treturn [\n\t\t\t\t[ DIFF_DELETE, text1 ]\n\t\t\t];\n\t\t}\n\n\t\tlongtext = text1.length > text2.length ? text1 : text2;\n\t\tshorttext = text1.length > text2.length ? text2 : text1;\n\t\ti = longtext.indexOf( shorttext );\n\t\tif ( i !== -1 ) {\n\n\t\t\t// Shorter text is inside the longer text (speedup).\n\t\t\tdiffs = [\n\t\t\t\t[ DIFF_INSERT, longtext.substring( 0, i ) ],\n\t\t\t\t[ DIFF_EQUAL, shorttext ],\n\t\t\t\t[ DIFF_INSERT, longtext.substring( i + shorttext.length ) ]\n\t\t\t];\n\n\t\t\t// Swap insertions for deletions if diff is reversed.\n\t\t\tif ( text1.length > text2.length ) {\n\t\t\t\tdiffs[ 0 ][ 0 ] = diffs[ 2 ][ 0 ] = DIFF_DELETE;\n\t\t\t}\n\t\t\treturn diffs;\n\t\t}\n\n\t\tif ( shorttext.length === 1 ) {\n\n\t\t\t// Single character string.\n\t\t\t// After the previous speedup, the character can't be an equality.\n\t\t\treturn [\n\t\t\t\t[ DIFF_DELETE, text1 ],\n\t\t\t\t[ DIFF_INSERT, text2 ]\n\t\t\t];\n\t\t}\n\n\t\t// Check to see if the problem can be split in two.\n\t\thm = this.diffHalfMatch( text1, text2 );\n\t\tif ( hm ) {\n\n\t\t\t// A half-match was found, sort out the return data.\n\t\t\ttext1A = hm[ 0 ];\n\t\t\ttext1B = hm[ 1 ];\n\t\t\ttext2A = hm[ 2 ];\n\t\t\ttext2B = hm[ 3 ];\n\t\t\tmidCommon = hm[ 4 ];\n\n\t\t\t// Send both pairs off for separate processing.\n\t\t\tdiffsA = this.DiffMain( text1A, text2A, checklines, deadline );\n\t\t\tdiffsB = this.DiffMain( text1B, text2B, checklines, deadline );\n\n\t\t\t// Merge the results.\n\t\t\treturn diffsA.concat( [\n\t\t\t\t[ DIFF_EQUAL, midCommon ]\n\t\t\t], diffsB );\n\t\t}\n\n\t\tif ( checklines && text1.length > 100 && text2.length > 100 ) {\n\t\t\treturn this.diffLineMode( text1, text2, deadline );\n\t\t}\n\n\t\treturn this.diffBisect( text1, text2, deadline );\n\t};\n\n\t/**\n\t * Do the two texts share a substring which is at least half the length of the\n\t * longer text?\n\t * This speedup can produce non-minimal diffs.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {Array.<string>} Five element Array, containing the prefix of\n\t *     text1, the suffix of text1, the prefix of text2, the suffix of\n\t *     text2 and the common middle.  Or null if there was no match.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffHalfMatch = function( text1, text2 ) {\n\t\tvar longtext, shorttext, dmp,\n\t\t\ttext1A, text2B, text2A, text1B, midCommon,\n\t\t\thm1, hm2, hm;\n\n\t\tlongtext = text1.length > text2.length ? text1 : text2;\n\t\tshorttext = text1.length > text2.length ? text2 : text1;\n\t\tif ( longtext.length < 4 || shorttext.length * 2 < longtext.length ) {\n\t\t\treturn null; // Pointless.\n\t\t}\n\t\tdmp = this; // 'this' becomes 'window' in a closure.\n\n\t\t/**\n\t\t * Does a substring of shorttext exist within longtext such that the substring\n\t\t * is at least half the length of longtext?\n\t\t * Closure, but does not reference any external variables.\n\t\t * @param {string} longtext Longer string.\n\t\t * @param {string} shorttext Shorter string.\n\t\t * @param {number} i Start index of quarter length substring within longtext.\n\t\t * @return {Array.<string>} Five element Array, containing the prefix of\n\t\t *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n\t\t *     of shorttext and the common middle.  Or null if there was no match.\n\t\t * @private\n\t\t */\n\t\tfunction diffHalfMatchI( longtext, shorttext, i ) {\n\t\t\tvar seed, j, bestCommon, prefixLength, suffixLength,\n\t\t\t\tbestLongtextA, bestLongtextB, bestShorttextA, bestShorttextB;\n\n\t\t\t// Start with a 1/4 length substring at position i as a seed.\n\t\t\tseed = longtext.substring( i, i + Math.floor( longtext.length / 4 ) );\n\t\t\tj = -1;\n\t\t\tbestCommon = \"\";\n\t\t\twhile ( ( j = shorttext.indexOf( seed, j + 1 ) ) !== -1 ) {\n\t\t\t\tprefixLength = dmp.diffCommonPrefix( longtext.substring( i ),\n\t\t\t\t\tshorttext.substring( j ) );\n\t\t\t\tsuffixLength = dmp.diffCommonSuffix( longtext.substring( 0, i ),\n\t\t\t\t\tshorttext.substring( 0, j ) );\n\t\t\t\tif ( bestCommon.length < suffixLength + prefixLength ) {\n\t\t\t\t\tbestCommon = shorttext.substring( j - suffixLength, j ) +\n\t\t\t\t\t\tshorttext.substring( j, j + prefixLength );\n\t\t\t\t\tbestLongtextA = longtext.substring( 0, i - suffixLength );\n\t\t\t\t\tbestLongtextB = longtext.substring( i + prefixLength );\n\t\t\t\t\tbestShorttextA = shorttext.substring( 0, j - suffixLength );\n\t\t\t\t\tbestShorttextB = shorttext.substring( j + prefixLength );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( bestCommon.length * 2 >= longtext.length ) {\n\t\t\t\treturn [ bestLongtextA, bestLongtextB,\n\t\t\t\t\tbestShorttextA, bestShorttextB, bestCommon\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t// First check if the second quarter is the seed for a half-match.\n\t\thm1 = diffHalfMatchI( longtext, shorttext,\n\t\t\tMath.ceil( longtext.length / 4 ) );\n\n\t\t// Check again based on the third quarter.\n\t\thm2 = diffHalfMatchI( longtext, shorttext,\n\t\t\tMath.ceil( longtext.length / 2 ) );\n\t\tif ( !hm1 && !hm2 ) {\n\t\t\treturn null;\n\t\t} else if ( !hm2 ) {\n\t\t\thm = hm1;\n\t\t} else if ( !hm1 ) {\n\t\t\thm = hm2;\n\t\t} else {\n\n\t\t\t// Both matched.  Select the longest.\n\t\t\thm = hm1[ 4 ].length > hm2[ 4 ].length ? hm1 : hm2;\n\t\t}\n\n\t\t// A half-match was found, sort out the return data.\n\t\ttext1A, text1B, text2A, text2B;\n\t\tif ( text1.length > text2.length ) {\n\t\t\ttext1A = hm[ 0 ];\n\t\t\ttext1B = hm[ 1 ];\n\t\t\ttext2A = hm[ 2 ];\n\t\t\ttext2B = hm[ 3 ];\n\t\t} else {\n\t\t\ttext2A = hm[ 0 ];\n\t\t\ttext2B = hm[ 1 ];\n\t\t\ttext1A = hm[ 2 ];\n\t\t\ttext1B = hm[ 3 ];\n\t\t}\n\t\tmidCommon = hm[ 4 ];\n\t\treturn [ text1A, text1B, text2A, text2B, midCommon ];\n\t};\n\n\t/**\n\t * Do a quick line-level diff on both strings, then rediff the parts for\n\t * greater accuracy.\n\t * This speedup can produce non-minimal diffs.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {number} deadline Time when the diff should be complete by.\n\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffLineMode = function( text1, text2, deadline ) {\n\t\tvar a, diffs, linearray, pointer, countInsert,\n\t\t\tcountDelete, textInsert, textDelete, j;\n\n\t\t// Scan the text on a line-by-line basis first.\n\t\ta = this.diffLinesToChars( text1, text2 );\n\t\ttext1 = a.chars1;\n\t\ttext2 = a.chars2;\n\t\tlinearray = a.lineArray;\n\n\t\tdiffs = this.DiffMain( text1, text2, false, deadline );\n\n\t\t// Convert the diff back to original text.\n\t\tthis.diffCharsToLines( diffs, linearray );\n\n\t\t// Eliminate freak matches (e.g. blank lines)\n\t\tthis.diffCleanupSemantic( diffs );\n\n\t\t// Rediff any replacement blocks, this time character-by-character.\n\t\t// Add a dummy entry at the end.\n\t\tdiffs.push( [ DIFF_EQUAL, \"\" ] );\n\t\tpointer = 0;\n\t\tcountDelete = 0;\n\t\tcountInsert = 0;\n\t\ttextDelete = \"\";\n\t\ttextInsert = \"\";\n\t\twhile ( pointer < diffs.length ) {\n\t\t\tswitch ( diffs[ pointer ][ 0 ] ) {\n\t\t\tcase DIFF_INSERT:\n\t\t\t\tcountInsert++;\n\t\t\t\ttextInsert += diffs[ pointer ][ 1 ];\n\t\t\t\tbreak;\n\t\t\tcase DIFF_DELETE:\n\t\t\t\tcountDelete++;\n\t\t\t\ttextDelete += diffs[ pointer ][ 1 ];\n\t\t\t\tbreak;\n\t\t\tcase DIFF_EQUAL:\n\n\t\t\t\t// Upon reaching an equality, check for prior redundancies.\n\t\t\t\tif ( countDelete >= 1 && countInsert >= 1 ) {\n\n\t\t\t\t\t// Delete the offending records and add the merged ones.\n\t\t\t\t\tdiffs.splice( pointer - countDelete - countInsert,\n\t\t\t\t\t\tcountDelete + countInsert );\n\t\t\t\t\tpointer = pointer - countDelete - countInsert;\n\t\t\t\t\ta = this.DiffMain( textDelete, textInsert, false, deadline );\n\t\t\t\t\tfor ( j = a.length - 1; j >= 0; j-- ) {\n\t\t\t\t\t\tdiffs.splice( pointer, 0, a[ j ] );\n\t\t\t\t\t}\n\t\t\t\t\tpointer = pointer + a.length;\n\t\t\t\t}\n\t\t\t\tcountInsert = 0;\n\t\t\t\tcountDelete = 0;\n\t\t\t\ttextDelete = \"\";\n\t\t\t\ttextInsert = \"\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpointer++;\n\t\t}\n\t\tdiffs.pop(); // Remove the dummy entry at the end.\n\n\t\treturn diffs;\n\t};\n\n\t/**\n\t * Find the 'middle snake' of a diff, split the problem in two\n\t * and return the recursively constructed diff.\n\t * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {number} deadline Time at which to bail if not yet complete.\n\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffBisect = function( text1, text2, deadline ) {\n\t\tvar text1Length, text2Length, maxD, vOffset, vLength,\n\t\t\tv1, v2, x, delta, front, k1start, k1end, k2start,\n\t\t\tk2end, k2Offset, k1Offset, x1, x2, y1, y2, d, k1, k2;\n\n\t\t// Cache the text lengths to prevent multiple calls.\n\t\ttext1Length = text1.length;\n\t\ttext2Length = text2.length;\n\t\tmaxD = Math.ceil( ( text1Length + text2Length ) / 2 );\n\t\tvOffset = maxD;\n\t\tvLength = 2 * maxD;\n\t\tv1 = new Array( vLength );\n\t\tv2 = new Array( vLength );\n\n\t\t// Setting all elements to -1 is faster in Chrome & Firefox than mixing\n\t\t// integers and undefined.\n\t\tfor ( x = 0; x < vLength; x++ ) {\n\t\t\tv1[ x ] = -1;\n\t\t\tv2[ x ] = -1;\n\t\t}\n\t\tv1[ vOffset + 1 ] = 0;\n\t\tv2[ vOffset + 1 ] = 0;\n\t\tdelta = text1Length - text2Length;\n\n\t\t// If the total number of characters is odd, then the front path will collide\n\t\t// with the reverse path.\n\t\tfront = ( delta % 2 !== 0 );\n\n\t\t// Offsets for start and end of k loop.\n\t\t// Prevents mapping of space beyond the grid.\n\t\tk1start = 0;\n\t\tk1end = 0;\n\t\tk2start = 0;\n\t\tk2end = 0;\n\t\tfor ( d = 0; d < maxD; d++ ) {\n\n\t\t\t// Bail out if deadline is reached.\n\t\t\tif ( ( new Date() ).getTime() > deadline ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Walk the front path one step.\n\t\t\tfor ( k1 = -d + k1start; k1 <= d - k1end; k1 += 2 ) {\n\t\t\t\tk1Offset = vOffset + k1;\n\t\t\t\tif ( k1 === -d || ( k1 !== d && v1[ k1Offset - 1 ] < v1[ k1Offset + 1 ] ) ) {\n\t\t\t\t\tx1 = v1[ k1Offset + 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tx1 = v1[ k1Offset - 1 ] + 1;\n\t\t\t\t}\n\t\t\t\ty1 = x1 - k1;\n\t\t\t\twhile ( x1 < text1Length && y1 < text2Length &&\n\t\t\t\t\ttext1.charAt( x1 ) === text2.charAt( y1 ) ) {\n\t\t\t\t\tx1++;\n\t\t\t\t\ty1++;\n\t\t\t\t}\n\t\t\t\tv1[ k1Offset ] = x1;\n\t\t\t\tif ( x1 > text1Length ) {\n\n\t\t\t\t\t// Ran off the right of the graph.\n\t\t\t\t\tk1end += 2;\n\t\t\t\t} else if ( y1 > text2Length ) {\n\n\t\t\t\t\t// Ran off the bottom of the graph.\n\t\t\t\t\tk1start += 2;\n\t\t\t\t} else if ( front ) {\n\t\t\t\t\tk2Offset = vOffset + delta - k1;\n\t\t\t\t\tif ( k2Offset >= 0 && k2Offset < vLength && v2[ k2Offset ] !== -1 ) {\n\n\t\t\t\t\t\t// Mirror x2 onto top-left coordinate system.\n\t\t\t\t\t\tx2 = text1Length - v2[ k2Offset ];\n\t\t\t\t\t\tif ( x1 >= x2 ) {\n\n\t\t\t\t\t\t\t// Overlap detected.\n\t\t\t\t\t\t\treturn this.diffBisectSplit( text1, text2, x1, y1, deadline );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Walk the reverse path one step.\n\t\t\tfor ( k2 = -d + k2start; k2 <= d - k2end; k2 += 2 ) {\n\t\t\t\tk2Offset = vOffset + k2;\n\t\t\t\tif ( k2 === -d || ( k2 !== d && v2[ k2Offset - 1 ] < v2[ k2Offset + 1 ] ) ) {\n\t\t\t\t\tx2 = v2[ k2Offset + 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tx2 = v2[ k2Offset - 1 ] + 1;\n\t\t\t\t}\n\t\t\t\ty2 = x2 - k2;\n\t\t\t\twhile ( x2 < text1Length && y2 < text2Length &&\n\t\t\t\t\ttext1.charAt( text1Length - x2 - 1 ) ===\n\t\t\t\t\ttext2.charAt( text2Length - y2 - 1 ) ) {\n\t\t\t\t\tx2++;\n\t\t\t\t\ty2++;\n\t\t\t\t}\n\t\t\t\tv2[ k2Offset ] = x2;\n\t\t\t\tif ( x2 > text1Length ) {\n\n\t\t\t\t\t// Ran off the left of the graph.\n\t\t\t\t\tk2end += 2;\n\t\t\t\t} else if ( y2 > text2Length ) {\n\n\t\t\t\t\t// Ran off the top of the graph.\n\t\t\t\t\tk2start += 2;\n\t\t\t\t} else if ( !front ) {\n\t\t\t\t\tk1Offset = vOffset + delta - k2;\n\t\t\t\t\tif ( k1Offset >= 0 && k1Offset < vLength && v1[ k1Offset ] !== -1 ) {\n\t\t\t\t\t\tx1 = v1[ k1Offset ];\n\t\t\t\t\t\ty1 = vOffset + x1 - k1Offset;\n\n\t\t\t\t\t\t// Mirror x2 onto top-left coordinate system.\n\t\t\t\t\t\tx2 = text1Length - x2;\n\t\t\t\t\t\tif ( x1 >= x2 ) {\n\n\t\t\t\t\t\t\t// Overlap detected.\n\t\t\t\t\t\t\treturn this.diffBisectSplit( text1, text2, x1, y1, deadline );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Diff took too long and hit the deadline or\n\t\t// number of diffs equals number of characters, no commonality at all.\n\t\treturn [\n\t\t\t[ DIFF_DELETE, text1 ],\n\t\t\t[ DIFF_INSERT, text2 ]\n\t\t];\n\t};\n\n\t/**\n\t * Given the location of the 'middle snake', split the diff in two parts\n\t * and recurse.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {number} x Index of split point in text1.\n\t * @param {number} y Index of split point in text2.\n\t * @param {number} deadline Time at which to bail if not yet complete.\n\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffBisectSplit = function( text1, text2, x, y, deadline ) {\n\t\tvar text1a, text1b, text2a, text2b, diffs, diffsb;\n\t\ttext1a = text1.substring( 0, x );\n\t\ttext2a = text2.substring( 0, y );\n\t\ttext1b = text1.substring( x );\n\t\ttext2b = text2.substring( y );\n\n\t\t// Compute both diffs serially.\n\t\tdiffs = this.DiffMain( text1a, text2a, false, deadline );\n\t\tdiffsb = this.DiffMain( text1b, text2b, false, deadline );\n\n\t\treturn diffs.concat( diffsb );\n\t};\n\n\t/**\n\t * Reduce the number of edits by eliminating semantically trivial equalities.\n\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t */\n\tDiffMatchPatch.prototype.diffCleanupSemantic = function( diffs ) {\n\t\tvar changes, equalities, equalitiesLength, lastequality,\n\t\t\tpointer, lengthInsertions2, lengthDeletions2, lengthInsertions1,\n\t\t\tlengthDeletions1, deletion, insertion, overlapLength1, overlapLength2;\n\t\tchanges = false;\n\t\tequalities = []; // Stack of indices where equalities are found.\n\t\tequalitiesLength = 0; // Keeping our own length var is faster in JS.\n\t\t/** @type {?string} */\n\t\tlastequality = null;\n\n\t\t// Always equal to diffs[equalities[equalitiesLength - 1]][1]\n\t\tpointer = 0; // Index of current position.\n\n\t\t// Number of characters that changed prior to the equality.\n\t\tlengthInsertions1 = 0;\n\t\tlengthDeletions1 = 0;\n\n\t\t// Number of characters that changed after the equality.\n\t\tlengthInsertions2 = 0;\n\t\tlengthDeletions2 = 0;\n\t\twhile ( pointer < diffs.length ) {\n\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_EQUAL ) { // Equality found.\n\t\t\t\tequalities[ equalitiesLength++ ] = pointer;\n\t\t\t\tlengthInsertions1 = lengthInsertions2;\n\t\t\t\tlengthDeletions1 = lengthDeletions2;\n\t\t\t\tlengthInsertions2 = 0;\n\t\t\t\tlengthDeletions2 = 0;\n\t\t\t\tlastequality = diffs[ pointer ][ 1 ];\n\t\t\t} else { // An insertion or deletion.\n\t\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_INSERT ) {\n\t\t\t\t\tlengthInsertions2 += diffs[ pointer ][ 1 ].length;\n\t\t\t\t} else {\n\t\t\t\t\tlengthDeletions2 += diffs[ pointer ][ 1 ].length;\n\t\t\t\t}\n\n\t\t\t\t// Eliminate an equality that is smaller or equal to the edits on both\n\t\t\t\t// sides of it.\n\t\t\t\tif ( lastequality && ( lastequality.length <=\n\t\t\t\t\t\tMath.max( lengthInsertions1, lengthDeletions1 ) ) &&\n\t\t\t\t\t\t( lastequality.length <= Math.max( lengthInsertions2,\n\t\t\t\t\t\t\tlengthDeletions2 ) ) ) {\n\n\t\t\t\t\t// Duplicate record.\n\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\tequalities[ equalitiesLength - 1 ],\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t[ DIFF_DELETE, lastequality ]\n\t\t\t\t\t);\n\n\t\t\t\t\t// Change second copy to insert.\n\t\t\t\t\tdiffs[ equalities[ equalitiesLength - 1 ] + 1 ][ 0 ] = DIFF_INSERT;\n\n\t\t\t\t\t// Throw away the equality we just deleted.\n\t\t\t\t\tequalitiesLength--;\n\n\t\t\t\t\t// Throw away the previous equality (it needs to be reevaluated).\n\t\t\t\t\tequalitiesLength--;\n\t\t\t\t\tpointer = equalitiesLength > 0 ? equalities[ equalitiesLength - 1 ] : -1;\n\n\t\t\t\t\t// Reset the counters.\n\t\t\t\t\tlengthInsertions1 = 0;\n\t\t\t\t\tlengthDeletions1 = 0;\n\t\t\t\t\tlengthInsertions2 = 0;\n\t\t\t\t\tlengthDeletions2 = 0;\n\t\t\t\t\tlastequality = null;\n\t\t\t\t\tchanges = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpointer++;\n\t\t}\n\n\t\t// Normalize the diff.\n\t\tif ( changes ) {\n\t\t\tthis.diffCleanupMerge( diffs );\n\t\t}\n\n\t\t// Find any overlaps between deletions and insertions.\n\t\t// e.g: <del>abcxxx</del><ins>xxxdef</ins>\n\t\t//   -> <del>abc</del>xxx<ins>def</ins>\n\t\t// e.g: <del>xxxabc</del><ins>defxxx</ins>\n\t\t//   -> <ins>def</ins>xxx<del>abc</del>\n\t\t// Only extract an overlap if it is as big as the edit ahead or behind it.\n\t\tpointer = 1;\n\t\twhile ( pointer < diffs.length ) {\n\t\t\tif ( diffs[ pointer - 1 ][ 0 ] === DIFF_DELETE &&\n\t\t\t\t\tdiffs[ pointer ][ 0 ] === DIFF_INSERT ) {\n\t\t\t\tdeletion = diffs[ pointer - 1 ][ 1 ];\n\t\t\t\tinsertion = diffs[ pointer ][ 1 ];\n\t\t\t\toverlapLength1 = this.diffCommonOverlap( deletion, insertion );\n\t\t\t\toverlapLength2 = this.diffCommonOverlap( insertion, deletion );\n\t\t\t\tif ( overlapLength1 >= overlapLength2 ) {\n\t\t\t\t\tif ( overlapLength1 >= deletion.length / 2 ||\n\t\t\t\t\t\t\toverlapLength1 >= insertion.length / 2 ) {\n\n\t\t\t\t\t\t// Overlap found.  Insert an equality and trim the surrounding edits.\n\t\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\t\tpointer,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t[ DIFF_EQUAL, insertion.substring( 0, overlapLength1 ) ]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] =\n\t\t\t\t\t\t\tdeletion.substring( 0, deletion.length - overlapLength1 );\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] = insertion.substring( overlapLength1 );\n\t\t\t\t\t\tpointer++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ( overlapLength2 >= deletion.length / 2 ||\n\t\t\t\t\t\t\toverlapLength2 >= insertion.length / 2 ) {\n\n\t\t\t\t\t\t// Reverse overlap found.\n\t\t\t\t\t\t// Insert an equality and swap and trim the surrounding edits.\n\t\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\t\tpointer,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t[ DIFF_EQUAL, deletion.substring( 0, overlapLength2 ) ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tdiffs[ pointer - 1 ][ 0 ] = DIFF_INSERT;\n\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] =\n\t\t\t\t\t\t\tinsertion.substring( 0, insertion.length - overlapLength2 );\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 0 ] = DIFF_DELETE;\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] =\n\t\t\t\t\t\t\tdeletion.substring( overlapLength2 );\n\t\t\t\t\t\tpointer++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpointer++;\n\t\t\t}\n\t\t\tpointer++;\n\t\t}\n\t};\n\n\t/**\n\t * Determine if the suffix of one string is the prefix of another.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {number} The number of characters common to the end of the first\n\t *     string and the start of the second string.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffCommonOverlap = function( text1, text2 ) {\n\t\tvar text1Length, text2Length, textLength,\n\t\t\tbest, length, pattern, found;\n\n\t\t// Cache the text lengths to prevent multiple calls.\n\t\ttext1Length = text1.length;\n\t\ttext2Length = text2.length;\n\n\t\t// Eliminate the null case.\n\t\tif ( text1Length === 0 || text2Length === 0 ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Truncate the longer string.\n\t\tif ( text1Length > text2Length ) {\n\t\t\ttext1 = text1.substring( text1Length - text2Length );\n\t\t} else if ( text1Length < text2Length ) {\n\t\t\ttext2 = text2.substring( 0, text1Length );\n\t\t}\n\t\ttextLength = Math.min( text1Length, text2Length );\n\n\t\t// Quick check for the worst case.\n\t\tif ( text1 === text2 ) {\n\t\t\treturn textLength;\n\t\t}\n\n\t\t// Start by looking for a single character match\n\t\t// and increase length until no match is found.\n\t\t// Performance analysis: https://neil.fraser.name/news/2010/11/04/\n\t\tbest = 0;\n\t\tlength = 1;\n\t\twhile ( true ) {\n\t\t\tpattern = text1.substring( textLength - length );\n\t\t\tfound = text2.indexOf( pattern );\n\t\t\tif ( found === -1 ) {\n\t\t\t\treturn best;\n\t\t\t}\n\t\t\tlength += found;\n\t\t\tif ( found === 0 || text1.substring( textLength - length ) ===\n\t\t\t\t\ttext2.substring( 0, length ) ) {\n\t\t\t\tbest = length;\n\t\t\t\tlength++;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Split two texts into an array of strings.  Reduce the texts to a string of\n\t * hashes where each Unicode character represents one line.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n\t *     An object containing the encoded text1, the encoded text2 and\n\t *     the array of unique strings.\n\t *     The zeroth element of the array of unique strings is intentionally blank.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffLinesToChars = function( text1, text2 ) {\n\t\tvar lineArray, lineHash, chars1, chars2;\n\t\tlineArray = []; // E.g. lineArray[4] === 'Hello\\n'\n\t\tlineHash = {};  // E.g. lineHash['Hello\\n'] === 4\n\n\t\t// '\\x00' is a valid character, but various debuggers don't like it.\n\t\t// So we'll insert a junk entry to avoid generating a null character.\n\t\tlineArray[ 0 ] = \"\";\n\n\t\t/**\n\t\t * Split a text into an array of strings.  Reduce the texts to a string of\n\t\t * hashes where each Unicode character represents one line.\n\t\t * Modifies linearray and linehash through being a closure.\n\t\t * @param {string} text String to encode.\n\t\t * @return {string} Encoded string.\n\t\t * @private\n\t\t */\n\t\tfunction diffLinesToCharsMunge( text ) {\n\t\t\tvar chars, lineStart, lineEnd, lineArrayLength, line;\n\t\t\tchars = \"\";\n\n\t\t\t// Walk the text, pulling out a substring for each line.\n\t\t\t// text.split('\\n') would would temporarily double our memory footprint.\n\t\t\t// Modifying text would create many large strings to garbage collect.\n\t\t\tlineStart = 0;\n\t\t\tlineEnd = -1;\n\n\t\t\t// Keeping our own length variable is faster than looking it up.\n\t\t\tlineArrayLength = lineArray.length;\n\t\t\twhile ( lineEnd < text.length - 1 ) {\n\t\t\t\tlineEnd = text.indexOf( \"\\n\", lineStart );\n\t\t\t\tif ( lineEnd === -1 ) {\n\t\t\t\t\tlineEnd = text.length - 1;\n\t\t\t\t}\n\t\t\t\tline = text.substring( lineStart, lineEnd + 1 );\n\t\t\t\tlineStart = lineEnd + 1;\n\n\t\t\t\tif ( lineHash.hasOwnProperty ? lineHash.hasOwnProperty( line ) :\n\t\t\t\t\t\t\t( lineHash[ line ] !== undefined ) ) {\n\t\t\t\t\tchars += String.fromCharCode( lineHash[ line ] );\n\t\t\t\t} else {\n\t\t\t\t\tchars += String.fromCharCode( lineArrayLength );\n\t\t\t\t\tlineHash[ line ] = lineArrayLength;\n\t\t\t\t\tlineArray[ lineArrayLength++ ] = line;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn chars;\n\t\t}\n\n\t\tchars1 = diffLinesToCharsMunge( text1 );\n\t\tchars2 = diffLinesToCharsMunge( text2 );\n\t\treturn {\n\t\t\tchars1: chars1,\n\t\t\tchars2: chars2,\n\t\t\tlineArray: lineArray\n\t\t};\n\t};\n\n\t/**\n\t * Rehydrate the text in a diff from a string of line hashes to real lines of\n\t * text.\n\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t * @param {!Array.<string>} lineArray Array of unique strings.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffCharsToLines = function( diffs, lineArray ) {\n\t\tvar x, chars, text, y;\n\t\tfor ( x = 0; x < diffs.length; x++ ) {\n\t\t\tchars = diffs[ x ][ 1 ];\n\t\t\ttext = [];\n\t\t\tfor ( y = 0; y < chars.length; y++ ) {\n\t\t\t\ttext[ y ] = lineArray[ chars.charCodeAt( y ) ];\n\t\t\t}\n\t\t\tdiffs[ x ][ 1 ] = text.join( \"\" );\n\t\t}\n\t};\n\n\t/**\n\t * Reorder and merge like edit sections.  Merge equalities.\n\t * Any edit section can move as long as it doesn't cross an equality.\n\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t */\n\tDiffMatchPatch.prototype.diffCleanupMerge = function( diffs ) {\n\t\tvar pointer, countDelete, countInsert, textInsert, textDelete,\n\t\t\tcommonlength, changes, diffPointer, position;\n\t\tdiffs.push( [ DIFF_EQUAL, \"\" ] ); // Add a dummy entry at the end.\n\t\tpointer = 0;\n\t\tcountDelete = 0;\n\t\tcountInsert = 0;\n\t\ttextDelete = \"\";\n\t\ttextInsert = \"\";\n\t\tcommonlength;\n\t\twhile ( pointer < diffs.length ) {\n\t\t\tswitch ( diffs[ pointer ][ 0 ] ) {\n\t\t\tcase DIFF_INSERT:\n\t\t\t\tcountInsert++;\n\t\t\t\ttextInsert += diffs[ pointer ][ 1 ];\n\t\t\t\tpointer++;\n\t\t\t\tbreak;\n\t\t\tcase DIFF_DELETE:\n\t\t\t\tcountDelete++;\n\t\t\t\ttextDelete += diffs[ pointer ][ 1 ];\n\t\t\t\tpointer++;\n\t\t\t\tbreak;\n\t\t\tcase DIFF_EQUAL:\n\n\t\t\t\t// Upon reaching an equality, check for prior redundancies.\n\t\t\t\tif ( countDelete + countInsert > 1 ) {\n\t\t\t\t\tif ( countDelete !== 0 && countInsert !== 0 ) {\n\n\t\t\t\t\t\t// Factor out any common prefixes.\n\t\t\t\t\t\tcommonlength = this.diffCommonPrefix( textInsert, textDelete );\n\t\t\t\t\t\tif ( commonlength !== 0 ) {\n\t\t\t\t\t\t\tif ( ( pointer - countDelete - countInsert ) > 0 &&\n\t\t\t\t\t\t\t\t\tdiffs[ pointer - countDelete - countInsert - 1 ][ 0 ] ===\n\t\t\t\t\t\t\t\t\tDIFF_EQUAL ) {\n\t\t\t\t\t\t\t\tdiffs[ pointer - countDelete - countInsert - 1 ][ 1 ] +=\n\t\t\t\t\t\t\t\t\ttextInsert.substring( 0, commonlength );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdiffs.splice( 0, 0, [ DIFF_EQUAL,\n\t\t\t\t\t\t\t\t\ttextInsert.substring( 0, commonlength )\n\t\t\t\t\t\t\t\t] );\n\t\t\t\t\t\t\t\tpointer++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttextInsert = textInsert.substring( commonlength );\n\t\t\t\t\t\t\ttextDelete = textDelete.substring( commonlength );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Factor out any common suffixies.\n\t\t\t\t\t\tcommonlength = this.diffCommonSuffix( textInsert, textDelete );\n\t\t\t\t\t\tif ( commonlength !== 0 ) {\n\t\t\t\t\t\t\tdiffs[ pointer ][ 1 ] = textInsert.substring( textInsert.length -\n\t\t\t\t\t\t\t\t\tcommonlength ) + diffs[ pointer ][ 1 ];\n\t\t\t\t\t\t\ttextInsert = textInsert.substring( 0, textInsert.length -\n\t\t\t\t\t\t\t\tcommonlength );\n\t\t\t\t\t\t\ttextDelete = textDelete.substring( 0, textDelete.length -\n\t\t\t\t\t\t\t\tcommonlength );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Delete the offending records and add the merged ones.\n\t\t\t\t\tif ( countDelete === 0 ) {\n\t\t\t\t\t\tdiffs.splice( pointer - countInsert,\n\t\t\t\t\t\t\tcountDelete + countInsert, [ DIFF_INSERT, textInsert ] );\n\t\t\t\t\t} else if ( countInsert === 0 ) {\n\t\t\t\t\t\tdiffs.splice( pointer - countDelete,\n\t\t\t\t\t\t\tcountDelete + countInsert, [ DIFF_DELETE, textDelete ] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\t\tpointer - countDelete - countInsert,\n\t\t\t\t\t\t\tcountDelete + countInsert,\n\t\t\t\t\t\t\t[ DIFF_DELETE, textDelete ], [ DIFF_INSERT, textInsert ]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tpointer = pointer - countDelete - countInsert +\n\t\t\t\t\t\t( countDelete ? 1 : 0 ) + ( countInsert ? 1 : 0 ) + 1;\n\t\t\t\t} else if ( pointer !== 0 && diffs[ pointer - 1 ][ 0 ] === DIFF_EQUAL ) {\n\n\t\t\t\t\t// Merge this equality with the previous one.\n\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] += diffs[ pointer ][ 1 ];\n\t\t\t\t\tdiffs.splice( pointer, 1 );\n\t\t\t\t} else {\n\t\t\t\t\tpointer++;\n\t\t\t\t}\n\t\t\t\tcountInsert = 0;\n\t\t\t\tcountDelete = 0;\n\t\t\t\ttextDelete = \"\";\n\t\t\t\ttextInsert = \"\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( diffs[ diffs.length - 1 ][ 1 ] === \"\" ) {\n\t\t\tdiffs.pop(); // Remove the dummy entry at the end.\n\t\t}\n\n\t\t// Second pass: look for single edits surrounded on both sides by equalities\n\t\t// which can be shifted sideways to eliminate an equality.\n\t\t// e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n\t\tchanges = false;\n\t\tpointer = 1;\n\n\t\t// Intentionally ignore the first and last element (don't need checking).\n\t\twhile ( pointer < diffs.length - 1 ) {\n\t\t\tif ( diffs[ pointer - 1 ][ 0 ] === DIFF_EQUAL &&\n\t\t\t\t\tdiffs[ pointer + 1 ][ 0 ] === DIFF_EQUAL ) {\n\n\t\t\t\tdiffPointer = diffs[ pointer ][ 1 ];\n\t\t\t\tposition = diffPointer.substring(\n\t\t\t\t\tdiffPointer.length - diffs[ pointer - 1 ][ 1 ].length\n\t\t\t\t);\n\n\t\t\t\t// This is a single edit surrounded by equalities.\n\t\t\t\tif ( position === diffs[ pointer - 1 ][ 1 ] ) {\n\n\t\t\t\t\t// Shift the edit over the previous equality.\n\t\t\t\t\tdiffs[ pointer ][ 1 ] = diffs[ pointer - 1 ][ 1 ] +\n\t\t\t\t\t\tdiffs[ pointer ][ 1 ].substring( 0, diffs[ pointer ][ 1 ].length -\n\t\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ].length );\n\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] =\n\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] + diffs[ pointer + 1 ][ 1 ];\n\t\t\t\t\tdiffs.splice( pointer - 1, 1 );\n\t\t\t\t\tchanges = true;\n\t\t\t\t} else if ( diffPointer.substring( 0, diffs[ pointer + 1 ][ 1 ].length ) ===\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] ) {\n\n\t\t\t\t\t// Shift the edit over the next equality.\n\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] += diffs[ pointer + 1 ][ 1 ];\n\t\t\t\t\tdiffs[ pointer ][ 1 ] =\n\t\t\t\t\t\tdiffs[ pointer ][ 1 ].substring( diffs[ pointer + 1 ][ 1 ].length ) +\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ];\n\t\t\t\t\tdiffs.splice( pointer + 1, 1 );\n\t\t\t\t\tchanges = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpointer++;\n\t\t}\n\n\t\t// If shifts were made, the diff needs reordering and another shift sweep.\n\t\tif ( changes ) {\n\t\t\tthis.diffCleanupMerge( diffs );\n\t\t}\n\t};\n\n\treturn function( o, n ) {\n\t\tvar diff, output, text;\n\t\tdiff = new DiffMatchPatch();\n\t\toutput = diff.DiffMain( o, n );\n\t\tdiff.diffCleanupEfficiency( output );\n\t\ttext = diff.diffPrettyHtml( output );\n\n\t\treturn text;\n\t};\n}() );\n\n}() );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qunitjs/qunit/qunit.js\n ** module id = 9\n ** module chunks = 1\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 10\n ** module chunks = 1\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 11\n ** module chunks = 1\n **/","/**\n * @author mixed\n */\n\nimport { stub } from '../src/jsmocktool';\nimport { module, test } from '../node_modules/qunitjs/qunit/qunit';\n\nvar global = window;\n\nmodule(\"jsstub\",{\n\t\"beforeEach\":function(){\n\t\tthis.stub = stub(\"STUB\");\n\t},\n\t\"afterEach\":function(){\n\t\tthis.stub = undefined;\n\t\tSTUB = undefined;\n\t}\n});\n\ntest(\"The first parameter of stub is must be string,object.\", function(assert){\n\t//Given, When\n\tstub(\"FOO\");\n\t//Then\n\tassert.deepEqual(FOO,{});\n\n\t//Given\n\tlet BAR = {};\n\t//When\n\tstub(BAR);\n\t//Then\n\tassert.deepEqual(BAR,BAR);\n});\n\ntest(\"The Stub is only add function when already made object.\",function(assert){\n\t//Given\n\tlet Obj = {test:()=>{}};\n\t//When\n\tstub(\"Obj\");\n\t//Then\n\tassert.equal(Obj,Obj);\n\n\t//When\n\tstub(Obj);\n\t//Then\n\tassert.equal(Obj,Obj);\n});\n\ntest(\"The second parameter of stub is must be none, 'instance' or 'object'\",function(assert){\n\t//Given\n\t//When\n\tstub(\"FOO2\");\n\t//Then\n\tassert.deepEqual(FOO2,{});\n\n\t//when\n\tstub(\"FOO3\",stub.INSTANCE);\n\t//Then\n\tassert.equal(FOO3.constructor,Function);\n});\n\ntest(\"The should_receive is set empty function\",function(assert){\n\t//Given\n\t//When\n\tthis.stub.should_receive(\"test\");\n\t//Then\n\tassert.equal(STUB.test.constructor,Function);\n\n\t//Given\n\t//When\n\tstub(\"STUB2\",stub.INSTANCE).should_receive(\"test\");\n\t//Then\n\tassert.equal(STUB2.prototype.test.constructor,Function);\n});\n\ntest(\"The should_receive is change function when already function.\",function(assert){\n\t//Given\n\tlet funcObj = {test:() => false};\n\t//When\n\tstub(\"funcObj\").should_receive(\"test\");\n\t//Then\n\tassert.equal(funcObj.test(),\"\"); \t\n});\n\ntest(\"Return value of should_receive is StubMethod.\",function(assert){\n\t//Given\n\t//When\n\tlet stub_obj = this.stub.should_receive(\"test\");\n\t//Then\n\t//The StubMethod is private. so I can't test.\n\t//Instead, I made a Ducktyping test(?).\n\t//I believe correct when The return value of should_receive have and_return function.\n\t// ok(stub_obj instanceof StubMethod);\n\tassert.equal(stub_obj.and_return.constructor,Function);\n});\n\ntest(\"The and_return is return value when and_return set value.\",function(assert){\n\t//Given\n\t//When\n\tthis.stub.should_receive(\"test\").and_return(\"test\");\n\t//Then\n\tassert.equal(STUB.test(),\"test\"); \t\n});\n\ntest(\"The namespace type is well work too.\",function(assert){\n\t//Given\n\t//When\n\tthis.stub.should_receive(\"test\").and_return(\"test\");\n\t//Then\n\tassert.equal(STUB.test(),\"test\");\n\n\t//Given\n\t//When\n\tstub(\"aaa.bbb.ccc.ddd\").should_receive(\"test\").and_return(\"test\");\n\t//Then\n\tassert.equal(aaa.bbb.ccc.ddd.test(),\"test\");\n\n\t//Given\n\t//When\n\tstub(\"aaaa.bbbb.cccc\",stub.INSTANCE).should_receive(\"test\").and_return(\"test\");\n\t//Then\n\tassert.equal(new aaaa.bbbb.cccc().test(),\"test\");\n\n\t//Given\n\tglobal[\"aaaaa\"] = {};\n\taaaaa.bbbbb = {};\n\n\t//When\n\tstub(\"aaaaa.bbbbb\").should_receive(\"test\").and_return(\"test\");\n\t//Then\n\tassert.equal(aaaaa.bbbbb.test(),\"test\");\n\n\t//When\n\tstub(\"aaaaa.bbbbb.ccccc\").should_receive(\"test\").and_return(\"test\");\n\t//Then\n\tassert.equal(aaaaa.bbbbb.ccccc.test(),\"test\");\n});\n \n\n\n\n\n/** WEBPACK FOOTER **\n ** ./test/jsstub.js\n **/","import { start } from '../node_modules/qunitjs/qunit/qunit';\nstart();\n\n\n/** WEBPACK FOOTER **\n ** ./test/start.js\n **/"],"sourceRoot":""}
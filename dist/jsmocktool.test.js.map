{"version":3,"sources":["webpack:///webpack/bootstrap 173fc6d64e3a2d6e37b9?72fc","webpack:///./src/jsmock.js?b940","webpack:///./src/jsstub.js?fba8","webpack:///./test/jsmock_test.js","webpack:///./test/jsstub_test.js"],"names":[],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,+B;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,gD;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,2C;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,2B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,2B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA,2B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gD;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,oBAAoB,WAAW;;AAE5D;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,QAAQ,oBAAoB,WAAW,WAAW,oBAAoB,SAAS;;;AAG/G;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,QAAQ,oBAAoB,YAAY;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,QAAQ,oBAAoB,WAAW,WAAW,oBAAoB,SAAS;;AAE/G;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;;;;;;;;;;;AChiBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,2BAA0B;;AAE1B;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA,mC;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,oC;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE","file":"jsmocktool.test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 173fc6d64e3a2d6e37b9\n **/","\nvar global = window;\nvar _toSource;\nif(Object.prototype.toSource){\n    _toSource = function(vValue){\n        return vValue.toSource();\n    };\n}else{\n    _toSource = function(vValue){\n        var func = {\n            $ : function($) {\n                if (typeof $ == \"undefined\") return '\"\"';\n                if (typeof $ == \"boolean\") return $?\"true\":\"false\";\n                if (typeof $ == \"string\") return this.s($);\n                if (typeof $ == \"number\") return $;\n                if ($ instanceof Array) return this.a($);\n                if ($ instanceof Object) return this.o($);\n            },\n            s : function(s) {\n                var e = {'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\"};\n                var c = function(m){ return (typeof e[m] != \"undefined\")?e[m]:m;};\n                return '\"'+s.replace(/[\\\\\"'\\n\\r\\t]/g, c)+'\"';\n            },\n            a : function(a) {\n                var s = \"[\",c = \"\",n=a.length;\n                for(var i=0; i < n; i++) {\n                    if (typeof a[i] == \"function\") continue;\n                    s += c+this.$(a[i]);\n                    if (!c) c = \",\";\n                }\n                return s+\"]\";\n            },\n            o : function(o) {\n                var s = \"{\",c = \"\";\n                for(var x in o) {\n                    if (typeof o[x] == \"function\") continue;\n                    s += c+this.s(x)+\":\"+this.$(o[x]);\n                    if (!c) c = \",\";\n                }\n                return s+\"}\";\n            }\n        };\n\n        return func.$(vValue);\n\n    };\n}\n\nfunction Mock(vName,sType){\n    if(!(this instanceof Mock)){\n        return new Mock(vName,sType);\n    }else{\n        this.createMock(vName,sType||Mock.OBJECT);\n    }\n}\n\nMock.prototype.createMock = function(vName,sType){\n    this._vReturnValue = \"_js_mock_none\";\n    this._mockType = Mock.OBJECT;\n    if(typeof vName==\"string\"){\n        this.makeEnableObj(vName,sType);\n        this._mockType = sType;\n    }else if(typeof vName==\"object\"||typeof vName==\"function\"){\n        this._mockObj = vName;\n    }else{\n        throw new Error(\"Name of Mock is incorrect.The Type only have String or Object or Function.\");\n    }\n};\n\nMock.prototype.getMock = function(){\n    if(this._mockType==Mock.OBJECT){\n        return this._mockObj;\n    }else{\n        return this._mockObj.prototype;\n    }\n};\n\nMock.prototype.makeEnableObj = function(sName,sType){\n    var depth = sName.split(\".\");\n    var objectName = depth[0];\n    var obj;\n    if(depth.length > 1){\n        obj = global;\n\n        for (var i = 0, l = depth.length; i < l-1 ; i++) {\n            if (typeof obj[depth[i]] == \"undefined\"){\n                obj[depth[i]] = {};\n            } \n\n            obj = obj[depth[i]];\n        }\n        objectName = depth[depth.length-1];\n    }else{\n        obj = global;\n    }\n\n    var returnObj;\n    if(sType==Mock.OBJECT){\n        returnObj = obj[objectName];\n        if(returnObj){\n            this._mockObj = returnObj;\n        }else{\n            this._mockObj = obj[objectName] = {};\n        }\n    }else if(sType==Mock.INSTANCE){\n        returnObj = obj[objectName];\n        if(returnObj){\n            this._mockObj = returnObj;\n        }else{\n            this._mockObj = obj[objectName] = function(){};\n            this._mockObj.prototype = obj[objectName].prototype = {};\n        }\n    }\n};\n\nMock.prototype.should_receive = function(sMethodName){\n    return MockFactory.getMockMethod(this.getMock(),sMethodName);\n};\n\nMock.prototype.reset_all = function(){\n    var oObj = MockFactory.getData(this.getMock());\n    for(var i in oObj){\n        if(i!=\"current_obj\") oObj[i].record = {\"total\":0,\"param\":{}};\n    }\n};\n\nMock.prototype.reset = function(sMethodName){\n    var oObj = MockFactory.getData(this.getMock());\n    oObj[sMethodName].record = {\"total\":0,\"param\":{}};\n};\n\nMock.prototype.verify = function(sMethodName){\n    var oObj = MockFactory.getData(this.getMock());\n    if(oObj[sMethodName]){\n        if(oObj[sMethodName].record.total === 0){\n            throw new Error(sMethodName+\" is not called.\");\n        }else{\n            return oObj[sMethodName].record;\n        }\n    }else{\n        throw new Error(sMethodName+\" isn't method.\");\n    }\n};\n\nMock.prototype.verify_all = function(){\n    var oObj = MockFactory.getData(this.getMock());\n    var oReturn = {};\n    for(var i in oObj){\n        if(i!=\"current_obj\") oReturn[i] = this.verify(i);\n    }\n    return oReturn;\n};\n\nMock.INSTANCE = \"instance\";\nMock.OBJECT = \"object\";\n\nMock.anything = function(){\n    return \"_js_mock_anything_param\";\n};\n\nfunction MockMethod(oObj,sMethodName){\n    var that = this;\n    this.excuteObjs = {\n    //      key:{\n    //          arg:[],\n    //          type:\"function\",\n    //          excute : function(){}\n    //      }\n    };\n    this.record = {\"total\":0,\"param\":{}};\n    this.currentParam = _toSource([]);\n    this.excuteObjs[this.currentParam] = {};\n    oObj[sMethodName] = function(){\n        that.record.total++;\n        var argString = _toSource(argumentsToArray(arguments));\n        if(that.record.param[argString]){\n            that.record.param[argString] += 1;\n        }else{\n            that.record.param[argString] = 1;\n        }\n        var dataObj = that.excuteObjs[argString];\n        if(dataObj){\n            if(dataObj.type == \"function\"){\n                return dataObj.excute.apply(dataObj,argumentsToArray(arguments));\n            }else if(dataObj.type == \"exception\"){\n                throw dataObj.excute;\n            }else if(dataObj.type == \"return\"){\n                return dataObj.excute;\n            }\n        }else{\n            for(var i in that.excuteObjs){\n                var  currentParam = argumentsToArray(arguments);\n                var arg = that.excuteObjs[i].arg;\n\n                if(arg&&(arg.length == currentParam.length)){\n                    var paramMatch = true;\n                    for(var j = 0 , l = arg.length; j < l ; j++){\n                        if(arg[j] != currentParam[j]&&arg[j]!=\"_js_mock_anything_param\"){\n                            paramMatch = false;\n                            break;\n                        }\n                    }\n                    if(paramMatch){\n                        return that.excuteObjs[i].excute;\n                    }\n                }\n            }\n        }\n    };\n}\n\nMockMethod.prototype.with_param = function(){\n    var arg = argumentsToArray(arguments);\n    this.currentParam = _toSource(arg);\n    this.excuteObjs[this.currentParam] = {\n        arg : arg\n    };\n\n    return this;\n};\n\nMockMethod.prototype._and_template = function(sType,vExcute){\n    this.excuteObjs[this.currentParam].type = sType;\n    this.excuteObjs[this.currentParam].excute = vExcute;\n    this.currentParam = _toSource([]);\n};\n\nMockMethod.prototype.and_return = function(vReturnValue){\n    this._and_template(\"return\",vReturnValue);\n};\n\nMockMethod.prototype.and_function = function(fpFunction){\n    this._and_template(\"function\",fpFunction);\n};\n\nMockMethod.prototype.and_throw = function(xException){\n    this._and_template(\"exception\",xException); \n};\n\n\nvar MockFactory = {\n    storage : [\n    //      {\n    //          current_obj : {}, object\n    //          current_functions : {} mock method\n    //      }\n    ],\n    createData : function(oObj){\n        var dataObj = {current_obj : oObj};\n        this.storage.push(dataObj);\n\n        return dataObj;\n    },\n    createMockMethod : function(oObj,sMethodName){\n        var dataObj = this.getData(oObj);\n        dataObj[sMethodName] = new MockMethod(oObj,sMethodName);\n\n        return dataObj[sMethodName];\n    },\n    getData : function(oObj){\n        for (var i = 0, l = this.storage.length; i < l; i++) {\n            if (this.storage[i].current_obj == oObj) {\n                return this.storage[i];\n            }\n        }\n        return this.createData(oObj);\n    },\n    getMockMethod : function(oObj,sMethodName){\n        var dataObj = this.getData(oObj);\n        if(!dataObj[sMethodName]){\n            dataObj[sMethodName] = this.createMockMethod(oObj,sMethodName);\n        }\n        return dataObj[sMethodName];\n    }\n};\n\n\nfunction argumentsToArray(aArg){\n    var returnVal = [];\n    if(!!aArg.length){\n        for(var i = 0 , l = aArg.length; i < l; i++){\n            returnVal[i] = aArg[i];\n        }\n    }\n    return returnVal;\n}\n\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = Mock;\n}else{\n    global.mock = global.Mock = Mock;   \n}\nexport default Mock;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/jsmock.js\n **/","\r\nvar global = window;\r\n\r\nfunction Stub(vName, sType){\r\n    if(!(this instanceof Stub)){\r\n        return new Stub(vName,sType);\r\n    }else{\r\n        this.createStub(vName,sType||\"object\");\r\n    }\r\n}\r\n\r\nStub.prototype.createStub = function(vName,sType){\r\n    this._vReturnValue = \"_js_stub_none\";\r\n    this._stubType = Stub.OBJECT;\r\n    if(typeof vName==\"string\"){\r\n        this.makeEnableObj(vName,sType);    \r\n        this._stubType = sType;\r\n    }else if(typeof vName==\"object\"||typeof vName==\"function\"){\r\n        this._stubObj = vName;\r\n    }else{\r\n        throw new Error(\"Name of Stub is incorrect.Type is String or Object or Function.\");\r\n    }\r\n};\r\n\r\nStub.prototype.getStub = function(){\r\n    if(this._stubType==Stub.OBJECT){\r\n        return this._stubObj;\r\n    }else{\r\n        return this._stubObj.prototype;\r\n    }\r\n};\r\n\r\nStub.prototype.makeEnableObj = function(sName,sType){\r\n    var depth = sName.split(\".\");\r\n    var objectName = depth[0];\r\n    var obj;\r\n    if(depth.length > 1){\r\n        obj = global;\r\n\r\n        for (var i = 0, l = depth.length; i < l-1 ; i++) {\r\n            if (typeof obj[depth[i]] == \"undefined\"){\r\n                obj[depth[i]] = {};\r\n            } \r\n\r\n            obj = obj[depth[i]];\r\n        }\r\n        objectName = depth[depth.length-1];\r\n    }else{\r\n        obj = global;\r\n    }\r\n    var returnObj;\r\n    if(sType==Stub.OBJECT){\r\n        returnObj = obj[objectName];\r\n        if(returnObj){\r\n            this._stubObj = returnObj;\r\n        }else{\r\n            this._stubObj = obj[objectName] = {};\r\n        }\r\n    }else if(sType==Stub.INSTANCE){\r\n        returnObj = obj[objectName];\r\n        if(returnObj){\r\n            this._stubObj = returnObj;\r\n        }else{\r\n            this._stubObj = obj[objectName] = function(){};\r\n            this._stubObj.prototype = obj[objectName].prototype = {};\r\n        }\r\n    }\r\n};\r\n\r\nStub.prototype.should_receive = function(sFunctionName){\r\n    var that = this;\r\n    this.getStub()[sFunctionName] = function(){\r\n        if(that._vReturnValue != \"_js_stub_none\"){\r\n            return that._vReturnValue;\r\n        }\r\n    };\r\n    return new StubMethod(this);\r\n};\r\n\r\nfunction StubMethod(iStub){\r\n    this.iStub = iStub;\r\n}\r\n\r\nStubMethod.prototype.and_return = function(vReturn){\r\n    this.iStub._vReturnValue = vReturn;\r\n};\r\n\r\nStub.INSTANCE = \"instance\";\r\nStub.OBJECT = \"object\";\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Stub;\r\n}else{\r\n    global.stub = global.Stub = Stub;   \r\n}\r\nexport default Stub;\n\n\n/** WEBPACK FOOTER **\n ** ./src/jsstub.js\n **/","/**\n * @author mixed\n */\n\n(function(){\n  var global = this;\n  if(typeof mock === \"undefined\"){\n    var mock = require(\"../src/jsmock\");\n  }\n\n  \n  QUnit.module(\"jsmock - Object type\",{\n    \"beforeEach\":function(){\n      this.mock = mock(\"RECEIVE\");\n      this.mock_test1 = \"\";\n      this.mock_test2 = \"\";\n      this.mock_test3 = \"\";\n    },\n    \"afterEach\":function(){\n      this.mock = undefined;\n      RECEIVE = undefined;\n    }\n  });\n\n  QUnit.test(\"Must be first prameter is string or object\",function(assert){\n    //Given\n    //When\n    mock(\"FOO\");\n    //Then\n    assert.deepEqual(FOO,{});\n    \n    //Given\n    var BAR = {};\n    //When\n    mock(BAR);\n    //Then\n    assert.deepEqual(BAR,BAR);\n  });\n\n  QUnit.test(\"Must be second parameter is 'instance','object',none.\",function(assert){\n    //Given\n    //When\n    mock(\"FOO2\");\n    //Then\n    assert.deepEqual(FOO2,{});\n\n    //Given\n    //When\n    mock(\"FOO3\",mock.INSTANCE);\n    //Then\n    assert.equal(FOO3.constructor,Function);\n  });\n\n  QUnit.test(\"The should_receive is set method of mock Object.\",function(assert){\n    //Given\n    var receiveMock = mock(\"RECEIVE\");\n    //Then\n    receiveMock.should_receive(\"test\");\n    //When\n    assert.equal(RECEIVE.test.constructor,Function);\n\n    //Given\n    var receiveMock2 = mock(\"RECEIVE2\",mock.INSTANCE);\n    //Then\n    receiveMock2.should_receive(\"test\");\n    //When\n    assert.equal(RECEIVE2.prototype.test.constructor,Function);\n  });\n\n  QUnit.test(\"Return value of should_receive is MockMethod.\",function(assert){\n    //Given\n    var receive = mock(\"RECEIVE3\");\n    //When\n    var mock_method = receive.should_receive(\"test\");\n    //The MockMethod is private. so I can't test.\n    //Instead, I made a Ducktyping test(?).\n    //I believe correct when The return value of should_receive have and_return function.\n    // ok(stub_obj instanceof MockMethod);\n    //Then\n    assert.equal(mock_method.and_return.constructor,Function);\n  });\n\n  QUnit.test(\"The and_return is  setting value to return.\",function(assert){\n    //Given\n    mock(\"RECEIVE4\").should_receive(\"test\").and_return(3);\n    //When\n    var returnVal = RECEIVE4.test();\n    //Then\n    assert.equal(returnVal,3);\n  });\n\n  QUnit.test(\"If use with_param, mock will return value when same param.\",function(assert){\n    //Given\n    mock(\"RECEIVE4\").should_receive(\"test\").with_param(1,2).and_return(4);\n    //When\n    var returnVal = RECEIVE4.test(1,2);\n    //Then\n    assert.equal(returnVal,4);  \n  });\n\n  QUnit.test(\"The Mock must be work mock before set parameter when add new parameter.\",function(assert){\n    //Given\n    this.mock.should_receive(\"test\").and_return(3);\n    this.mock.should_receive(\"test\").with_param(1,2).and_return(4);\n    this.mock.should_receive(\"test\").with_param(1,2,3).and_return(5);\n    //When\n    var noneParam = RECEIVE.test();\n    var oneParam  = RECEIVE.test(1,2);\n    var twoParam  = RECEIVE.test(1,2,3);\n    //Then\n    assert.equal(noneParam , 3);\n    assert.equal(oneParam  , 4);\n    assert.equal(twoParam  , 5);\n  });\n\n  QUnit.test(\"The Mock must be change return value when add same parameter.\",function(assert){\n    //Given\n    this.mock.should_receive(\"test\").and_return(3);\n    this.mock.should_receive(\"test\").with_param(1,2).and_return(4);\n    this.mock.should_receive(\"test\").with_param(1,2).and_return(5);\n    //When\n    var noneParam = RECEIVE.test();\n    var twoParam  = RECEIVE.test(1,2);\n    //Then\n    assert.equal(noneParam, 3);\n    assert.equal(twoParam , 5);\n  });\n\n  QUnit.test(\"The add_throw is throw exception when match param.\",function(assert) {\n    //Given\n    var error_message = \"\";\n    this.mock.should_receive(\"test2\").and_throw(new Error(\"and_throw test.\"));\n    //When\n    try{\n      RECEIVE.test2();\n    }catch(e){\n      error_message = e.message;\n    }\n    //Then\n    assert.equal(error_message,\"and_throw test.\");\n  });\n\n  QUnit.test(\"If set with_param of and_throw then throw exception when match parameter.\",function(assert) {\n    //Given\n    this.mock.should_receive(\"test2\").with_param(1,2).and_throw(new Error(\"and_throw test2.\"));\n    var error_message = \"\";\n\n    //When\n    try{\n      RECEIVE.test2(1,2);\n    }catch(e){\n      error_message = e.message;\n    }\n\n    //Then\n    assert.equal(error_message,\"and_throw test2.\");\n  });\n\n  QUnit.test(\"The and_throw is well work when change parameter\",function  (assert) {\n    //Given\n    this.mock.should_receive(\"test2\").with_param().and_throw(new Error(\"and_throw test\"));\n    this.mock.should_receive(\"test2\").with_param(1,2).and_throw(new Error(\"and_throw test2\"));\n    this.mock.should_receive(\"test2\").with_param(1,2,3).and_throw(new Error(\"and_throw test3\"));\n    var error_message = \"\";\n\n    //When\n    try{\n     RECEIVE.test2();\n    }catch(e){\n     error_message = e.message;\n    }\n    //Then\n    assert.equal(error_message,\"and_throw test\");\n\n    //When\n    try{\n     RECEIVE.test2(1,2);\n    }catch(e){\n     error_message = e.message;\n    }\n    //Then\n    assert.equal(error_message,\"and_throw test2\");\n\n    //When\n    try{\n     RECEIVE.test2(1,2,3);\n    }catch(e){\n     error_message = e.message;\n    }\n    //Then\n    assert.equal(error_message,\"and_throw test3\");\n  });\n  QUnit.test(\"The and_throw throw new exception when some function, same parameter, change exception.\",function  (assert) {\n    //Given\n    this.mock.should_receive(\"test2\").with_param(1,2,3).and_throw(new Error(\"and_throw test\"));\n    var error_message = \"\";\n    //When\n    try{\n     RECEIVE.test2(1,2,3);\n    }catch(e){\n     error_message = e.message;\n    }\n    //Then\n    assert.equal(error_message,\"and_throw test\");\n\n    //Then\n    this.mock.should_receive(\"test2\").with_param(1,2,3).and_throw(new Error(\"change throw\"));\n    try{\n     RECEIVE.test2(1,2,3);\n    }catch(e){\n     error_message = e.message;\n    }\n    //When\n    assert.equal(error_message,\"change throw\"); \n  });\n\n  QUnit.test(\"The and_function run function when set new function\",function  (assert) {\n\n    //Given\n    var that = this;\n    this.mock.should_receive(\"test3\").and_function(function(){\n      that.mock_test1=\"first\";\n    });\n    //Then\n    RECEIVE.test3();\n    //When\n    assert.equal(that.mock_test1,\"first\");  \n  });\n\n  QUnit.test(\"If set a with_param then the and_functon run function when only match parameter.\",function(assert){\n    //Given\n    var that = this;\n    this.mock.should_receive(\"test3\").with_param(1,2).and_function(function(){\n     that.mock_test2 = \"second\";\n    });\n    //Then\n    RECEIVE.test3(1,2);\n    //When\n    assert.equal(that.mock_test2,\"second\");\n  });\n\n  QUnit.test(\"Then and_function is well work when same function change parameter.\",function(assert){\n    //Given\n    var that = this;\n    this.mock.should_receive(\"test3\").with_param().and_function(function(){\n     that.mock_test1=\"first\";\n    });\n    this.mock.should_receive(\"test3\").with_param(1,2).and_function(function(){\n     that.mock_test2=\"second\";\n    });\n    this.mock.should_receive(\"test3\").with_param(1,2,3).and_function(function(){\n     that.mock_test3=\"third\";\n    });\n    //When\n    RECEIVE.test3();\n    //Then\n    assert.equal(that.mock_test1,\"first\");\n\n    //When\n    RECEIVE.test3(1,2);\n    //Then\n    assert.equal(that.mock_test2,\"second\");\n\n    //When\n    RECEIVE.test3(1,2,3);\n    //Then\n    assert.equal(that.mock_test3,\"third\");\n  });\n  QUnit.test(\"The and_function run new function when some function, same parameter, change and_function.\",function(assert){\n    //Given\n    var that = this;\n    this.mock.should_receive(\"test3\").with_param(1,2,3).and_function(function(){\n     that.mock_test3=\"third\";\n    });\n    this.mock.should_receive(\"test3\").with_param(1,2,3).and_function(function(){\n     that.mock_test3=\"change third\";\n    });\n    //When\n    RECEIVE.test3(1,2,3);\n    //Then\n    assert.equal(that.mock_test3,\"change third\");\n  });\n  QUnit.test(\"If use Mock.anything when run function without reference to parameter.\",function(assert){\n    //Given\n    this.mock.should_receive(\"test\").with_param(1,2).and_return(\"1\");\n    this.mock.should_receive(\"test\").with_param(1,2,mock.anything()).and_return(\"2\");\n    this.mock.should_receive(\"test\").with_param(1,2,mock.anything(),mock.anything()).and_return(\"3\");\n\n    //When, Then\n    assert.equal(RECEIVE.test(1,2),\"1\");\n    assert.equal(RECEIVE.test(1,2,3),\"2\");\n    assert.equal(RECEIVE.test(1,2,1),\"2\");\n    assert.equal(RECEIVE.test(1,2,4),\"2\");\n    assert.equal(RECEIVE.test(1,2,4,5),\"3\");\n    assert.equal(RECEIVE.test(1,2,4,6),\"3\");\n  });\n\n  //    'param에 anything이 들어간 파라메터에서 다시 설정한 경우에 다시 설정한 값으로 반환 해야 한다.':function(){\n  //      mock(\"Foo\").should_receive(\"test\").with_param(\"5\",\"6\",Mock.anything()).and_return(\"5\");\n  //      value_of(Foo.test(\"5\",\"6\",\"3\")).should_be(\"5\");\n        \n  //      mock(\"Foo\").should_receive(\"test\").with_param(\"5\",\"6\",Mock.anything()).and_return(\"6\");\n  //      value_of(Foo.test(\"5\",\"6\",\"3\")).should_be(\"6\");\n        \n  //    },\n\n  QUnit.module(\"jsmock - other type\",{\n    \"beforeEach\":function(){\n      \n      this.mock_test1 = \"\";\n      this.mock_test2 = \"\";\n      this.mock_test3 = \"\";\n    },\n    \"afterEach\":function(){\n      this.mock = undefined;\n      MockInstance = undefined;\n    }\n  });\n\n  QUnit.test(\"The instance type is well work too.\",function(assert){\n    //Given\n    var that = this;\n    var receive = mock(\"MockInstance\",mock.INSTANCE);\n    receive.should_receive(\"test\").with_param(1).and_return(\"1\");\n    receive.should_receive(\"test\").with_param(2).and_throw(new Error(\"test\"));\n    receive.should_receive(\"test\").with_param(3).and_function(function(){\n      that.mock_test1=\"test\";\n    });\n    var errormessage = \"\"; \n\n    //When\n    var mockInstance = new MockInstance();\n    //Then\n    assert.equal(mockInstance.test(1),\"1\");\n\n    //When\n    try{\n     mockInstance.test(2);\n    }catch(e){\n     errormessage = e.message;\n    }\n    //Then\n    assert.equal(errormessage,\"test\");\n\n    //When\n    mockInstance.test(3);\n    //Then\n    assert.equal(that.mock_test1,\"test\");\n  });\n\n  QUnit.test(\"The normal functon is well work too.\",function(assert){\n    //Given\n    var that = this;\n    var receive = mock(global);\n    receive.should_receive(\"commonfunc\").with_param(1).and_return(\"1\");\n    receive.should_receive(\"commonfunc\").with_param(2).and_throw(new Error(\"test2\"));\n    receive.should_receive(\"commonfunc\").with_param(3).and_function(function(){\n     that.mock_test1=\"commonfunc\";\n    });\n    var errormessage = \"\"; \n\n    //Then\n    var returnVal = commonfunc(1);\n    //When\n    assert.equal(returnVal,\"1\");\n\n    //Then\n    try{\n     commonfunc(2);\n    }catch(e){\n     errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"test2\");\n\n    //Then\n    commonfunc(3);\n    //When\n    assert.equal(that.mock_test1,\"commonfunc\");\n  });\n  QUnit.test(\"The namespace type is well work too.\",function(assert){\n    //Given\n    mock(\"aaa.bbb.ccc.ddd\").should_receive(\"test\").and_return(\"test\");\n    //Then,When\n    assert.equal(aaa.bbb.ccc.ddd.test(),\"test\");\n\n    //Given\n    mock(\"aaaa.bbbb.cccc\",mock.INSTANCE).should_receive(\"test\").and_return(\"test\");\n    //Then,When\n    assert.equal(new aaaa.bbbb.cccc().test(),\"test\");\n\n    //Given\n    global[\"aaaaa\"] = {};\n    aaaaa.bbbbb = {};\n    mock(\"aaaaa.bbbbb\").should_receive(\"test\").and_return(\"test\");\n    //Then,When\n    assert.equal(aaaaa.bbbbb.test(),\"test\");\n\n    //Given\n    mock(\"aaaaa.bbbbb.ccccc\").should_receive(\"test\").and_return(\"test\");\n    //Then,When\n    assert.equal(aaaaa.bbbbb.ccccc.test(),\"test\");\n  });\n\n  QUnit.test(\"The with_param well work when use namespace.\",function(assert){\n    //Given\n    var that = this;\n    mock(\"param.test\").should_receive(\"commonfunc\").with_param(1).and_return(\"1\");\n    mock(\"param.test\").should_receive(\"commonfunc\").with_param(2).and_throw(new Error(\"test2\"));\n    mock(\"param.test\").should_receive(\"commonfunc\").with_param(3).and_function(function(){\n     that.mock_test1=\"commonfunc\";\n    });\n\n    //Then, When\n    assert.equal(param.test.commonfunc(1),\"1\");\n\n    //Given\n    var errormessage = \"\"; \n    try{\n     param.test.commonfunc(2);\n    }catch(e){\n     errormessage = e.message;\n    }\n    //Then, When\n    assert.equal(errormessage,\"test2\");\n\n    //Then\n    param.test.commonfunc(3);\n    //When\n    assert.equal(that.mock_test1,\"commonfunc\");  \n  });\n\n  QUnit.module(\"jsmock - verify\",{\n    \"beforeEach\":function(){\n      this.mock = mock(\"Verify\");\n      this.mock_test1 = \"\";\n      this.mock_test2 = \"\";\n      this.mock_test3 = \"\";\n    },\n    \"afterEach\":function(){\n      this.mock = undefined;\n      Verify = undefined;\n    }\n  });\n\n  QUnit.test(\"The verify is well work.\",function(assert){\n    //Given\n    this.mock.should_receive(\"kall\").with_param(1,2).and_return(\"1\");\n    this.mock.should_receive(\"kall2\").and_return(\"1\");\n    Verify.kall(1,2);\n    var errormessage = \"\";\n    //Then\n    var result = this.mock.verify(\"kall\");\n    //When\n    assert.deepEqual(result,{\"total\":1, \"param\":{\"[1,2]\":1}});\n\n    //Then\n    try{\n      mock(\"Verify\").verify(\"kall2\");\n    }catch(e){\n      errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"kall2 is not called.\");\n\n    //Then\n    try{\n      mock(\"Verify\").verify(\"kall3\");\n    }catch(e){\n      errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"kall3 isn't method.\");\n  });\n  QUnit.test(\"The verify_all is check all method.\",function(assert){\n\n    //Given\n    mock(\"Verify2\").should_receive(\"kall\").with_param(1,2).and_return(\"1\");\n    mock(\"Verify2\").should_receive(\"kall2\").and_return(\"1\");\n    Verify2.kall(1,2);\n    Verify2.kall2();\n    var returnVal;\n    //Then\n    returnVal = mock(\"Verify2\").verify_all();\n    //When\n    assert.deepEqual(returnVal,{\"kall\":{\"total\":1, \"param\":{\"[1,2]\":1}}, \"kall2\":{\"total\":1, \"param\":{\"[]\":1}}});\n\n\n    //Given\n    mock(\"Verify3\").should_receive(\"kall\").with_param(1,2).and_return(\"1\");\n    var errormessage;\n    //Then\n    try{\n      mock(\"Verify3\").verify_all();\n    }catch(e){\n      errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"kall is not called.\");\n  });\n  QUnit.test(\"The reset is remove info of function call.\",function(assert){\n    //Given\n    mock(\"Verify4\").should_receive(\"kall\").with_param(1,2).and_return(\"1\");\n    Verify4.kall(1,2);\n    //Then\n    var returnVal = mock(\"Verify4\").verify_all();\n    //When\n    assert.deepEqual(returnVal,{\"kall\":{\"total\":1, \"param\":{\"[1,2]\":1}}});\n    \n    //Given\n    var errormessage;\n    //Then\n    mock(\"Verify4\").reset(\"kall\");\n    try{\n      mock(\"Verify4\").verify(\"kall\");\n    }catch(e){\n      errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"kall is not called.\");\n  });\n  QUnit.test(\"The reset_all is remove all info of function call.\",function(assert){\n    //Given\n    mock(\"Verify5\").should_receive(\"kall\").with_param(1,2).and_return(\"1\");\n    mock(\"Verify5\").should_receive(\"kall2\").and_return(\"1\");\n    Verify5.kall(1,2);\n    Verify5.kall2();\n    //Then\n    var returnVal = mock(\"Verify5\").verify_all();\n    //When\n    assert.deepEqual(returnVal,{\"kall\":{\"total\":1, \"param\":{\"[1,2]\":1}}, \"kall2\":{\"total\":1, \"param\":{\"[]\":1}}});\n\n    //Given\n    var errormessage;\n    //Then\n    mock(\"Verify5\").reset_all();\n    try{\n      mock(\"Verify5\").verify_all();\n    }catch(e){\n      errormessage = e.message;\n    }\n    //When\n    assert.equal(errormessage,\"kall is not called.\");\n  });\n})();\n\n\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./test/jsmock_test.js\n ** module id = 3\n ** module chunks = 1\n **/","/**\n * @author mixed\n */\n (function(){\n \tvar global = this;\n\tif(typeof stub === \"undefined\"){\n\t\tvar stub = require(\"../src/jsstub\");\n\t}\n\t QUnit.module(\"jsstub\",{\n\t \t\"beforeEach\":function(){\n\t \t\tthis.stub = stub(\"STUB\");\n\t \t},\n\t \t\"afterEach\":function(){\n\t \t\tthis.stub = undefined;\n\t \t\tSTUB = undefined;\n\t \t}\n\t });\n\n\t QUnit.test(\"The first parameter of stub is must be string,object.\",function(assert){\n\t \t//Given, When\n\t\tstub(\"FOO\");\n\t\t//Then\n\t\tassert.deepEqual(FOO,{});\n\n\t\t//Given\n\t\tvar BAR = {};\n\t\t//When\n\t\tstub(BAR);\n\t\t//Then\n\t\tassert.deepEqual(BAR,BAR);\n\t });\n\n\t QUnit.test(\"The Stub is only add function when already made object.\",function(assert){\n\t \t//Given\n\t\tvar Obj = {test:function(){}};\n\t\t//When\n\t\tstub(\"Obj\");\n\t\t//Then\n\t\tassert.equal(Obj,Obj);\n\n\t\t//When\n\t\tstub(Obj);\n\t\t//Then\n\t\tassert.equal(Obj,Obj);\n\t });\n\t QUnit.test(\"The second parameter of stub is must be none, 'instance' or 'object'\",function(assert){\n\t \t//Given\n\t \t//When\n\t\tstub(\"FOO2\");\n\t\t//Then\n\t\tassert.deepEqual(FOO2,{});\n\n\t\t//when\n\t\tstub(\"FOO3\",stub.INSTANCE);\n\t\t//Then\n\t\tassert.equal(FOO3.constructor,Function);\n\t });\n\t QUnit.test(\"The should_receive is set empty function\",function(assert){\n\t \t//Given\n\t \t//When\n\t\tthis.stub.should_receive(\"test\");\n\t\t//Then\n\t\tassert.equal(STUB.test.constructor,Function);\n\n\t\t//Given\n\t\t//When\n\t\tstub(\"STUB2\",stub.INSTANCE).should_receive(\"test\");\n\t\t//Then\n\t\tassert.equal(STUB2.prototype.test.constructor,Function);\n\t });\n\n\t QUnit.test(\"The should_receive is change function when already function.\",function  (assert) {\n\t \t//Given\n\t\tvar funcObj = {test:function(){return false;}};\n\t\t//When\n\t\tstub(\"funcObj\").should_receive(\"test\");\n\t\t//Then\n\t\tassert.equal(funcObj.test(),\"\"); \t\n\t });\n\n\t QUnit.test(\"Return value of should_receive is StubMethod.\",function (assert) {\n\t \t//Given\n\t \t//When\n\t\tvar stub_obj = this.stub.should_receive(\"test\");\n\t\t//Then\n\t\t//The StubMethod is private. so I can't test.\n\t\t//Instead, I made a Ducktyping test(?).\n\t\t//I believe correct when The return value of should_receive have and_return function.\n\t\t// ok(stub_obj instanceof StubMethod);\n\t\tassert.equal(stub_obj.and_return.constructor,Function);\n\t });\n\t QUnit.test(\"The and_return is return value when and_return set value.\",function (assert) {\n\t \t//Given\n\t \t//When\n\t\tthis.stub.should_receive(\"test\").and_return(\"test\");\n\t\t//Then\n\t\tassert.equal(STUB.test(),\"test\"); \t\n\t });\n\t QUnit.test(\"The namespace type is well work too.\",function(assert){\n\t \t//Given\n\t \t//When\n\t\tthis.stub.should_receive(\"test\").and_return(\"test\");\n\t\t//Then\n\t\tassert.equal(STUB.test(),\"test\");\n\n\t\t//Given\n\t\t//When\n\t\tstub(\"aaa.bbb.ccc.ddd\").should_receive(\"test\").and_return(\"test\");\n\t\t//Then\n\t\tassert.equal(aaa.bbb.ccc.ddd.test(),\"test\");\n\n\t\t//Given\n\t\t//When\n\t\tstub(\"aaaa.bbbb.cccc\",stub.INSTANCE).should_receive(\"test\").and_return(\"test\");\n\t\t//Then\n\t\tassert.equal(new aaaa.bbbb.cccc().test(),\"test\");\n\n\t\t//Given\n\t\tglobal[\"aaaaa\"] = {};\n\t\taaaaa.bbbbb = {};\n\n\t\t//When\n\t\tstub(\"aaaaa.bbbbb\").should_receive(\"test\").and_return(\"test\");\n\t\t//Then\n\t\tassert.equal(aaaaa.bbbbb.test(),\"test\");\n\n\t\t//When\n\t\tstub(\"aaaaa.bbbbb.ccccc\").should_receive(\"test\").and_return(\"test\");\n\t\t//Then\n\t\tassert.equal(aaaaa.bbbbb.ccccc.test(),\"test\");\n\t });\n })();\n \n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./test/jsstub_test.js\n ** module id = 5\n ** module chunks = 1\n **/"],"sourceRoot":""}
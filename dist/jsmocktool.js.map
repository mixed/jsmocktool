{"version":3,"sources":["webpack:///dist/jsmocktool.js","webpack:///webpack/bootstrap 883e94e3087ca5498049?fd62","webpack:///./src/global.js?dcb7","webpack:///./src/testDouble.js?4792","webpack:///./src/jsmocktool.js?eea9","webpack:///./src/mock/jsmock.js?00fb","webpack:///./src/mock/jsmockMethod.js?1018","webpack:///./src/mock/jsmockMethodFactory.js?d2b5","webpack:///./src/stub/jsstub.js?14e5","webpack:///./src/stub/jsstubMethod.js?e16c"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","window","Math","self","Function","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","undefined","_typeof","Symbol","iterator","constructor","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_global","_global2","TestDouble","name","type","this","createTestDouble","returnValue","testDoubleType","makeEnableObj","Error","testDoubleObj","depth","split","objectName","splice","forEach","v","returnObj","mock","stub","_jsstub","_jsstub2","_jsmock","_jsmock2","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","mockWrap","Mock","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","next","done","push","err","Array","isArray","_jsmockMethodFactory","_jsmockMethodFactory2","_testDouble","_testDouble2","_TestDouble","arguments","_this","getPrototypeOf","methodName","getMethod","getTestDouble","methodInfo","getData","get","record","total","_this2","verify","param","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_step$value","OBJECT","INSTANCE","anything","MockMethod","excuteObjs","Map","currentParam","transformParamToString","set","setup","JSON","stringify","that","_len","params","_key","argString","dataObj","excute","apply","info","arg","find","_len2","_key2","returnVal","and_template","returnFunction","returnException","_jsmockMethod","_jsmockMethod2","storage","createData","createMethod","data","methodObj","warn","msg","console","stubWrap","Stub","_jsstubMethod","_jsstubMethod2","functionName","StubMethod"],"mappings":"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","file":"dist/jsmocktool.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\t__webpack_require__(3);\n\t__webpack_require__(2);\n\t__webpack_require__(4);\n\t__webpack_require__(6);\n\t__webpack_require__(5);\n\t__webpack_require__(7);\n\tmodule.exports = __webpack_require__(8);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\t/* eslint-disable */\n\tmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof self !== 'undefined' && self.Math === Math ? self : Function('return this')();\n\t/* eslint-enable */\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.default = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @access private\n\t **/\n\t\n\tvar TestDouble = function () {\n\t\tfunction TestDouble(name, type) {\n\t\t\t_classCallCheck(this, TestDouble);\n\t\n\t\t\tthis.createTestDouble(name, type);\n\t\t}\n\t\n\t\t_createClass(TestDouble, [{\n\t\t\tkey: 'createTestDouble',\n\t\t\tvalue: function createTestDouble(name, type) {\n\t\t\t\tthis.returnValue = '_js_testDouble_none';\n\t\t\t\tthis.testDoubleType = type;\n\t\n\t\t\t\tif (typeof name === 'string') {\n\t\t\t\t\tthis.makeEnableObj(name, type);\n\t\t\t\t} else if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object' || typeof name === 'function') {\n\t\t\t\t\tthis.testDoubleObj = name;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Name of ' + this.type + ' is incorrect.\\n\\t\\t\\tThe Type only have String or Object or Function.');\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getTestDouble',\n\t\t\tvalue: function getTestDouble() {\n\t\t\t\tif (this.testDoubleType === 'object') {\n\t\t\t\t\treturn this.testDoubleObj;\n\t\t\t\t}\n\t\t\t\treturn this.testDoubleObj.prototype;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'makeEnableObj',\n\t\t\tvalue: function makeEnableObj(name, type) {\n\t\t\t\tvar depth = name.split('.');\n\t\t\t\tvar objectName = depth[0];\n\t\t\t\tvar obj = _global2.default;\n\t\t\t\tif (depth.length > 1) {\n\t\t\t\t\tdepth.splice(0, depth.length - 1).forEach(function (v) {\n\t\t\t\t\t\tif (typeof obj[v] === 'undefined') {\n\t\t\t\t\t\t\tobj[v] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobj = obj[v];\n\t\t\t\t\t});\n\t\t\t\t\tobjectName = depth[depth.length - 1];\n\t\t\t\t}\n\t\n\t\t\t\tvar returnObj = obj[objectName];\n\t\t\t\tthis.testDoubleObj = returnObj;\n\t\t\t\tif (type === 'object' && !returnObj) {\n\t\t\t\t\tthis.testDoubleObj = obj[objectName] = {};\n\t\t\t\t} else if (type === 'instance' && !returnObj) {\n\t\t\t\t\tthis.testDoubleObj = obj[objectName] = function () {};\n\t\t\t\t\tthis.testDoubleObj.prototype = obj[objectName].prototype = {};\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn TestDouble;\n\t}();\n\t\n\texports.default = TestDouble;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.mock = exports.stub = undefined;\n\t\n\tvar _jsstub = __webpack_require__(7);\n\t\n\tvar _jsstub2 = _interopRequireDefault(_jsstub);\n\t\n\tvar _jsmock = __webpack_require__(4);\n\t\n\tvar _jsmock2 = _interopRequireDefault(_jsmock);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.stub = _jsstub2.default;\n\texports.mock = _jsmock2.default;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = mockWrap;\n\t\n\tvar _jsmockMethodFactory = __webpack_require__(6);\n\t\n\tvar _jsmockMethodFactory2 = _interopRequireDefault(_jsmockMethodFactory);\n\t\n\tvar _testDouble = __webpack_require__(2);\n\t\n\tvar _testDouble2 = _interopRequireDefault(_testDouble);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/** @class Mock */\n\t\n\tvar Mock = function (_TestDouble) {\n\t\t_inherits(Mock, _TestDouble);\n\t\n\t\t/**\n\t  * @access private\n\t  **/\n\t\n\t\tfunction Mock(name) {\n\t\t\tvar type = arguments.length <= 1 || arguments[1] === undefined ? 'object' : arguments[1];\n\t\n\t\t\t_classCallCheck(this, Mock);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Mock).call(this, name, type));\n\t\n\t\t\t_this.type = 'Mock';\n\t\t\treturn _this;\n\t\t}\n\t\t/**\n\t  * should_receive make method in mock.\n\t  * @memberof Mock\n\t  * @instance\n\t  * @param {string} methodName - method name in mock.\n\t  * @function should_receive\n\t  * @returns {MockMethod}\n\t  * @example\n\t mock(\"obj\").should_receive(\"something\");\n\t // obj.something();\n\t mock(\"Sample\",mock.INSTANCE).should_receive(\"something\");\n\t // let sample = new Sample();\n\t // sample.something();\n\t // class Test\n\t // end\n\t // let test = new Test();\n\t mock(test).should_receive(\"something\");\n\t // test.something();\n\t mock(Test,mock.INSTANCE).should_receive(\"instance\");\n\t // let test = new Test();\n\t // test.instance()\n\t  **/\n\t\n\t\n\t\t_createClass(Mock, [{\n\t\t\tkey: 'should_receive',\n\t\t\tvalue: function should_receive(methodName) {\n\t\t\t\treturn _jsmockMethodFactory2.default.getMethod(this.getTestDouble(), methodName);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Return specific information called method.\n\t   * @memberof Mock\n\t   * @instance\n\t   * @function verify\n\t   * @example\n\t  mock(\"obj\").should_receive(\"something\");\n\t  obj.something();\n\t  mock(\"obj\").verify(\"something\"); // {\"total\" : 1, param : {}}\n\t   **/\n\t\n\t\t}, {\n\t\t\tkey: 'verify',\n\t\t\tvalue: function verify(methodName) {\n\t\t\t\tvar methodInfo = _jsmockMethodFactory2.default.getData(this.getTestDouble()).get(methodName);\n\t\t\t\tif (methodInfo) {\n\t\t\t\t\tif (methodInfo.record.total === 0) {\n\t\t\t\t\t\tthrow new Error(methodName + ' isn\\'t called.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn methodInfo.record;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(methodName + ' isn\\'t method.');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Return all information called methods.\n\t   * @memberof Mock\n\t   * @instance\n\t   * @function verify_all\n\t   * @example\n\t  mock(\"obj\").should_receive(\"something\");\n\t  mock(\"obj\").should_receive(\"something2\");\n\t  obj.something();\n\t  obj.something2();\n\t  mock(\"obj\").verify_all();\n\t  //{\n\t  //\t\"something\": {total\" : 1, param : {}}\n\t  //\t\"something2\": {total\" : 1, param : {}}\n\t  //}\n\t   **/\n\t\n\t\t}, {\n\t\t\tkey: 'verify_all',\n\t\t\tvalue: function verify_all() {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tvar obj = _jsmockMethodFactory2.default.getData(this.getTestDouble());\n\t\t\t\tvar returnValue = {};\n\t\n\t\t\t\tobj.forEach(function (v, i) {\n\t\t\t\t\tif (i !== 'current_obj') returnValue[i] = _this2.verify(i);\n\t\t\t\t});\n\t\n\t\t\t\treturn returnValue;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Resets specific information called method.\n\t   * @memberof Mock\n\t   * @instance\n\t   * @function reset\n\t   * @example\n\t  mock(\"obj\").should_receive(\"something\");\n\t  mock(\"obj\").should_receive(\"something2\");\n\t  obj.something();\n\t  obj.something2();\n\t  mock(\"obj\").verify(\"something\"); // {\"total\" : 1, param : {}}\n\t  mock(\"obj\").verify(\"something2\"); // {\"total\" : 1, param : {}}\n\t  mock(\"obj\").reset(\"something\");\n\t  mock(\"obj\").verify(\"something\"); // throw new Error(`something isn't called.`);\n\t  mock(\"obj\").verify(\"something2\"); // {\"total\" : 1, param : {}}\n\t   **/\n\t\n\t\t}, {\n\t\t\tkey: 'reset',\n\t\t\tvalue: function reset(methodName) {\n\t\t\t\tvar obj = _jsmockMethodFactory2.default.getData(this.getTestDouble());\n\t\t\t\tobj.get(methodName).record = { total: 0, param: {} };\n\t\t\t}\n\t\n\t\t\t/**\n\t   * Resets all information called methods.\n\t   * @memberof Mock\n\t   * @instance\n\t   * @function reset_all\n\t   * @example\n\t  mock(\"obj\").should_receive(\"something\");\n\t  mock(\"obj\").should_receive(\"something2\");\n\t  obj.something();\n\t  obj.something2();\n\t  mock(\"obj\").verify(\"something\"); // {\"total\" : 1, param : {}}\n\t  mock(\"obj\").verify(\"something2\"); // {\"total\" : 1, param : {}}\n\t  mock(\"obj\").reset_all();\n\t  mock(\"obj\").verify(\"something\"); // throw new Error(`something isn't called.`);\n\t  mock(\"obj\").verify(\"something2\"); // throw new Error(`something2 isn't called.`);\n\t   **/\n\t\n\t\t}, {\n\t\t\tkey: 'reset_all',\n\t\t\tvalue: function reset_all() {\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = _jsmockMethodFactory2.default.getData(this.getTestDouble())[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar _step$value = _slicedToArray(_step.value, 2);\n\t\n\t\t\t\t\t\tvar key = _step$value[0];\n\t\t\t\t\t\tvar value = _step$value[1];\n\t\n\t\t\t\t\t\tif (key !== 'current_obj') {\n\t\t\t\t\t\t\tvalue.record = { total: 0, param: {} };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Mock;\n\t}(_testDouble2.default);\n\t\n\t/**\n\t * @desc create mock in global.\n\t * @param {string|object|function|class} name - Mock object of name, object, function or class.\n\t * @param {string} type - Mock object of type. - mock.INSTANCE, mock.OBJECT(defalut)\n\t * @function mock\n\t * @returns {Mock}\n\t * @example\n\t// If `name` is string and `global` not found `name` object that mock create object in global.\n\tmock(\"obj\").should_receive(\"something\");\n\tmock(\"Sample\",mock.INSTANCE).should_receive(\"something\");\n\t\n\t// If `name` is object that mock don`t create object.\n\tmock(obj).should_receive(\"something\");\n\tmock(zlass).should_receive(\"something\");\n\t **/\n\t\n\t\n\tfunction mockWrap(name, type) {\n\t\tif (this instanceof Mock) {\n\t\t\tthis.createTestDouble(name, type);\n\t\t} else {\n\t\t\treturn new Mock(name, type);\n\t\t}\n\t}\n\t\n\t/**\n\t * object string\n\t * @name mock.OBJECT\n\t * @global\n\t * @example\n\tmock(\"obj\", mock.OBJECT);\n\t **/\n\tmockWrap.OBJECT = 'object';\n\t\n\t/**\n\t * instance string\n\t * @name mock.INSTANCE\n\t * @global\n\t * @example\n\tmock(\"obj\", mock.INSTANCE);\n\t **/\n\tmockWrap.INSTANCE = 'instance';\n\t\n\t/**\n\t * `anything` return special string.\n\t * If you use `anything` in `with_param` that\n\t * `should_receive` execute method regardless of parameter value.\n\t * @name mock.anything\n\t * @global\n\t * @function anything\n\t * @returns {String} - '_js_mock_anything_param'\n\t * @example\n\tmock(\"obj\").should_receive(\"something\").with_param(1,mock.anything()).and_return(\"1\");\n\t **/\n\tmockWrap.anything = function () {\n\t\treturn '_js_mock_anything_param';\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class MockMethod */\n\t\n\tvar MockMethod = function () {\n\t\t/**\n\t  * @access private\n\t  **/\n\t\n\t\tfunction MockMethod(obj, methodName) {\n\t\t\t_classCallCheck(this, MockMethod);\n\t\n\t\t\tthis.excuteObjs = new Map();\n\t\t\t// {\n\t\t\t//      key:{\n\t\t\t//          arg:[],\n\t\t\t//          type:'function',\n\t\t\t//          excute : function(){}\n\t\t\t//      }\n\t\t\t// };\n\t\t\tthis.record = { total: 0, param: {} };\n\t\t\tthis.currentParam = this.transformParamToString([]);\n\t\t\tthis.excuteObjs.set(this.currentParam, new Map());\n\t\t\tthis.setup(obj, methodName);\n\t\t}\n\t\n\t\t/**\n\t  * @access private\n\t  **/\n\t\n\t\n\t\t_createClass(MockMethod, [{\n\t\t\tkey: 'transformParamToString',\n\t\t\tvalue: function transformParamToString(obj) {\n\t\t\t\treturn JSON.stringify(obj);\n\t\t\t}\n\t\n\t\t\t/**\n\t   * @access private\n\t   **/\n\t\n\t\t}, {\n\t\t\tkey: 'setup',\n\t\t\tvalue: function setup(obj, methodName) {\n\t\t\t\tvar that = this;\n\t\t\t\tvar target = obj;\n\t\t\t\ttarget[methodName] = function () {\n\t\t\t\t\tfor (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\t\t\t\tparams[_key] = arguments[_key];\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthat.record.total++;\n\t\t\t\t\tvar argString = that.transformParamToString(params);\n\t\n\t\t\t\t\tif (that.record.param[argString]) {\n\t\t\t\t\t\tthat.record.param[argString] += 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthat.record.param[argString] = 1;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar dataObj = that.excuteObjs.get(argString);\n\t\n\t\t\t\t\tif (dataObj) {\n\t\t\t\t\t\tvar type = dataObj.get('type');\n\t\t\t\t\t\tvar excute = dataObj.get('excute');\n\t\t\t\t\t\tif (type === 'function') {\n\t\t\t\t\t\t\treturn excute.apply(dataObj, params);\n\t\t\t\t\t\t} else if (type === 'exception') {\n\t\t\t\t\t\t\tthrow excute;\n\t\t\t\t\t\t} else if (type === 'return') {\n\t\t\t\t\t\t\treturn excute;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tfor (var _iterator = that.excuteObjs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\t\tvar _step$value = _slicedToArray(_step.value, 2);\n\t\n\t\t\t\t\t\t\t\tvar info = _step$value[1];\n\t\n\t\t\t\t\t\t\t\tvar arg = info.get('arg');\n\t\t\t\t\t\t\t\tif (arg && arg.length === params.length && !arg.find(function (v, i) {\n\t\t\t\t\t\t\t\t\treturn v !== params[i] && v !== '_js_mock_anything_param';\n\t\t\t\t\t\t\t\t})) {\n\t\t\t\t\t\t\t\t\treturn info.get('excute');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\t/**\n\t   * set parameters of should_receive.\n\t   * If you use `with_param` that `and_xxx` method execute matching param.\n\t   * @instance\n\t   * @memberof MockMethod\n\t   * @param {...anything} params - list up parameters.\n\t   * @function with_param\n\t   * @returns {MockMethod}\n\t   * @example\n\t  mock(\"obj\").should_receive(\"something\").with_param(1,2).and_return(\"1\");\n\t  // obj.something(1); => not return anything\n\t  // obj.something(1, 2); => \"1\"\n\t  // You can use `mock.anything`.\n\t  mock(\"obj\").should_receive(\"something\").with_param(1,mock.anything()).and_return(\"1\");\n\t  // obj.something(1, 1); => \"1\"\n\t  // obj.something(1, 2); => \"1\"\n\t  // obj.something(1, 3); => \"1\"\n\t   **/\n\t\n\t\t}, {\n\t\t\tkey: 'with_param',\n\t\t\tvalue: function with_param() {\n\t\t\t\tfor (var _len2 = arguments.length, params = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t\t\t\t\tparams[_key2] = arguments[_key2];\n\t\t\t\t}\n\t\n\t\t\t\tthis.currentParam = this.transformParamToString(params);\n\t\t\t\tthis.excuteObjs.set(this.currentParam, new Map().set('arg', params));\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\t/**\n\t   * @access private\n\t   **/\n\t\n\t\t}, {\n\t\t\tkey: 'and_template',\n\t\t\tvalue: function and_template(type, excute) {\n\t\t\t\tthis.excuteObjs.get(this.currentParam).set('type', type).set('excute', excute);\n\t\n\t\t\t\tthis.currentParam = this.transformParamToString([]);\n\t\t\t}\n\t\t\t/**\n\t   * set return value when should_receive called.\n\t   * @instance\n\t   * @memberof MockMethod\n\t   * @param {Object} returnVal - return value\n\t   * @function and_return\n\t   * @example\n\t  mock(\"obj\").should_receive(\"something\").and_return(\"1\");\n\t  // obj.something(1); => \"1\"\n\t  // obj.something(1, 2); => \"1\"\n\t   **/\n\t\n\t\t}, {\n\t\t\tkey: 'and_return',\n\t\t\tvalue: function and_return(returnVal) {\n\t\t\t\tthis.and_template('return', returnVal);\n\t\t\t}\n\t\t\t/**\n\t   * Set execution function when should_receive called.\n\t   * @instance\n\t   * @memberof MockMethod\n\t   * @param {Function} returnFunction - execute function\n\t   * @function and_function\n\t   * @example\n\t  mock(\"obj\").should_receive(\"something\").and_function(function(){\n\t  return \"1\";\n\t  });\n\t  // obj.something(1); => \"1\"\n\t  // obj.something(1, 2); => \"1\"\n\t   **/\n\t\n\t\t}, {\n\t\t\tkey: 'and_function',\n\t\t\tvalue: function and_function(returnFunction) {\n\t\t\t\tthis.and_template('function', returnFunction);\n\t\t\t}\n\t\t\t/**\n\t   * Set exception error when should_receive called.\n\t   * @instance\n\t   * @memberof MockMethod\n\t   * @param {String} returnException - exception message\n\t   * @function and_throw\n\t   * @example\n\t  mock(\"obj\").should_receive(\"something\").and_throw(\"error\");\n\t  // obj.something(1); => new Error(\"error\")\n\t  // obj.something(1, 2); => new Error(\"error\")\n\t   **/\n\t\n\t\t}, {\n\t\t\tkey: 'and_throw',\n\t\t\tvalue: function and_throw(returnException) {\n\t\t\t\tthis.and_template('exception', returnException);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn MockMethod;\n\t}();\n\t\n\texports.default = MockMethod;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _jsmockMethod = __webpack_require__(5);\n\t\n\tvar _jsmockMethod2 = _interopRequireDefault(_jsmockMethod);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * @access private\n\t **/\n\texports.default = {\n\t\tstorage: [\n\t\t\t//      {\n\t\t\t//          current_obj : {}, object\n\t\t\t//          current_functions : {} mock method\n\t\t\t//      }\n\t\t],\n\t\tcreateData: function createData(obj) {\n\t\t\tvar dataObj = new Map().set('current_obj', obj);\n\t\t\tthis.storage.push(dataObj);\n\t\n\t\t\treturn dataObj;\n\t\t},\n\t\tcreateMethod: function createMethod(obj, methodName) {\n\t\t\treturn new _jsmockMethod2.default(obj, methodName);\n\t\t},\n\t\tgetData: function getData(obj) {\n\t\t\tvar data = this.storage.find(function (value) {\n\t\t\t\treturn value.get('current_obj') === obj;\n\t\t\t});\n\t\t\treturn data || this.createData(obj);\n\t\t},\n\t\tgetMethod: function getMethod(obj, methodName) {\n\t\t\tvar dataObj = this.getData(obj);\n\t\t\tvar methodObj = dataObj.get(methodName);\n\t\t\tif (!methodObj) {\n\t\t\t\tmethodObj = this.createMethod(obj, methodName);\n\t\t\t\tdataObj.set(methodName, methodObj);\n\t\t\t}\n\t\t\treturn methodObj;\n\t\t}\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = stubWrap;\n\t\n\tvar _jsstubMethod = __webpack_require__(8);\n\t\n\tvar _jsstubMethod2 = _interopRequireDefault(_jsstubMethod);\n\t\n\tvar _testDouble = __webpack_require__(2);\n\t\n\tvar _testDouble2 = _interopRequireDefault(_testDouble);\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\r\n\t * @access private\r\n\t **/\n\tfunction warn(msg) {\n\t\tif (_global2.default.console && console.warn) {\n\t\t\tconsole.warn(msg);\n\t\t}\n\t}\n\t\n\t/**\r\n\t * @access private\r\n\t **/\n\t\n\tvar Stub = function (_TestDouble) {\n\t\t_inherits(Stub, _TestDouble);\n\t\n\t\tfunction Stub(name) {\n\t\t\tvar type = arguments.length <= 1 || arguments[1] === undefined ? 'object' : arguments[1];\n\t\n\t\t\t_classCallCheck(this, Stub);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Stub).call(this, name, type));\n\t\n\t\t\t_this.type = 'Stub';\n\t\t\twarn('[WARN] : Deprecated Stub. You should be change to Mock.');\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Stub, [{\n\t\t\tkey: 'should_receive',\n\t\t\tvalue: function should_receive(functionName) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tthis.getTestDouble()[functionName] = function () {\n\t\t\t\t\tif (_this2.returnValue !== '_js_stub_none') {\n\t\t\t\t\t\treturn _this2.returnValue;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn new _jsstubMethod2.default(this);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Stub;\n\t}(_testDouble2.default);\n\t\n\t/**\r\n\t * @access private\r\n\t **/\n\t\n\t\n\tfunction stubWrap(name, type) {\n\t\tif (this instanceof Stub) {\n\t\t\tthis.createTestDouble(name, type);\n\t\t} else {\n\t\t\treturn new Stub(name, type);\n\t\t}\n\t}\n\t\n\t/**\r\n\t * @access private\r\n\t **/\n\tstubWrap.OBJECT = 'object';\n\t/**\r\n\t * @access private\r\n\t **/\n\tstubWrap.INSTANCE = 'instance';\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @access private\n\t **/\n\t\n\tvar StubMethod = function () {\n\t\tfunction StubMethod(stub) {\n\t\t\t_classCallCheck(this, StubMethod);\n\t\n\t\t\tthis.stub = stub;\n\t\t}\n\t\n\t\t_createClass(StubMethod, [{\n\t\t\tkey: \"and_return\",\n\t\t\tvalue: function and_return(returnValue) {\n\t\t\t\tthis.stub.returnValue = returnValue;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn StubMethod;\n\t}();\n\t\n\texports.default = StubMethod;\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** dist/jsmocktool.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 883e94e3087ca5498049\n **/","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n/* eslint-disable */\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof self !== 'undefined' && self.Math === Math ? self : Function('return this')();\n/* eslint-enable */\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/global.js\n **/","import global from './global';\n\n/**\n * @access private\n **/\nexport default class TestDouble {\n\tconstructor(name, type) {\n\t\tthis.createTestDouble(name, type);\n\t}\n\n\tcreateTestDouble(name, type) {\n\t\tthis.returnValue = '_js_testDouble_none';\n\t\tthis.testDoubleType = type;\n\n\t\tif (typeof name === 'string') {\n\t\t\tthis.makeEnableObj(name, type);\n\t\t} else if (typeof name === 'object' || typeof name === 'function') {\n\t\t\tthis.testDoubleObj = name;\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t`Name of ${this.type} is incorrect.\n\t\t\tThe Type only have String or Object or Function.`);\n\t\t}\n\t}\n\n\tgetTestDouble() {\n\t\tif (this.testDoubleType === 'object') {\n\t\t\treturn this.testDoubleObj;\n\t\t}\n\t\treturn this.testDoubleObj.prototype;\n\t}\n\n\tmakeEnableObj(name, type) {\n\t\tconst depth = name.split('.');\n\t\tlet objectName = depth[0];\n\t\tlet obj = global;\n\t\tif (depth.length > 1) {\n\t\t\tdepth.splice(0, depth.length - 1).forEach((v) => {\n\t\t\t\tif (typeof obj[v] === 'undefined') {\n\t\t\t\t\tobj[v] = {};\n\t\t\t\t}\n\t\t\t\tobj = obj[v];\n\t\t\t});\n\t\t\tobjectName = depth[depth.length - 1];\n\t\t}\n\n\t\tconst returnObj = obj[objectName];\n\t\tthis.testDoubleObj = returnObj;\n\t\tif (type === 'object' && !returnObj) {\n\t\t\tthis.testDoubleObj = obj[objectName] = {};\n\t\t} else if (type === 'instance' && !returnObj) {\n\t\t\tthis.testDoubleObj = obj[objectName] = () => {};\n\t\t\tthis.testDoubleObj.prototype = obj[objectName].prototype = {};\n\t\t}\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/testDouble.js\n **/","import stub from './stub/jsstub';\nimport mock from './mock/jsmock';\n\nexport { stub, mock };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/jsmocktool.js\n **/","import MockMethodFactory from './jsmockMethodFactory';\nimport TestDouble from '../testDouble';\n\n/** @class Mock */\nclass Mock extends TestDouble {\n\t/**\n\t * @access private\n\t **/\n\tconstructor(name, type = 'object') {\n\t\tsuper(name, type);\n\t\tthis.type = 'Mock';\n\t}\n\t/**\n\t * should_receive make method in mock.\n\t * @memberof Mock\n\t * @instance\n\t * @param {string} methodName - method name in mock.\n\t * @function should_receive\n\t * @returns {MockMethod}\n\t * @example\nmock(\"obj\").should_receive(\"something\");\n// obj.something();\n\nmock(\"Sample\",mock.INSTANCE).should_receive(\"something\");\n// let sample = new Sample();\n// sample.something();\n\n// class Test\n// end\n// let test = new Test();\nmock(test).should_receive(\"something\");\n// test.something();\n\nmock(Test,mock.INSTANCE).should_receive(\"instance\");\n// let test = new Test();\n// test.instance()\n\t **/\n\tshould_receive(methodName) {\n\t\treturn MockMethodFactory.getMethod(this.getTestDouble(), methodName);\n\t}\n\n\t/**\n\t * Return specific information called method.\n\t * @memberof Mock\n\t * @instance\n\t * @function verify\n\t * @example\nmock(\"obj\").should_receive(\"something\");\nobj.something();\nmock(\"obj\").verify(\"something\"); // {\"total\" : 1, param : {}}\n\t **/\n\tverify(methodName) {\n\t\tconst methodInfo = MockMethodFactory.getData(this.getTestDouble()).get(methodName);\n\t\tif (methodInfo) {\n\t\t\tif (methodInfo.record.total === 0) {\n\t\t\t\tthrow new Error(`${methodName} isn't called.`);\n\t\t\t} else {\n\t\t\t\treturn methodInfo.record;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(`${methodName} isn't method.`);\n\t\t}\n\t}\n\n\t/**\n\t * Return all information called methods.\n\t * @memberof Mock\n\t * @instance\n\t * @function verify_all\n\t * @example\nmock(\"obj\").should_receive(\"something\");\nmock(\"obj\").should_receive(\"something2\");\nobj.something();\nobj.something2();\n\nmock(\"obj\").verify_all();\n//{\n//\t\"something\": {total\" : 1, param : {}}\n//\t\"something2\": {total\" : 1, param : {}}\n//}\n\t **/\n\tverify_all() {\n\t\tconst obj = MockMethodFactory.getData(this.getTestDouble());\n\t\tconst returnValue = {};\n\n\t\tobj.forEach((v, i) => {\n\t\t\tif (i !== 'current_obj') returnValue[i] = this.verify(i);\n\t\t});\n\n\t\treturn returnValue;\n\t}\n\n\t/**\n\t * Resets specific information called method.\n\t * @memberof Mock\n\t * @instance\n\t * @function reset\n\t * @example\nmock(\"obj\").should_receive(\"something\");\nmock(\"obj\").should_receive(\"something2\");\nobj.something();\nobj.something2();\n\nmock(\"obj\").verify(\"something\"); // {\"total\" : 1, param : {}}\nmock(\"obj\").verify(\"something2\"); // {\"total\" : 1, param : {}}\n\nmock(\"obj\").reset(\"something\");\nmock(\"obj\").verify(\"something\"); // throw new Error(`something isn't called.`);\nmock(\"obj\").verify(\"something2\"); // {\"total\" : 1, param : {}}\n\t **/\n\treset(methodName) {\n\t\tconst obj = MockMethodFactory.getData(this.getTestDouble());\n\t\tobj.get(methodName).record = { total: 0, param: {} };\n\t}\n\n\t/**\n\t * Resets all information called methods.\n\t * @memberof Mock\n\t * @instance\n\t * @function reset_all\n\t * @example\nmock(\"obj\").should_receive(\"something\");\nmock(\"obj\").should_receive(\"something2\");\nobj.something();\nobj.something2();\nmock(\"obj\").verify(\"something\"); // {\"total\" : 1, param : {}}\nmock(\"obj\").verify(\"something2\"); // {\"total\" : 1, param : {}}\n\nmock(\"obj\").reset_all();\nmock(\"obj\").verify(\"something\"); // throw new Error(`something isn't called.`);\nmock(\"obj\").verify(\"something2\"); // throw new Error(`something2 isn't called.`);\n\t **/\n\treset_all() {\n\t\tfor (const [key, value] of MockMethodFactory.getData(this.getTestDouble())) {\n\t\t\tif (key !== 'current_obj') {\n\t\t\t\tvalue.record = { total: 0, param: {} };\n\t\t\t}\n\t\t}\n\t}\n\n\n}\n\n/**\n * @desc create mock in global.\n * @param {string|object|function|class} name - Mock object of name, object, function or class.\n * @param {string} type - Mock object of type. - mock.INSTANCE, mock.OBJECT(defalut)\n * @function mock\n * @returns {Mock}\n * @example\n// If `name` is string and `global` not found `name` object that mock create object in global.\nmock(\"obj\").should_receive(\"something\");\nmock(\"Sample\",mock.INSTANCE).should_receive(\"something\");\n\n// If `name` is object that mock don`t create object.\nmock(obj).should_receive(\"something\");\nmock(zlass).should_receive(\"something\");\n **/\nexport default function mockWrap(name, type) {\n\tif (this instanceof Mock) {\n\t\tthis.createTestDouble(name, type);\n\t} else {\n\t\treturn new Mock(name, type);\n\t}\n}\n\n/**\n * object string\n * @name mock.OBJECT\n * @global\n * @example\nmock(\"obj\", mock.OBJECT);\n **/\nmockWrap.OBJECT = 'object';\n\n/**\n * instance string\n * @name mock.INSTANCE\n * @global\n * @example\nmock(\"obj\", mock.INSTANCE);\n **/\nmockWrap.INSTANCE = 'instance';\n\n/**\n * `anything` return special string.\n * If you use `anything` in `with_param` that\n * `should_receive` execute method regardless of parameter value.\n * @name mock.anything\n * @global\n * @function anything\n * @returns {String} - '_js_mock_anything_param'\n * @example\nmock(\"obj\").should_receive(\"something\").with_param(1,mock.anything()).and_return(\"1\");\n **/\nmockWrap.anything = () => '_js_mock_anything_param';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mock/jsmock.js\n **/","\n/** @class MockMethod */\nexport default class MockMethod {\n\t/**\n\t * @access private\n\t **/\n\tconstructor(obj, methodName) {\n\t\tthis.excuteObjs = new Map();\n\t\t// {\n\t\t//      key:{\n\t\t//          arg:[],\n\t\t//          type:'function',\n\t\t//          excute : function(){}\n\t\t//      }\n\t\t// };\n\t\tthis.record = { total: 0, param: {} };\n\t\tthis.currentParam = this.transformParamToString([]);\n\t\tthis.excuteObjs.set(this.currentParam, new Map());\n\t\tthis.setup(obj, methodName);\n\t}\n\n\t/**\n\t * @access private\n\t **/\n\ttransformParamToString(obj) {\n\t\treturn JSON.stringify(obj);\n\t}\n\n\t/**\n\t * @access private\n\t **/\n\tsetup(obj, methodName) {\n\t\tconst that = this;\n\t\tconst target = obj;\n\t\ttarget[methodName] = (...params) => {\n\t\t\tthat.record.total++;\n\t\t\tconst argString = that.transformParamToString(params);\n\n\t\t\tif (that.record.param[argString]) {\n\t\t\t\tthat.record.param[argString] += 1;\n\t\t\t} else {\n\t\t\t\tthat.record.param[argString] = 1;\n\t\t\t}\n\n\t\t\tconst dataObj = that.excuteObjs.get(argString);\n\n\t\t\tif (dataObj) {\n\t\t\t\tconst type = dataObj.get('type');\n\t\t\t\tconst excute = dataObj.get('excute');\n\t\t\t\tif (type === 'function') {\n\t\t\t\t\treturn excute.apply(dataObj, params);\n\t\t\t\t} else if (type === 'exception') {\n\t\t\t\t\tthrow excute;\n\t\t\t\t} else if (type === 'return') {\n\t\t\t\t\treturn excute;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const [, info] of that.excuteObjs) {\n\t\t\t\t\tconst arg = info.get('arg');\n\t\t\t\t\tif (\n\t\t\t\t\t\targ && (arg.length === params.length) &&\n\t\t\t\t\t\t!arg.find((v, i) => (v !== params[i] && v !== '_js_mock_anything_param'))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\treturn info.get('excute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t/**\n\t * set parameters of should_receive.\n\t * If you use `with_param` that `and_xxx` method execute matching param.\n\t * @instance\n\t * @memberof MockMethod\n\t * @param {...anything} params - list up parameters.\n\t * @function with_param\n\t * @returns {MockMethod}\n\t * @example\nmock(\"obj\").should_receive(\"something\").with_param(1,2).and_return(\"1\");\n// obj.something(1); => not return anything\n// obj.something(1, 2); => \"1\"\n\n// You can use `mock.anything`.\nmock(\"obj\").should_receive(\"something\").with_param(1,mock.anything()).and_return(\"1\");\n// obj.something(1, 1); => \"1\"\n// obj.something(1, 2); => \"1\"\n// obj.something(1, 3); => \"1\"\n\t **/\n\twith_param(...params) {\n\t\tthis.currentParam = this.transformParamToString(params);\n\t\tthis.excuteObjs.set(this.currentParam, (new Map()).set('arg', params));\n\t\treturn this;\n\t}\n\n\t/**\n\t * @access private\n\t **/\n\tand_template(type, excute) {\n\t\tthis.excuteObjs\n\t\t\t.get(this.currentParam)\n\t\t\t.set('type', type)\n\t\t\t.set('excute', excute);\n\n\t\tthis.currentParam = this.transformParamToString([]);\n\t}\n\t/**\n\t * set return value when should_receive called.\n\t * @instance\n\t * @memberof MockMethod\n\t * @param {Object} returnVal - return value\n\t * @function and_return\n\t * @example\nmock(\"obj\").should_receive(\"something\").and_return(\"1\");\n// obj.something(1); => \"1\"\n// obj.something(1, 2); => \"1\"\n\t **/\n\tand_return(returnVal) {\n\t\tthis.and_template('return', returnVal);\n\t}\n\t/**\n\t * Set execution function when should_receive called.\n\t * @instance\n\t * @memberof MockMethod\n\t * @param {Function} returnFunction - execute function\n\t * @function and_function\n\t * @example\nmock(\"obj\").should_receive(\"something\").and_function(function(){\n\treturn \"1\";\n});\n// obj.something(1); => \"1\"\n// obj.something(1, 2); => \"1\"\n\t **/\n\tand_function(returnFunction) {\n\t\tthis.and_template('function', returnFunction);\n\t}\n\t/**\n\t * Set exception error when should_receive called.\n\t * @instance\n\t * @memberof MockMethod\n\t * @param {String} returnException - exception message\n\t * @function and_throw\n\t * @example\nmock(\"obj\").should_receive(\"something\").and_throw(\"error\");\n// obj.something(1); => new Error(\"error\")\n// obj.something(1, 2); => new Error(\"error\")\n\t **/\n\tand_throw(returnException) {\n\t\tthis.and_template('exception', returnException);\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mock/jsmockMethod.js\n **/","import MockMethod from './jsmockMethod';\n/**\n * @access private\n **/\nexport default {\n\tstorage: [\n\t\t//      {\n\t\t//          current_obj : {}, object\n\t\t//          current_functions : {} mock method\n\t\t//      }\n\t],\n\tcreateData(obj) {\n\t\tconst dataObj = (new Map()).set('current_obj', obj);\n\t\tthis.storage.push(dataObj);\n\n\t\treturn dataObj;\n\t},\n\tcreateMethod(obj, methodName) {\n\t\treturn new MockMethod(obj, methodName);\n\t},\n\tgetData(obj) {\n\t\tconst data = this.storage.find(value => value.get('current_obj') === obj);\n\t\treturn data || this.createData(obj);\n\t},\n\tgetMethod(obj, methodName) {\n\t\tconst dataObj = this.getData(obj);\n\t\tlet methodObj = dataObj.get(methodName);\n\t\tif (!methodObj) {\n\t\t\tmethodObj = this.createMethod(obj, methodName);\n\t\t\tdataObj.set(methodName, methodObj);\n\t\t}\n\t\treturn methodObj;\n\t},\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mock/jsmockMethodFactory.js\n **/","import StubMethod from './jsstubMethod';\r\nimport TestDouble from '../testDouble';\r\nimport global from '../global';\r\n\r\n/**\r\n * @access private\r\n **/\r\nfunction warn(msg) {\r\n\tif (global.console && console.warn) {\r\n\t\tconsole.warn(msg);\r\n\t}\r\n}\r\n\r\n/**\r\n * @access private\r\n **/\r\nclass Stub extends TestDouble {\r\n\tconstructor(name, type = 'object') {\r\n\t\tsuper(name, type);\r\n\t\tthis.type = 'Stub';\r\n\t\twarn('[WARN] : Deprecated Stub. You should be change to Mock.');\r\n\t}\r\n\tshould_receive(functionName) {\r\n\t\tthis.getTestDouble()[functionName] = () => {\r\n\t\t\tif (this.returnValue !== '_js_stub_none') {\r\n\t\t\t\treturn this.returnValue;\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn new StubMethod(this);\r\n\t}\r\n}\r\n\r\n/**\r\n * @access private\r\n **/\r\nexport default function stubWrap(name, type) {\r\n\tif (this instanceof Stub) {\r\n\t\tthis.createTestDouble(name, type);\r\n\t} else {\r\n\t\treturn new Stub(name, type);\r\n\t}\r\n}\r\n\r\n/**\r\n * @access private\r\n **/\r\nstubWrap.OBJECT = 'object';\r\n/**\r\n * @access private\r\n **/\r\nstubWrap.INSTANCE = 'instance';\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stub/jsstub.js\n **/","/**\n * @access private\n **/\nexport default class StubMethod {\n\tconstructor(stub) {\n\t\tthis.stub = stub;\n\t}\n\n\tand_return(returnValue) {\n\t\tthis.stub.returnValue = returnValue;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stub/jsstubMethod.js\n **/"],"sourceRoot":""}